{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s]+"},"docs":[{"location":"index.html","text":"SORMAS SORMAS (Surveillance Outbreak Response Management and Analysis System) is an open source eHealth system - consisting of separate web and mobile apps - that is geared towards optimizing the processes used in monitoring the spread of infectious diseases and responding to outbreak situations. FAQ (Frequently Asked Questions) How Does it Work? You can give SORMAS a try on our demo server at https://demoversion.sormas-oegd.de ! How Can I Get Involved? Read through our Contributing Readme and contact us at sormas@helmholtz-hzi.de or join our developer chat on Gitter to learn how you can help to drive the development of SORMAS forward and to get development support from our core developers. SORMAS is a community-driven project, and we'd love to have you on board! If you want to contribute to the code, please strictly adhere to the Development Environment guide to ensure that everything is set up correctly. Please also make sure that you've read the Development Contributing Guidelines before you start to develop, and either follow or regularly check our Twitter account @SORMASDev to stay up to date with our schedule, new releases, guideline changes and other announcements. How Can I Report a Bug or Request a Feature? If you want to report a security issue , please read and follow our Security Policies . For bugs without security implications, change and feature requests, please create a new issue and read the Submitting an Issue guide for more detailed instructions. We appreciate your help! Which Browsers and Android Versions Are Supported? SORMAS officially supports and is tested on Chromium-based browsers (like Google Chrome) and Mozilla Firefox , and all Android versions starting from Android 7.0 (Nougat). In principle, SORMAS should be usable with all web browsers that are supported by Vaadin 8 (Chrome, Firefox, Safari, Edge, Internet Explorer 11; see https://vaadin.com/faq ). Making use of the SORMAS web application through a mobile device web browser is possible and acceptable also in countries that are subject to the General Data Protection Regulation (GDPR) as enforced by the European Union. However, in such countries that are subject to the GDPR, the Android application (.apk file) for SORMAS should not be used on mobile devices until further notice. Is there a ReST API documentation? Yes! Please download the latest release and copy the content of /deploy/openapi/sormas-rest.yaml to an editor that generates a visual API documentation(e.g. https://editor.swagger.io/ ). A runtime Swagger documentation of the External Visits Resource (used by external symptom journals such as CLIMEDO or PIA) is available at <<host>>/sormas-rest/openapi.json or <<host>>/sormas-rest/openapi.yaml Guidelines and Resources If you want to learn more about the development and contribution process, setting up or customizing your own system, or technical details, please consider the following guides and resources available in this repository. You can also view this readme and all guides outside the Wiki with a full table of content and search functionality here: https://hzi-braunschweig.github.io/SORMAS-Project/ GitHub Wiki - Our wiki contains additional guides for server customization and development instructions. Please have a look at it if you need information on anything that this readme does not contain. Contributing Guidelines - These are mandatory literature if you want to contribute to this respository in any way (e.g. by submitting issues, developing code, or translating SORMAS into new languages). Development Environment Setup Instructions - If you want to get involved with development, this guide tells you how to correctly set up your system in order to contribute to the code in adherence with codestyle guidelines, development practices, etc. Troubleshooting - A collection of solutions to common (mostly development) problems. Please consult this readme when encountering issues before issuing a support request. Server Customization - If you are maintaining a SORMAS server or are a developer, this guide explains core concepts such as turning features on or off, importing infrastructure data or adjusting the configuration file. Internationalization - SORMAS can be translated in any language by using the open source tool Crowdin ; this resource explains how this process is working. Disease Definition Instructions - We already support a large number of diseases, but not all of them are fully configured for case-based surveillance, and some might not be part of SORMAS at all yet; if you need SORMAS to support a specific disease, please use these instructions to give us all the information we need in order to extend the software with your requested disease. Security Policies - These contain important information about how to report security problems and the processes we are using to take care of them. 3rd Party License Acknowledgement - This resource contains the names and license copies of external resources that SORMAS is using. If you want to set up a SORMAS instance for production, testing or development purposes, please refer to the following guides: * Installing a SORMAS Server * Installing a SORMAS Server for Development * Updating a SORMAS Server * Creating a Demo Android App Project Structure The project consists of the following modules: sormas-api: General business logic and definitions for data exchange between app and server sormas-app: The Android app sormas-backend: Server entity services, facades, etc. sormas-base: Base project that also contains build scripts sormas-base/dependencies: Dependencies to be deployed with the payara server sormas-cargoserver: Setup for a local dev server using maven-cargo sormas-e2e-rest-tests: Automated tests addressing the ReST interface sormas-e2e-ui-tests: Automated frontend tests addressing sormas-ui sormas-ear: The ear needed to build the application sormas-keycloak-service-provider: Custom Keycloak SPI for SORMAS sormas-rest: The REST interface; see sormas-rest/README.md sormas-ui: The web application sormas-widgetset: The GWT widgetset generated by Vaadin sormas-e2e-tests: Automated tests addressing the sormas-ui, and the ReST interface","title":"Home"},{"location":"index.html#sormas","text":"SORMAS (Surveillance Outbreak Response Management and Analysis System) is an open source eHealth system - consisting of separate web and mobile apps - that is geared towards optimizing the processes used in monitoring the spread of infectious diseases and responding to outbreak situations.","title":"SORMAS"},{"location":"index.html#faq-frequently-asked-questions","text":"","title":"FAQ (Frequently Asked Questions)"},{"location":"index.html#how-does-it-work","text":"You can give SORMAS a try on our demo server at https://demoversion.sormas-oegd.de !","title":"How Does it Work?"},{"location":"index.html#how-can-i-get-involved","text":"Read through our Contributing Readme and contact us at sormas@helmholtz-hzi.de or join our developer chat on Gitter to learn how you can help to drive the development of SORMAS forward and to get development support from our core developers. SORMAS is a community-driven project, and we'd love to have you on board! If you want to contribute to the code, please strictly adhere to the Development Environment guide to ensure that everything is set up correctly. Please also make sure that you've read the Development Contributing Guidelines before you start to develop, and either follow or regularly check our Twitter account @SORMASDev to stay up to date with our schedule, new releases, guideline changes and other announcements.","title":"How Can I Get Involved?"},{"location":"index.html#how-can-i-report-a-bug-or-request-a-feature","text":"If you want to report a security issue , please read and follow our Security Policies . For bugs without security implications, change and feature requests, please create a new issue and read the Submitting an Issue guide for more detailed instructions. We appreciate your help!","title":"How Can I Report a Bug or Request a Feature?"},{"location":"index.html#which-browsers-and-android-versions-are-supported","text":"SORMAS officially supports and is tested on Chromium-based browsers (like Google Chrome) and Mozilla Firefox , and all Android versions starting from Android 7.0 (Nougat). In principle, SORMAS should be usable with all web browsers that are supported by Vaadin 8 (Chrome, Firefox, Safari, Edge, Internet Explorer 11; see https://vaadin.com/faq ). Making use of the SORMAS web application through a mobile device web browser is possible and acceptable also in countries that are subject to the General Data Protection Regulation (GDPR) as enforced by the European Union. However, in such countries that are subject to the GDPR, the Android application (.apk file) for SORMAS should not be used on mobile devices until further notice.","title":"Which Browsers and Android Versions Are Supported?"},{"location":"index.html#is-there-a-rest-api-documentation","text":"Yes! Please download the latest release and copy the content of /deploy/openapi/sormas-rest.yaml to an editor that generates a visual API documentation(e.g. https://editor.swagger.io/ ). A runtime Swagger documentation of the External Visits Resource (used by external symptom journals such as CLIMEDO or PIA) is available at <<host>>/sormas-rest/openapi.json or <<host>>/sormas-rest/openapi.yaml","title":"Is there a ReST API documentation?"},{"location":"index.html#guidelines-and-resources","text":"If you want to learn more about the development and contribution process, setting up or customizing your own system, or technical details, please consider the following guides and resources available in this repository. You can also view this readme and all guides outside the Wiki with a full table of content and search functionality here: https://hzi-braunschweig.github.io/SORMAS-Project/ GitHub Wiki - Our wiki contains additional guides for server customization and development instructions. Please have a look at it if you need information on anything that this readme does not contain. Contributing Guidelines - These are mandatory literature if you want to contribute to this respository in any way (e.g. by submitting issues, developing code, or translating SORMAS into new languages). Development Environment Setup Instructions - If you want to get involved with development, this guide tells you how to correctly set up your system in order to contribute to the code in adherence with codestyle guidelines, development practices, etc. Troubleshooting - A collection of solutions to common (mostly development) problems. Please consult this readme when encountering issues before issuing a support request. Server Customization - If you are maintaining a SORMAS server or are a developer, this guide explains core concepts such as turning features on or off, importing infrastructure data or adjusting the configuration file. Internationalization - SORMAS can be translated in any language by using the open source tool Crowdin ; this resource explains how this process is working. Disease Definition Instructions - We already support a large number of diseases, but not all of them are fully configured for case-based surveillance, and some might not be part of SORMAS at all yet; if you need SORMAS to support a specific disease, please use these instructions to give us all the information we need in order to extend the software with your requested disease. Security Policies - These contain important information about how to report security problems and the processes we are using to take care of them. 3rd Party License Acknowledgement - This resource contains the names and license copies of external resources that SORMAS is using. If you want to set up a SORMAS instance for production, testing or development purposes, please refer to the following guides: * Installing a SORMAS Server * Installing a SORMAS Server for Development * Updating a SORMAS Server * Creating a Demo Android App","title":"Guidelines and Resources"},{"location":"index.html#project-structure","text":"The project consists of the following modules: sormas-api: General business logic and definitions for data exchange between app and server sormas-app: The Android app sormas-backend: Server entity services, facades, etc. sormas-base: Base project that also contains build scripts sormas-base/dependencies: Dependencies to be deployed with the payara server sormas-cargoserver: Setup for a local dev server using maven-cargo sormas-e2e-rest-tests: Automated tests addressing the ReST interface sormas-e2e-ui-tests: Automated frontend tests addressing sormas-ui sormas-ear: The ear needed to build the application sormas-keycloak-service-provider: Custom Keycloak SPI for SORMAS sormas-rest: The REST interface; see sormas-rest/README.md sormas-ui: The web application sormas-widgetset: The GWT widgetset generated by Vaadin sormas-e2e-tests: Automated tests addressing the sormas-ui, and the ReST interface","title":"Project Structure"},{"location":"3RD_PARTY_ACK.html","text":"3rd Party License Acknowledgement Country flags in sormas-ui/src/main/webapp/VAADIN/themes/sormas/img/flag-icons/ are licensed under MIT: Copyright (c) 2017 Go Squared Ltd. http://www.gosquared.com/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Acknowledgements"},{"location":"3RD_PARTY_ACK.html#3rd-party-license-acknowledgement","text":"Country flags in sormas-ui/src/main/webapp/VAADIN/themes/sormas/img/flag-icons/ are licensed under MIT: Copyright (c) 2017 Go Squared Ltd. http://www.gosquared.com/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"3rd Party License Acknowledgement"},{"location":"ADDING_LICENSE.html","text":"Adding License Headers License Header Use the following header for all newly created source files: SORMAS\u00ae - Surveillance Outbreak Response Management & Analysis System Copyright \u00a9 2016-2020 Helmholtz-Zentrum f\u00fcr Infektionsforschung GmbH (HZI) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Eclipse Use eclipse's Releng tool to automatically add license headers to all relevant source files (see here for a usage guide) After installing the tool from the marketplace, open Window > Preferences > Copyright Tool and paste the license header from above into the template text area Make sure to select \"Replace all existing copyright comments with this copyright template\" and especially \"Skip over XML files\" (to make sure that headers don't get added to e.g. build files) Whenever you create a new source file: Right click on the file and select \"Fix Copyrights\" Android Studio/IntelliJ Open File > Settings > Editor > Copyright > Copyright Profiles Create a new profile and paste the license header from above into the Copyright text area Head back to the general Copyright settings and select the new copyright profile as the \"Default project copyright\" (Optional: If the year has changed, right click on all projects containing manual code and select \"Update Copyright...\", select \"Custom Scope\" and in the dropdown, select \"Project Source Files\"; Click \"Ok\" and wait until the copyright has been added to/changed for all files) Android Studio automatically adds the copyright to newly created files afterwards","title":"Licensing"},{"location":"ADDING_LICENSE.html#adding-license-headers","text":"","title":"Adding License Headers"},{"location":"ADDING_LICENSE.html#license-header","text":"Use the following header for all newly created source files: SORMAS\u00ae - Surveillance Outbreak Response Management & Analysis System Copyright \u00a9 2016-2020 Helmholtz-Zentrum f\u00fcr Infektionsforschung GmbH (HZI) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.","title":"License Header"},{"location":"ADDING_LICENSE.html#eclipse","text":"Use eclipse's Releng tool to automatically add license headers to all relevant source files (see here for a usage guide) After installing the tool from the marketplace, open Window > Preferences > Copyright Tool and paste the license header from above into the template text area Make sure to select \"Replace all existing copyright comments with this copyright template\" and especially \"Skip over XML files\" (to make sure that headers don't get added to e.g. build files) Whenever you create a new source file: Right click on the file and select \"Fix Copyrights\"","title":"Eclipse"},{"location":"ADDING_LICENSE.html#android-studiointellij","text":"Open File > Settings > Editor > Copyright > Copyright Profiles Create a new profile and paste the license header from above into the Copyright text area Head back to the general Copyright settings and select the new copyright profile as the \"Default project copyright\" (Optional: If the year has changed, right click on all projects containing manual code and select \"Update Copyright...\", select \"Custom Scope\" and in the dropdown, select \"Project Source Files\"; Click \"Ok\" and wait until the copyright has been added to/changed for all files) Android Studio automatically adds the copyright to newly created files afterwards","title":"Android Studio/IntelliJ"},{"location":"ADDING_LICENSE_es-CU.html","text":"Agregar encabezados de licencia Encabezado de licencia Utilice el siguiente encabezado para todos los archivos de c\u00f3digo fuente de nueva creaci\u00f3n: SORMAS\u00ae - Surveillance Outbreak Response Management & Analysis System Copyright \u00a9 2016-2020 Helmholtz-Zentrum f\u00fcr Infektionsforschung GmbH (HZI) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Eclipse Utilice la herramienta Releng de eclipse para agregar autom\u00e1ticamente encabezados de licencia a todos los archivos de c\u00f3digo fuente relevantes (vea https://www.codejava.net/ides/eclipse/how-to-add-copyright-license-header-for-java-source-files-in-eclipse para una gu\u00eda de uso) Despu\u00e9s de instalar la herramienta, abra Window > Preferences > Copyright Tool, y pegue el encabezado de licencia de arriba en el \u00e1rea de texto de la plantilla Aseg\u00farese de seleccionar \"Replace all existing copyright comments with this copyright template\" y especialmente \"Skip over XML files\" (para asegurar que los encabezados no se agreguen a, por ejemplo, archivos de build) Siempre que cree un nuevo archivo de c\u00f3digo fuente: haga clic derecho en el archivo y seleccione \"Fix Copyrights\" Android Studio/IntelliJ Abra File > Settings > Editor > Copyright > Copyright Profiles Cree un nuevo perfil y pegue el encabezado de licencia de arriba en el \u00e1rea de texto Copyright Vuelva a las preferencias generales de Copyright y seleccione el nuevo perfil como \"Default project copyright\" (Opcional: Si el a\u00f1o ha cambiado, haga clic derecho en todos los proyectos que contengan c\u00f3digo manual, y seleccione \"Update Copyright...\", seleccione \"Custom Scope\" y, en el men\u00fa desplegable, seleccione \"Project Source Files\"; haga clic en \"Ok\" y espere hasta que la licencia se haya agregado/cambiado en todos los archivos) Posteriormente, Android Studio agrega autom\u00e1ticamente la licencia a los archivos de nueva creaci\u00f3n","title":"Agregar encabezados de licencia"},{"location":"ADDING_LICENSE_es-CU.html#agregar-encabezados-de-licencia","text":"","title":"Agregar encabezados de licencia"},{"location":"ADDING_LICENSE_es-CU.html#encabezado-de-licencia","text":"Utilice el siguiente encabezado para todos los archivos de c\u00f3digo fuente de nueva creaci\u00f3n: SORMAS\u00ae - Surveillance Outbreak Response Management & Analysis System Copyright \u00a9 2016-2020 Helmholtz-Zentrum f\u00fcr Infektionsforschung GmbH (HZI) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.","title":"Encabezado de licencia"},{"location":"ADDING_LICENSE_es-CU.html#eclipse","text":"Utilice la herramienta Releng de eclipse para agregar autom\u00e1ticamente encabezados de licencia a todos los archivos de c\u00f3digo fuente relevantes (vea https://www.codejava.net/ides/eclipse/how-to-add-copyright-license-header-for-java-source-files-in-eclipse para una gu\u00eda de uso) Despu\u00e9s de instalar la herramienta, abra Window > Preferences > Copyright Tool, y pegue el encabezado de licencia de arriba en el \u00e1rea de texto de la plantilla Aseg\u00farese de seleccionar \"Replace all existing copyright comments with this copyright template\" y especialmente \"Skip over XML files\" (para asegurar que los encabezados no se agreguen a, por ejemplo, archivos de build) Siempre que cree un nuevo archivo de c\u00f3digo fuente: haga clic derecho en el archivo y seleccione \"Fix Copyrights\"","title":"Eclipse"},{"location":"ADDING_LICENSE_es-CU.html#android-studiointellij","text":"Abra File > Settings > Editor > Copyright > Copyright Profiles Cree un nuevo perfil y pegue el encabezado de licencia de arriba en el \u00e1rea de texto Copyright Vuelva a las preferencias generales de Copyright y seleccione el nuevo perfil como \"Default project copyright\" (Opcional: Si el a\u00f1o ha cambiado, haga clic derecho en todos los proyectos que contengan c\u00f3digo manual, y seleccione \"Update Copyright...\", seleccione \"Custom Scope\" y, en el men\u00fa desplegable, seleccione \"Project Source Files\"; haga clic en \"Ok\" y espere hasta que la licencia se haya agregado/cambiado en todos los archivos) Posteriormente, Android Studio agrega autom\u00e1ticamente la licencia a los archivos de nueva creaci\u00f3n","title":"Android Studio/IntelliJ"},{"location":"CONTRIBUTING.html","text":"Contributing Guidelines If you want to contribute to SORMAS by any means - for example by submitting a bug report, requesting a new feature, translating the application into a new language, or actively contributing to the source code -, please make sure to read through and follow these guidelines. This allows us to consider and process your contribution as quickly and smoothly as possible. If there is anything unclear to you or you think that this guide is lacking coverage of a specific topic, please create a support issue or get in touch with us via Gitter . Table of Contents Submitting an Issue Bug Report Change Request Feature Request Support Request Contributing to the Project Contributing to the Code Development Contributing Guidelines Picking Issues for Development Submitting Pull Requests Submitting an Issue Before creating a new issue, please search the repository for similar issues first to avoid duplicates! You can do this by using the search field in the menu bar. If you find an issue that already covers your request or seems very similar, please comment on that issue. Please make sure to always use one of the templates that are automatically presented to you when creating a new issue because it ensures that your issue is structured and ideally contains all the information that we need. Please add information to every mandatory section of the issue templates, and try to fill in the optional sections if possible. Please note that we might have to close issues that are not created this way. If you want to report a security issue , please follow our guidelines for Responsible Disclosure . Bug Report Bug reports cover everything that leads to the application behaving in an unintended way, including crashes, unexpected error messages, data loss, etc. If something seems to be working correctly but does not necessarily match your expectations of how it should be working, please consider opening a change request instead. Bug Description: A description of what exactly happened, where it happened and under which circumstances. Provide as many details as possible, even if they might seem irrelevant to you. Steps to Reproduce: If possible, provide a step-by-step instruction on the order of actions you performed before the bug occurred. This helps us to reproduce it on our system. Generally optional , but likely necessary for more complex bugs. Expected Behavior: Quickly describe what you believe should have happened instead of the error you got. Optional when the error is identified by a crash or an error message, but likely necessary if the bug is the result of a misbehavior of the application. Screenshots: If possible, make at least one screenshot of the bug and include it in your bug report. You can do this by simply dragging-and-dropping the image file into the template you're filling out. Optional , but very helpful for us. System Details: Tell us which device you were using, on which SORMAS version the error occurred and, depending on whether you were using the mobile app or the web app, your Android version or web browser. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional . Change Request Change requests cover features that are already part of SORMAS. This primarily includes aspects (or whole features) for which you would like to request an altered behavior, but also small extensions (e.g. additional values being added to a dropdown field). Feature Description: Please describe the feature you would like us to change like it is in SORMAS right now. If it is about a relatively big or a very general feature, namig it briefly might be enough. If it is about a very specific detail of said feature, please try to be more specific. Problem Description: Tell us why you want us to change the feature and what you believe is wrong or could be improved about the way it is currently designed. Proposed Change: Describe in as much detail as possible how you would like us to change the feature and what the expected outcome of your request should look like. Possible Alternatives: If possible, provide alternative solutions in case your proposed change can not be implemented for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional . Feature Request These types of issue cover everything that involves adding new features to SORMAS. This includes both very large additions like completely new app sections, but also smaller ones like adding a new field to an existing form. Situation Description: Please describe why your proposed feature is required, why SORMAS in its current state is not able to do what you want it to do, and in which way it would benefit from your feature being implemented. Feature Description: Describe in as much detail as possible how your proposed feature should look like and what it should do. Possible Alternatives: If possible, provide alternative solutions in case your proposed feature can not be implemented in the way you outlined it for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional . Task A task that needs to be done but does not directly change anything about the product. This could for example be the preparation of an upcoming feature/change, optimization of processes on GitHub, or update of one of the guides or Wiki articles in this repository. Problem Description: Please describe the requirement or problem that is supposed to be solved. Proposed Solution: Describe in as much detail how the proposed solution should look like and what should be done in order to achieve it. Possible Alternatives: If possible, provide alternative solutions in case your proposed change can not be realized for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to the task, you can put it here. Optional . Support Request If you have problems setting up a SORMAS server or your development environment, don't know how a specific functionality in SORMAS is supposed to work, or have any other request that is not directly associated with a bug report, change or feature request, a support request is likely the correct type of issue for your concern. Alternatively, you can join our Gitter channel and ask your question over there which might potentially give you a quicker and more comfortable way to talk about your request. If your request is about a specific problem, please make sure to provide as much information as possible. Contributing to the Project There are a lot of ways in which you can contribute to this project as a non-developer. If there is something you would like to do that you don't find instructions about here - or if you want to learn how you can get involved - please contact us at sormas@helmholtz-hzi.de and let us know how we can assist you! Some possibilities to contribute to SORMAS are: * Helping with translation * Defining new diseases Contributing to the Code If you're interested in participating in the development of SORMAS, please follow the Development Environment Setup Instructions before you start developing. If you have problems setting up your development environment or need assistance in choosing the first issue to work on, please get in touch with us by joining our Gitter channel or contacting us at sormas@helmholtz-hzi.de. Additionally, our Wiki contains some specific development guides that cover common issues like adding new fields to an entity that we suggest to check out before you start implementing something related to those topics. Development Contributing Guidelines In addition to the guidelines covered in the Development Environment Setup Instructions, please ensure to adhere to the following principles and procedures while developing code for SORMAS: Remember to always apply code formatting and import reordering for all classes you work on; we recommend to use the Save Actions plugin as described in the setup instructions instead of manually executing these steps. Some code formatting rules can't be enforced by the code formatter. Please make sure to write your code in accordance to the following rules: When defining a method, enter a blank line before starting to write its body (except for methods with only one line of code, e.g. most getters and setters). Use a blank line to separate logical blocks of code within a method. Apart from those, don't use blank lines where they are not necessarily needed to keep the code compact and readable. Don't use blank lines after the last statement of a block, but a closing } with proper indentation in the next line instead. Don't use blank lines between two closing } . You can use //@formatter:off and //@formatter:on to encapsulate code blocks that you don't want automatic code formatting to be applied to, e.g. because it would mess up readability. Please only use this if really needed and try to use proper indentation nonetheless. Separate code and comments, i.e. write the comment in a separate line before the statement that you want to explain. When you create new classes, please add license headers to them according to the Adding License Headers guide Commit messages have to be related to a specific issue on GitHub and reference its issue number as well as include a short description on what has been done in the commit. We might reject pull requests that violate this principle and ask you to re-submit it with proper commit messages. An acceptable commit message could look like this: 61 - added model to define classification, apply automatic case classification whenever a field value changes Picking Issues for Development When picking tasks for development, you can either search the repository for existing issues that you would like to work on, or you can submit your own issues if you don't find any that cover your topic of interest (see the \"Submitting an Issue\" section of this guide). While it is not mandatory, we heavily suggest to mark issues that you want to work on with the approval requested label and wait for one of the core developers to respond to the issue in one of the following ways. If you didn't create the issue yourself but picked an existing one, please also add a comment to indicate that you would like to work on it. The developer might request clarification concerning the specifications of the issue; please try to to answer their questions or extend the issue description and wait for their feedback. The developer might suggest changes to the functional or technical specifications to ensure that it fits the overall vision of the application; please confirm these suggestions or discuss them with the developer if you don't agree with them. The developer might approve the issue by adding an approval comment and removing the approval requested label. This means that we believe that the specifications are complete and the purpose of the issue serves the overall vision of SORMAS. At this point you can start development on the issue. The developer might ask you to pick another issue for development. This will usually only happen if the issue you have requested approval for is already planned to be developed by the core development team for the current or next milestone. The developer might reject the issue altogether. This will usually only happen if it doesn't fit the overall vision of the application at all or is a duplicate, and most of the time we will discuss this with you before closing the issue. The advantage of adhering to this process is that you can be sure that there won't be any major change requests in terms of functional or technical specifications once you've submitted a pull request containing your work, and that discussions concerning these topics can be led and finished before starting development. If you have labeled an issue with approval requested but don't receive any feedback on it for a few days, please add a comment that directly tags @MateStrysewske , @MartinWahnschaffe or @markusmann-vg . Submitting Pull Requests Contributing to the SORMAS code requires you to submit pull requests that will be reviewed by one of our core developers. Once a pull request has been submitted to our repository, a developer will either assign themselves as its reviewer or we will get back to you in case we won't be able to review it in time. This may e.g. happen if your pull request involves a lot of technical changes that we would like to merge together with other issues of the same nature or that could potentially break a lot of logic. Usually though, the general process looks like this: A developer assigns themselves as the reviewer of your pull request. Please wait until the review is done; if you think that the review is taking too long, feel free to add a comment to the pull request as a reminder to the developer. The developer might request changes to the code. If that's the case, please implement the requested changes or answer to their change request if you have questions or don't agree with a specific part of the request. Once you've implemented all requested changes, please request another review by the assigned developer by clicking on the \"Re-request review\" icon next to their name. As soon as the developer is happy with the submitted code (which might require multiple iterations of step 2 and 3, especially for larger pull requests), they will merge it into the development branch and close the pull request. Please adhere to the following principles when submitting pull requests: Only submit pull requests that are directly associated with ideally one specific issue in our GitHub repository. If there is no issue for the development work that you would like to do, create one before you start working on it. Link your pull request to the issue(s) that they are associated with. This can be done either by using the \"Linked issues\" section at the right side when viewing a pull request, or by adding the keyword \"Closes\" or \"Fixes\" followed by the issue number to the pull request description (e.g. \"Closes #61\"). Make sure that your pull request has a meaningful title. By default, GitHub will use your commit message as the title which might not be appropriate. In general, using the same name as the linked issue is a good rule of thumb. Try to not use force-push when updating an existing pull request (e.g. after changes have been requested or because you need to resolve merge conflicts). Ideally, your pull request should pass the checks done by the automatic CI pipeline before it gets reviewed. If that's not the case, please make sure that your branch is up-to-date with the current development branch. If the checks also fail for the development branch, you're not required to do anything. In any other case, please fix the issues (most likely failed unit tests) before requesting another review.","title":"Contributing"},{"location":"CONTRIBUTING.html#contributing-guidelines","text":"If you want to contribute to SORMAS by any means - for example by submitting a bug report, requesting a new feature, translating the application into a new language, or actively contributing to the source code -, please make sure to read through and follow these guidelines. This allows us to consider and process your contribution as quickly and smoothly as possible. If there is anything unclear to you or you think that this guide is lacking coverage of a specific topic, please create a support issue or get in touch with us via Gitter .","title":"Contributing Guidelines"},{"location":"CONTRIBUTING.html#table-of-contents","text":"Submitting an Issue Bug Report Change Request Feature Request Support Request Contributing to the Project Contributing to the Code Development Contributing Guidelines Picking Issues for Development Submitting Pull Requests","title":"Table of Contents"},{"location":"CONTRIBUTING.html#submitting-an-issue","text":"Before creating a new issue, please search the repository for similar issues first to avoid duplicates! You can do this by using the search field in the menu bar. If you find an issue that already covers your request or seems very similar, please comment on that issue. Please make sure to always use one of the templates that are automatically presented to you when creating a new issue because it ensures that your issue is structured and ideally contains all the information that we need. Please add information to every mandatory section of the issue templates, and try to fill in the optional sections if possible. Please note that we might have to close issues that are not created this way. If you want to report a security issue , please follow our guidelines for Responsible Disclosure .","title":"Submitting an Issue"},{"location":"CONTRIBUTING.html#bug-report","text":"Bug reports cover everything that leads to the application behaving in an unintended way, including crashes, unexpected error messages, data loss, etc. If something seems to be working correctly but does not necessarily match your expectations of how it should be working, please consider opening a change request instead. Bug Description: A description of what exactly happened, where it happened and under which circumstances. Provide as many details as possible, even if they might seem irrelevant to you. Steps to Reproduce: If possible, provide a step-by-step instruction on the order of actions you performed before the bug occurred. This helps us to reproduce it on our system. Generally optional , but likely necessary for more complex bugs. Expected Behavior: Quickly describe what you believe should have happened instead of the error you got. Optional when the error is identified by a crash or an error message, but likely necessary if the bug is the result of a misbehavior of the application. Screenshots: If possible, make at least one screenshot of the bug and include it in your bug report. You can do this by simply dragging-and-dropping the image file into the template you're filling out. Optional , but very helpful for us. System Details: Tell us which device you were using, on which SORMAS version the error occurred and, depending on whether you were using the mobile app or the web app, your Android version or web browser. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional .","title":"Bug Report"},{"location":"CONTRIBUTING.html#change-request","text":"Change requests cover features that are already part of SORMAS. This primarily includes aspects (or whole features) for which you would like to request an altered behavior, but also small extensions (e.g. additional values being added to a dropdown field). Feature Description: Please describe the feature you would like us to change like it is in SORMAS right now. If it is about a relatively big or a very general feature, namig it briefly might be enough. If it is about a very specific detail of said feature, please try to be more specific. Problem Description: Tell us why you want us to change the feature and what you believe is wrong or could be improved about the way it is currently designed. Proposed Change: Describe in as much detail as possible how you would like us to change the feature and what the expected outcome of your request should look like. Possible Alternatives: If possible, provide alternative solutions in case your proposed change can not be implemented for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional .","title":"Change Request"},{"location":"CONTRIBUTING.html#feature-request","text":"These types of issue cover everything that involves adding new features to SORMAS. This includes both very large additions like completely new app sections, but also smaller ones like adding a new field to an existing form. Situation Description: Please describe why your proposed feature is required, why SORMAS in its current state is not able to do what you want it to do, and in which way it would benefit from your feature being implemented. Feature Description: Describe in as much detail as possible how your proposed feature should look like and what it should do. Possible Alternatives: If possible, provide alternative solutions in case your proposed feature can not be implemented in the way you outlined it for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to your request, you can put it here. Optional .","title":"Feature Request"},{"location":"CONTRIBUTING.html#task","text":"A task that needs to be done but does not directly change anything about the product. This could for example be the preparation of an upcoming feature/change, optimization of processes on GitHub, or update of one of the guides or Wiki articles in this repository. Problem Description: Please describe the requirement or problem that is supposed to be solved. Proposed Solution: Describe in as much detail how the proposed solution should look like and what should be done in order to achieve it. Possible Alternatives: If possible, provide alternative solutions in case your proposed change can not be realized for any reason. This is generally optional but might be requested at a later point in time. Additional Information: If there is anything else you want to add to the task, you can put it here. Optional .","title":"Task"},{"location":"CONTRIBUTING.html#support-request","text":"If you have problems setting up a SORMAS server or your development environment, don't know how a specific functionality in SORMAS is supposed to work, or have any other request that is not directly associated with a bug report, change or feature request, a support request is likely the correct type of issue for your concern. Alternatively, you can join our Gitter channel and ask your question over there which might potentially give you a quicker and more comfortable way to talk about your request. If your request is about a specific problem, please make sure to provide as much information as possible.","title":"Support Request"},{"location":"CONTRIBUTING.html#contributing-to-the-project","text":"There are a lot of ways in which you can contribute to this project as a non-developer. If there is something you would like to do that you don't find instructions about here - or if you want to learn how you can get involved - please contact us at sormas@helmholtz-hzi.de and let us know how we can assist you! Some possibilities to contribute to SORMAS are: * Helping with translation * Defining new diseases","title":"Contributing to the Project"},{"location":"CONTRIBUTING.html#contributing-to-the-code","text":"If you're interested in participating in the development of SORMAS, please follow the Development Environment Setup Instructions before you start developing. If you have problems setting up your development environment or need assistance in choosing the first issue to work on, please get in touch with us by joining our Gitter channel or contacting us at sormas@helmholtz-hzi.de. Additionally, our Wiki contains some specific development guides that cover common issues like adding new fields to an entity that we suggest to check out before you start implementing something related to those topics.","title":"Contributing to the Code"},{"location":"CONTRIBUTING.html#development-contributing-guidelines","text":"In addition to the guidelines covered in the Development Environment Setup Instructions, please ensure to adhere to the following principles and procedures while developing code for SORMAS: Remember to always apply code formatting and import reordering for all classes you work on; we recommend to use the Save Actions plugin as described in the setup instructions instead of manually executing these steps. Some code formatting rules can't be enforced by the code formatter. Please make sure to write your code in accordance to the following rules: When defining a method, enter a blank line before starting to write its body (except for methods with only one line of code, e.g. most getters and setters). Use a blank line to separate logical blocks of code within a method. Apart from those, don't use blank lines where they are not necessarily needed to keep the code compact and readable. Don't use blank lines after the last statement of a block, but a closing } with proper indentation in the next line instead. Don't use blank lines between two closing } . You can use //@formatter:off and //@formatter:on to encapsulate code blocks that you don't want automatic code formatting to be applied to, e.g. because it would mess up readability. Please only use this if really needed and try to use proper indentation nonetheless. Separate code and comments, i.e. write the comment in a separate line before the statement that you want to explain. When you create new classes, please add license headers to them according to the Adding License Headers guide Commit messages have to be related to a specific issue on GitHub and reference its issue number as well as include a short description on what has been done in the commit. We might reject pull requests that violate this principle and ask you to re-submit it with proper commit messages. An acceptable commit message could look like this:","title":"Development Contributing Guidelines"},{"location":"CONTRIBUTING.html#61-added-model-to-define-classification-apply-automatic-case-classification-whenever-a-field-value-changes","text":"","title":"61 - added model to define classification, apply automatic case classification whenever a field value changes"},{"location":"CONTRIBUTING.html#picking-issues-for-development","text":"When picking tasks for development, you can either search the repository for existing issues that you would like to work on, or you can submit your own issues if you don't find any that cover your topic of interest (see the \"Submitting an Issue\" section of this guide). While it is not mandatory, we heavily suggest to mark issues that you want to work on with the approval requested label and wait for one of the core developers to respond to the issue in one of the following ways. If you didn't create the issue yourself but picked an existing one, please also add a comment to indicate that you would like to work on it. The developer might request clarification concerning the specifications of the issue; please try to to answer their questions or extend the issue description and wait for their feedback. The developer might suggest changes to the functional or technical specifications to ensure that it fits the overall vision of the application; please confirm these suggestions or discuss them with the developer if you don't agree with them. The developer might approve the issue by adding an approval comment and removing the approval requested label. This means that we believe that the specifications are complete and the purpose of the issue serves the overall vision of SORMAS. At this point you can start development on the issue. The developer might ask you to pick another issue for development. This will usually only happen if the issue you have requested approval for is already planned to be developed by the core development team for the current or next milestone. The developer might reject the issue altogether. This will usually only happen if it doesn't fit the overall vision of the application at all or is a duplicate, and most of the time we will discuss this with you before closing the issue. The advantage of adhering to this process is that you can be sure that there won't be any major change requests in terms of functional or technical specifications once you've submitted a pull request containing your work, and that discussions concerning these topics can be led and finished before starting development. If you have labeled an issue with approval requested but don't receive any feedback on it for a few days, please add a comment that directly tags @MateStrysewske , @MartinWahnschaffe or @markusmann-vg .","title":"Picking Issues for Development"},{"location":"CONTRIBUTING.html#submitting-pull-requests","text":"Contributing to the SORMAS code requires you to submit pull requests that will be reviewed by one of our core developers. Once a pull request has been submitted to our repository, a developer will either assign themselves as its reviewer or we will get back to you in case we won't be able to review it in time. This may e.g. happen if your pull request involves a lot of technical changes that we would like to merge together with other issues of the same nature or that could potentially break a lot of logic. Usually though, the general process looks like this: A developer assigns themselves as the reviewer of your pull request. Please wait until the review is done; if you think that the review is taking too long, feel free to add a comment to the pull request as a reminder to the developer. The developer might request changes to the code. If that's the case, please implement the requested changes or answer to their change request if you have questions or don't agree with a specific part of the request. Once you've implemented all requested changes, please request another review by the assigned developer by clicking on the \"Re-request review\" icon next to their name. As soon as the developer is happy with the submitted code (which might require multiple iterations of step 2 and 3, especially for larger pull requests), they will merge it into the development branch and close the pull request. Please adhere to the following principles when submitting pull requests: Only submit pull requests that are directly associated with ideally one specific issue in our GitHub repository. If there is no issue for the development work that you would like to do, create one before you start working on it. Link your pull request to the issue(s) that they are associated with. This can be done either by using the \"Linked issues\" section at the right side when viewing a pull request, or by adding the keyword \"Closes\" or \"Fixes\" followed by the issue number to the pull request description (e.g. \"Closes #61\"). Make sure that your pull request has a meaningful title. By default, GitHub will use your commit message as the title which might not be appropriate. In general, using the same name as the linked issue is a good rule of thumb. Try to not use force-push when updating an existing pull request (e.g. after changes have been requested or because you need to resolve merge conflicts). Ideally, your pull request should pass the checks done by the automatic CI pipeline before it gets reviewed. If that's not the case, please make sure that your branch is up-to-date with the current development branch. If the checks also fail for the development branch, you're not required to do anything. In any other case, please fix the issues (most likely failed unit tests) before requesting another review.","title":"Submitting Pull Requests"},{"location":"CONTRIBUTING_es-CU.html","text":"Contribuir Tabla de contenido Enviar un problema Contribuir al proyecto Contribuir al c\u00f3digo Enviar un problema Lea las siguientes orientaciones y s\u00edgalas al enviar nuevos problemas. Esto nos permite procesar su solicitud lo m\u00e1s r\u00e1pido posible. Aseg\u00farese de utilizar siempre las plantillas que se proporcionan autom\u00e1ticamente al crear un problema. Si desea reportar un problema de seguridad , siga nuestra gu\u00eda para Divulgaci\u00f3n responsable . Importante: Siempre que cree un nuevo problema, primero busque problemas similares en el repositorio , para evitar duplicados. Puede hacerlo manualmente, o utilizando la funcionalidad de b\u00fasqueda del header y limitando sus resultados al repositorio de SORMAS. Informe de error Solicitud de cambio Solicitud de caracter\u00edstica Informe de error Al enviar un informe de error, proporcionarnos la mayor cantidad de informaci\u00f3n posible nos ayuda a identificar la ra\u00edz del problema y solucionarlo lo m\u00e1s r\u00e1pido posible. Idealmente, necesitar\u00edamos los siguientes detalles: Descripci\u00f3n del error: Una descripci\u00f3n de qu\u00e9 sucedi\u00f3 exactamente, d\u00f3nde sucedi\u00f3 y bajo qu\u00e9 circunstancias. Proporcione tantos detalles como sea posible. Pasos para reproducir: Si es posible, proporcione instrucciones paso a paso sobre el orden de las acciones que realiz\u00f3 antes de que ocurriera el error. Esto nos ayuda a reproducirlo en nuestro sistema. Comportamiento esperado: Describa r\u00e1pidamente lo que cree que deber\u00eda haber sucedido en lugar del error que obtuvo. Capturas de pantalla: Si es posible, haga al menos una captura de pantalla del error e incl\u00fayala en su informe de error. Puede hacer esto simplemente arrastrando y soltando el archivo de imagen en la plantilla que est\u00e1 rellenando. Detalles del sistema: D\u00edganos qu\u00e9 dispositivo estaba usando, en qu\u00e9 versi\u00f3n de SORMAS ocurri\u00f3 el error y, dependiendo de si estaba usando la aplicaci\u00f3n para m\u00f3viles o la aplicaci\u00f3n web, su versi\u00f3n de Android o el navegador web. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed. Solicitud de cambio Al enviar una solicitud de cambio o una solicitud de caracter\u00edstica, la descripci\u00f3n detallada de la caracter\u00edstica que le gustar\u00eda que agreguemos o modifiquemos asegurar\u00e1 que nuestra discusi\u00f3n interna sea m\u00e1s f\u00e1cil y nos comuniquemos con usted lo m\u00e1s r\u00e1pido posible. Descripci\u00f3n de la caracter\u00edstica: Describa la caracter\u00edstica que le gustar\u00eda que cambiemos, tal como est\u00e1 en SORMAS en este momento, para que sepamos el tema del problema. Descripci\u00f3n del problema: D\u00edganos por qu\u00e9 desea que cambiemos la caracter\u00edstica, y qu\u00e9 cree que est\u00e1 mal con la forma en que est\u00e1 dise\u00f1ada actualmente. Cambio propuesto: Describa con el mayor detalle posible c\u00f3mo le gustar\u00eda que cambiemos la caracter\u00edstica. Posibles alternativas: Si es posible, proporcione soluciones alternativas en caso de que el cambio propuesto no se pueda implementar por alg\u00fan motivo. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed. Solicitud de caracter\u00edstica Al enviar una solicitud de cambio o una solicitud de caracter\u00edstica, la descripci\u00f3n detallada de la caracter\u00edstica que le gustar\u00eda que agreguemos o modifiquemos asegurar\u00e1 que nuestra discusi\u00f3n interna sea m\u00e1s f\u00e1cil y nos comuniquemos con usted lo m\u00e1s r\u00e1pido posible. Descripci\u00f3n de la situaci\u00f3n: Describa por qu\u00e9 se requiere la caracter\u00edstica propuesta, y c\u00f3mo exactamente SORMAS no puede hacer lo que usted desea que haga en este momento. Descripci\u00f3n de la caracter\u00edstica: Describa con el mayor detalle posible c\u00f3mo deber\u00eda verse la caracter\u00edstica propuesta, y qu\u00e9 deber\u00eda hacer. Posibles alternativas: Si es posible, proporcione soluciones alternativas en caso de que la caracter\u00edstica propuesta no se pueda implementar de la forma en que la describi\u00f3 por alg\u00fan motivo. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed. Contribuir al proyecto Incluso si no es desarrollador, hay muchas cosas en las que puede ayudarnos. Si hay algo que le gustar\u00eda hacer, y no encuentra instrucciones aqu\u00ed, \u00a1cont\u00e1ctenos en sormas@helmholtz-hzi.de, y h\u00e1ganos saber c\u00f3mo podemos ayudarlo! Traducir SORMAS Definir nuevas enfermedades Contribuir al c\u00f3digo Si est\u00e1 interesado en participar en el desarrollo de SORMAS, puede utilizar las siguientes gu\u00edas para comenzar. Si tiene problemas para configurar su entorno de desarrollo o no sabe en qu\u00e9 puede trabajar, \u00a1no dude en contactarnos en sormas@helmholtz-hzi.de! Configurar su entorno local Realizar pruebas de carga en un servidor de SORMAS Agregar encabezados de licencia \u00bfC\u00f3mo agregar una nueva enfermedad? \u00bfC\u00f3mo agregar un nuevo campo? Orientaciones para contribuir al desarrollo Utilice el formateador de c\u00f3digo de eclipse (Ctrl+Shift+F) y el formateador de c\u00f3digo de Android Studio para el proyecto sormas-app . Para no olvidar esto, use acciones de guardado para su IDE . Reglas para l\u00edneas en blanco (que no se pueden aplicar mediante formato autom\u00e1tico): Use una l\u00ednea en blanco despu\u00e9s de una definici\u00f3n de m\u00e9todo (pero generalmente no para m\u00e9todos de una l\u00ednea como gets/sets o delegaciones). Use una l\u00ednea en blanco para separar declaraciones dentro de un bloque de c\u00f3digo cuando comience un nuevo bloque l\u00f3gico. No use l\u00edneas en blanco despu\u00e9s de cada declaraci\u00f3n. No use l\u00ednea en blanco despu\u00e9s de la \u00faltima declaraci\u00f3n de un bloque, sino } con la sangr\u00eda adecuada en la siguiente l\u00ednea. No use l\u00ednea en blanco entre dos }. Puede usar //@formatter:off y //@formatter:on para encapsular un bloque de c\u00f3digo donde el formateo automatizado sea perjudicial para la legibilidad. Trate de usar esto con poca frecuencia, y utilice la sangr\u00eda adecuada de todos modos. Reglas para comentarios de c\u00f3digo: Separe c\u00f3digo y comentario: Coloque el comentario antes de la declaraci\u00f3n que desea explicar. Cada commit debe estar relacionado con un solo issue en Github y tener una referencia a este issue, as\u00ed como una breve descripci\u00f3n de lo que se ha hecho en este commit: 61 - added model to define classification, apply automatic case classification whenever a field value changes Cada pull request debe estar relacionada con un solo issue (si es posible). Product Backlog de SORMAS El tablero Product Backlog se utiliza para planificar, refinar y priorizar los tickets para los pr\u00f3ximos sprints. El orden de arriba a abajo en cada columna refleja la prioridad del producto. El Product Owner es responsable de poner los tickets en el Backlog y mantener actualizada la informaci\u00f3n de los tickets. El Product Backlog contiene las siguientes columnas: * Backlog: Issues que han sido identificados por el Product Owner para ser resueltos en los pr\u00f3ximos sprints. Puede haber una columna para cada Scrum Team si se ajusta a las necesidades. * Sprint n: Contiene tickets elegidos por el Product Owner para realizar en el sprint nombrado. Se utilizan notas de texto o columnas separadas para separar los issues entre los Scrum Teams. Da un pron\u00f3stico de lo que podr\u00eda suceder en el pr\u00f3ximo sprint, y es el punto de partida para la Sprint Planning. Cada ticket que el Development Team no elige para su Sprint Backlog debe ser movido de vuelta a la columna Backlog o un sprint m\u00e1s adelante. * Done: Los tickets que se cierran (generalmente resueltos en el sprint en ejecuci\u00f3n) se mueven aqu\u00ed autom\u00e1ticamente . El orden ya no representa la prioridad aqu\u00ed. Sprint Backlog de SORMAS El tablero Sprint Backlog existe para cada Scrum Team y est\u00e1 segmentado en las siguientes categor\u00edas: Backlog: Issues que el Development Team seleccion\u00f3 para resolver en el sprint actual, pero para los cuales a\u00fan no ha comenzado el trabajo. El orden de arriba a abajo en esta columna refleja la prioridad dada por el Product Owner en el momento de la Sprint Planning. In Progress: Issues que se han asignado a un colaborador, y para los cuales ha comenzado el trabajo. Waiting: Issues para los cuales ha comenzado el trabajo, y que se han suspendido, por ejemplo, porque requieren acci\u00f3n o retroalimentaci\u00f3n de un colaborador externo. Review: Issues que se han resuelto, pero a\u00fan no han sido revisados \u200b\u200bpor otro colaborador. El estado del ticket suele ser Open , pero tambi\u00e9n se permite Closed si no es necesario cambiar o fusionar el c\u00f3digo. Testing: Issues que se han revisado y fusionado con la rama development para ser probados y verificados en una instancia TEST central. El estado del ticket debe ser Closed . Done: Issues que se han resuelto, revisado, y satisfacen la Definition of Done. El estado del ticket debe ser Closed . El flujo de trabajo general es que cada vez que un colaborador comienza a trabajar en un issue, se asigna el issue a s\u00ed mismo, y manualmente mueve el issue de Backlog a In Progress . Las transiciones a Waiting y Review tambi\u00e9n deben realizarse manualmente. Cuando el desarrollador termina todo el trabajo (no es necesario cambiar o fusionar el c\u00f3digo, se establece un milestone), el ticket se debe cerrar para pasar autom\u00e1ticamente a Testing . Los tickets aprobados deben moverse manualmente de Testing a * Done . El proyecto de GitHub se ha configurado para mover autom\u00e1ticamente los issues que se cierran a Testing , y los issues que se reabren a In Progress . El Development Team es responsable de mantener actualizados los tickets en este tablero, y de asignar el milestone apropiado en el que se va a publicar el trabajo. Administrar dependencias Para administrar bibliotecas de Java como dependencias, Maven las administra y se enumeran en sormas-base/pom.xml . El prop\u00f3sito de una administraci\u00f3n centralizada es tener una visi\u00f3n general de las bibliotecas utilizadas y adaptarse a las nuevas versiones. M\u00f3dulos de Payara : Provistos por Payara en {payara-home}/glassfish/modules y utilizados en esa versi\u00f3n por otras bibliotecas. Bibliotecas de dominio : Provistas en el dominio Payara bajo {dominio-payara}/lib para ser utilizables por artefactos desplegados (ear, war). Deben estar enumeradas en sormas-base/dependencies/serverlibs.pom . Usualmente para bibliotecas auxiliares que varios artefactos necesitan. Dependencias de compilaci\u00f3n : Incluidas en los artefactos respectivos que necesiten la dependencia expl\u00edcitamente. Por lo general, para dependencias que se necesitan singularmente en un artefacto. Bibliotecas de prueba : Bibliotecas utilizadas en pruebas automatizadas en uno o m\u00e1s m\u00f3dulos. Debido a la herramienta independiente de administraci\u00f3n de builds Gradle para sormas-app , existe una lista redundante de dependencias de compilaci\u00f3n en sormas-app/app/build.gradle . Soluci\u00f3n de problemas de Eclipse Desafortunadamente, al usar eclipse junto con Payara Tools, hay una serie de problemas de despliegue que puede encontrar. Ejemplos de estos son: ClassDefNotFoundExceptions despu\u00e9s de desplegar los artefactos e iniciar sesi\u00f3n en la aplicaci\u00f3n web Mensajes de error en eclipse que dicen que el despliegue fall\u00f3 Hay un par de cosas que puede hacer para solucionar estos problemas: Haga una actualizaci\u00f3n Maven para todos los proyectos Detenga y reinicie el servidor Vuelva a desplegar los artefactos del servidor Si el problema ocurri\u00f3 justo despu\u00e9s de extraer nuevo c\u00f3digo de GitHub, probablemente la apuesta m\u00e1s segura es comenzar con la actualizaci\u00f3n Maven. Para la mayor\u00eda de los otros problemas, volver a desplegar o, si es necesario, reiniciar el servidor deber\u00eda ser suficiente. Cuando tenga problemas como este - An internal error occurred during: \"Polling news feeds\". javax/xml/bind/JAXBContext - desactive el ajuste Window --> Preferences --> General --> News --> \"Enable automatic news polling\" (puede suceder al ejecutar Eclipse con JDK 11).","title":"Contribuir"},{"location":"CONTRIBUTING_es-CU.html#contribuir","text":"","title":"Contribuir"},{"location":"CONTRIBUTING_es-CU.html#tabla-de-contenido","text":"Enviar un problema Contribuir al proyecto Contribuir al c\u00f3digo","title":"Tabla de contenido"},{"location":"CONTRIBUTING_es-CU.html#enviar-un-problema","text":"Lea las siguientes orientaciones y s\u00edgalas al enviar nuevos problemas. Esto nos permite procesar su solicitud lo m\u00e1s r\u00e1pido posible. Aseg\u00farese de utilizar siempre las plantillas que se proporcionan autom\u00e1ticamente al crear un problema. Si desea reportar un problema de seguridad , siga nuestra gu\u00eda para Divulgaci\u00f3n responsable . Importante: Siempre que cree un nuevo problema, primero busque problemas similares en el repositorio , para evitar duplicados. Puede hacerlo manualmente, o utilizando la funcionalidad de b\u00fasqueda del header y limitando sus resultados al repositorio de SORMAS. Informe de error Solicitud de cambio Solicitud de caracter\u00edstica","title":"Enviar un problema"},{"location":"CONTRIBUTING_es-CU.html#informe-de-error","text":"Al enviar un informe de error, proporcionarnos la mayor cantidad de informaci\u00f3n posible nos ayuda a identificar la ra\u00edz del problema y solucionarlo lo m\u00e1s r\u00e1pido posible. Idealmente, necesitar\u00edamos los siguientes detalles: Descripci\u00f3n del error: Una descripci\u00f3n de qu\u00e9 sucedi\u00f3 exactamente, d\u00f3nde sucedi\u00f3 y bajo qu\u00e9 circunstancias. Proporcione tantos detalles como sea posible. Pasos para reproducir: Si es posible, proporcione instrucciones paso a paso sobre el orden de las acciones que realiz\u00f3 antes de que ocurriera el error. Esto nos ayuda a reproducirlo en nuestro sistema. Comportamiento esperado: Describa r\u00e1pidamente lo que cree que deber\u00eda haber sucedido en lugar del error que obtuvo. Capturas de pantalla: Si es posible, haga al menos una captura de pantalla del error e incl\u00fayala en su informe de error. Puede hacer esto simplemente arrastrando y soltando el archivo de imagen en la plantilla que est\u00e1 rellenando. Detalles del sistema: D\u00edganos qu\u00e9 dispositivo estaba usando, en qu\u00e9 versi\u00f3n de SORMAS ocurri\u00f3 el error y, dependiendo de si estaba usando la aplicaci\u00f3n para m\u00f3viles o la aplicaci\u00f3n web, su versi\u00f3n de Android o el navegador web. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed.","title":"Informe de error"},{"location":"CONTRIBUTING_es-CU.html#solicitud-de-cambio","text":"Al enviar una solicitud de cambio o una solicitud de caracter\u00edstica, la descripci\u00f3n detallada de la caracter\u00edstica que le gustar\u00eda que agreguemos o modifiquemos asegurar\u00e1 que nuestra discusi\u00f3n interna sea m\u00e1s f\u00e1cil y nos comuniquemos con usted lo m\u00e1s r\u00e1pido posible. Descripci\u00f3n de la caracter\u00edstica: Describa la caracter\u00edstica que le gustar\u00eda que cambiemos, tal como est\u00e1 en SORMAS en este momento, para que sepamos el tema del problema. Descripci\u00f3n del problema: D\u00edganos por qu\u00e9 desea que cambiemos la caracter\u00edstica, y qu\u00e9 cree que est\u00e1 mal con la forma en que est\u00e1 dise\u00f1ada actualmente. Cambio propuesto: Describa con el mayor detalle posible c\u00f3mo le gustar\u00eda que cambiemos la caracter\u00edstica. Posibles alternativas: Si es posible, proporcione soluciones alternativas en caso de que el cambio propuesto no se pueda implementar por alg\u00fan motivo. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed.","title":"Solicitud de cambio"},{"location":"CONTRIBUTING_es-CU.html#solicitud-de-caracteristica","text":"Al enviar una solicitud de cambio o una solicitud de caracter\u00edstica, la descripci\u00f3n detallada de la caracter\u00edstica que le gustar\u00eda que agreguemos o modifiquemos asegurar\u00e1 que nuestra discusi\u00f3n interna sea m\u00e1s f\u00e1cil y nos comuniquemos con usted lo m\u00e1s r\u00e1pido posible. Descripci\u00f3n de la situaci\u00f3n: Describa por qu\u00e9 se requiere la caracter\u00edstica propuesta, y c\u00f3mo exactamente SORMAS no puede hacer lo que usted desea que haga en este momento. Descripci\u00f3n de la caracter\u00edstica: Describa con el mayor detalle posible c\u00f3mo deber\u00eda verse la caracter\u00edstica propuesta, y qu\u00e9 deber\u00eda hacer. Posibles alternativas: Si es posible, proporcione soluciones alternativas en caso de que la caracter\u00edstica propuesta no se pueda implementar de la forma en que la describi\u00f3 por alg\u00fan motivo. Informaci\u00f3n adicional: Si hay algo m\u00e1s que desee agregar a su solicitud, puede ponerlo aqu\u00ed.","title":"Solicitud de caracter\u00edstica"},{"location":"CONTRIBUTING_es-CU.html#contribuir-al-proyecto","text":"Incluso si no es desarrollador, hay muchas cosas en las que puede ayudarnos. Si hay algo que le gustar\u00eda hacer, y no encuentra instrucciones aqu\u00ed, \u00a1cont\u00e1ctenos en sormas@helmholtz-hzi.de, y h\u00e1ganos saber c\u00f3mo podemos ayudarlo! Traducir SORMAS Definir nuevas enfermedades","title":"Contribuir al proyecto"},{"location":"CONTRIBUTING_es-CU.html#contribuir-al-codigo","text":"Si est\u00e1 interesado en participar en el desarrollo de SORMAS, puede utilizar las siguientes gu\u00edas para comenzar. Si tiene problemas para configurar su entorno de desarrollo o no sabe en qu\u00e9 puede trabajar, \u00a1no dude en contactarnos en sormas@helmholtz-hzi.de! Configurar su entorno local Realizar pruebas de carga en un servidor de SORMAS Agregar encabezados de licencia \u00bfC\u00f3mo agregar una nueva enfermedad? \u00bfC\u00f3mo agregar un nuevo campo?","title":"Contribuir al c\u00f3digo"},{"location":"CONTRIBUTING_es-CU.html#orientaciones-para-contribuir-al-desarrollo","text":"Utilice el formateador de c\u00f3digo de eclipse (Ctrl+Shift+F) y el formateador de c\u00f3digo de Android Studio para el proyecto sormas-app . Para no olvidar esto, use acciones de guardado para su IDE . Reglas para l\u00edneas en blanco (que no se pueden aplicar mediante formato autom\u00e1tico): Use una l\u00ednea en blanco despu\u00e9s de una definici\u00f3n de m\u00e9todo (pero generalmente no para m\u00e9todos de una l\u00ednea como gets/sets o delegaciones). Use una l\u00ednea en blanco para separar declaraciones dentro de un bloque de c\u00f3digo cuando comience un nuevo bloque l\u00f3gico. No use l\u00edneas en blanco despu\u00e9s de cada declaraci\u00f3n. No use l\u00ednea en blanco despu\u00e9s de la \u00faltima declaraci\u00f3n de un bloque, sino } con la sangr\u00eda adecuada en la siguiente l\u00ednea. No use l\u00ednea en blanco entre dos }. Puede usar //@formatter:off y //@formatter:on para encapsular un bloque de c\u00f3digo donde el formateo automatizado sea perjudicial para la legibilidad. Trate de usar esto con poca frecuencia, y utilice la sangr\u00eda adecuada de todos modos. Reglas para comentarios de c\u00f3digo: Separe c\u00f3digo y comentario: Coloque el comentario antes de la declaraci\u00f3n que desea explicar. Cada commit debe estar relacionado con un solo issue en Github y tener una referencia a este issue, as\u00ed como una breve descripci\u00f3n de lo que se ha hecho en este commit:","title":"Orientaciones para contribuir al desarrollo"},{"location":"CONTRIBUTING_es-CU.html#61-added-model-to-define-classification-apply-automatic-case-classification-whenever-a-field-value-changes","text":"Cada pull request debe estar relacionada con un solo issue (si es posible).","title":"61 - added model to define classification, apply automatic case classification whenever a field value changes"},{"location":"CONTRIBUTING_es-CU.html#product-backlog-de-sormas","text":"El tablero Product Backlog se utiliza para planificar, refinar y priorizar los tickets para los pr\u00f3ximos sprints. El orden de arriba a abajo en cada columna refleja la prioridad del producto. El Product Owner es responsable de poner los tickets en el Backlog y mantener actualizada la informaci\u00f3n de los tickets. El Product Backlog contiene las siguientes columnas: * Backlog: Issues que han sido identificados por el Product Owner para ser resueltos en los pr\u00f3ximos sprints. Puede haber una columna para cada Scrum Team si se ajusta a las necesidades. * Sprint n: Contiene tickets elegidos por el Product Owner para realizar en el sprint nombrado. Se utilizan notas de texto o columnas separadas para separar los issues entre los Scrum Teams. Da un pron\u00f3stico de lo que podr\u00eda suceder en el pr\u00f3ximo sprint, y es el punto de partida para la Sprint Planning. Cada ticket que el Development Team no elige para su Sprint Backlog debe ser movido de vuelta a la columna Backlog o un sprint m\u00e1s adelante. * Done: Los tickets que se cierran (generalmente resueltos en el sprint en ejecuci\u00f3n) se mueven aqu\u00ed autom\u00e1ticamente . El orden ya no representa la prioridad aqu\u00ed.","title":"Product Backlog de SORMAS"},{"location":"CONTRIBUTING_es-CU.html#sprint-backlog-de-sormas","text":"El tablero Sprint Backlog existe para cada Scrum Team y est\u00e1 segmentado en las siguientes categor\u00edas: Backlog: Issues que el Development Team seleccion\u00f3 para resolver en el sprint actual, pero para los cuales a\u00fan no ha comenzado el trabajo. El orden de arriba a abajo en esta columna refleja la prioridad dada por el Product Owner en el momento de la Sprint Planning. In Progress: Issues que se han asignado a un colaborador, y para los cuales ha comenzado el trabajo. Waiting: Issues para los cuales ha comenzado el trabajo, y que se han suspendido, por ejemplo, porque requieren acci\u00f3n o retroalimentaci\u00f3n de un colaborador externo. Review: Issues que se han resuelto, pero a\u00fan no han sido revisados \u200b\u200bpor otro colaborador. El estado del ticket suele ser Open , pero tambi\u00e9n se permite Closed si no es necesario cambiar o fusionar el c\u00f3digo. Testing: Issues que se han revisado y fusionado con la rama development para ser probados y verificados en una instancia TEST central. El estado del ticket debe ser Closed . Done: Issues que se han resuelto, revisado, y satisfacen la Definition of Done. El estado del ticket debe ser Closed . El flujo de trabajo general es que cada vez que un colaborador comienza a trabajar en un issue, se asigna el issue a s\u00ed mismo, y manualmente mueve el issue de Backlog a In Progress . Las transiciones a Waiting y Review tambi\u00e9n deben realizarse manualmente. Cuando el desarrollador termina todo el trabajo (no es necesario cambiar o fusionar el c\u00f3digo, se establece un milestone), el ticket se debe cerrar para pasar autom\u00e1ticamente a Testing . Los tickets aprobados deben moverse manualmente de Testing a * Done . El proyecto de GitHub se ha configurado para mover autom\u00e1ticamente los issues que se cierran a Testing , y los issues que se reabren a In Progress . El Development Team es responsable de mantener actualizados los tickets en este tablero, y de asignar el milestone apropiado en el que se va a publicar el trabajo.","title":"Sprint Backlog de SORMAS"},{"location":"CONTRIBUTING_es-CU.html#administrar-dependencias","text":"Para administrar bibliotecas de Java como dependencias, Maven las administra y se enumeran en sormas-base/pom.xml . El prop\u00f3sito de una administraci\u00f3n centralizada es tener una visi\u00f3n general de las bibliotecas utilizadas y adaptarse a las nuevas versiones. M\u00f3dulos de Payara : Provistos por Payara en {payara-home}/glassfish/modules y utilizados en esa versi\u00f3n por otras bibliotecas. Bibliotecas de dominio : Provistas en el dominio Payara bajo {dominio-payara}/lib para ser utilizables por artefactos desplegados (ear, war). Deben estar enumeradas en sormas-base/dependencies/serverlibs.pom . Usualmente para bibliotecas auxiliares que varios artefactos necesitan. Dependencias de compilaci\u00f3n : Incluidas en los artefactos respectivos que necesiten la dependencia expl\u00edcitamente. Por lo general, para dependencias que se necesitan singularmente en un artefacto. Bibliotecas de prueba : Bibliotecas utilizadas en pruebas automatizadas en uno o m\u00e1s m\u00f3dulos. Debido a la herramienta independiente de administraci\u00f3n de builds Gradle para sormas-app , existe una lista redundante de dependencias de compilaci\u00f3n en sormas-app/app/build.gradle .","title":"Administrar dependencias"},{"location":"CONTRIBUTING_es-CU.html#solucion-de-problemas-de-eclipse","text":"Desafortunadamente, al usar eclipse junto con Payara Tools, hay una serie de problemas de despliegue que puede encontrar. Ejemplos de estos son: ClassDefNotFoundExceptions despu\u00e9s de desplegar los artefactos e iniciar sesi\u00f3n en la aplicaci\u00f3n web Mensajes de error en eclipse que dicen que el despliegue fall\u00f3 Hay un par de cosas que puede hacer para solucionar estos problemas: Haga una actualizaci\u00f3n Maven para todos los proyectos Detenga y reinicie el servidor Vuelva a desplegar los artefactos del servidor Si el problema ocurri\u00f3 justo despu\u00e9s de extraer nuevo c\u00f3digo de GitHub, probablemente la apuesta m\u00e1s segura es comenzar con la actualizaci\u00f3n Maven. Para la mayor\u00eda de los otros problemas, volver a desplegar o, si es necesario, reiniciar el servidor deber\u00eda ser suficiente. Cuando tenga problemas como este - An internal error occurred during: \"Polling news feeds\". javax/xml/bind/JAXBContext - desactive el ajuste Window --> Preferences --> General --> News --> \"Enable automatic news polling\" (puede suceder al ejecutar Eclipse con JDK 11).","title":"Soluci\u00f3n de problemas de Eclipse"},{"location":"DEMO_APP.html","text":"Creating a demo app for a SORMAS demo server Important : This only applies if you have setup your own SORMAS server for demo purposes and and want to give users easy access to it. Step 1: Adjust the sormas-app.properties Open the the apk file from the SORMAS release with a zip editor (e.g. 7zip). Extract sormas-app.properties and open the the file for editing. Set server.url.default to the URL of your SORMAS server's ReST interface. Set user.name.default and user.password.default to the demo user (needs to be an informant or officer). Overwrite the sormas-app.properties in the apk with your changed version. Step 2: Sign the changed apk file Since the apk file has been changed it needs to be signed again.\\ Important : When you change and sign the apk file it is no longer compatible with the original apk file for automatic app update! If you still want to make this work you always have to sign new versions using the same keystore and put the changed apk-file into your SORMAS server for automatic app update.\\ Create a keystore using keytool: keytool -genkey -v -keystore my-demo-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-alias Note: keytool is located in the bin/ directory in your JDK. To locate your JDK from Android Studio, select File > Project Structure, and then click SDK Location and you will see the JDK location. Download uber-apk-signer: https://github.com/patrickfav/uber-apk-signer/releases. Note: this is the convenient way to do it. You can also get an Android SDK and follow the instructions given here Sign the apk file: java -jar uber-apk-signer.jar --ks my-demo-key.jks -ksAlias my-alias --allowResign --apks sormas-version-demo.apk See also: https://github.com/patrickfav/uber-apk-signer#command-line-interface","title":"Demo App"},{"location":"DEMO_APP.html#creating-a-demo-app-for-a-sormas-demo-server","text":"Important : This only applies if you have setup your own SORMAS server for demo purposes and and want to give users easy access to it.","title":"Creating a demo app for a SORMAS demo server"},{"location":"DEMO_APP.html#step-1-adjust-the-sormas-appproperties","text":"Open the the apk file from the SORMAS release with a zip editor (e.g. 7zip). Extract sormas-app.properties and open the the file for editing. Set server.url.default to the URL of your SORMAS server's ReST interface. Set user.name.default and user.password.default to the demo user (needs to be an informant or officer). Overwrite the sormas-app.properties in the apk with your changed version.","title":"Step 1: Adjust the sormas-app.properties"},{"location":"DEMO_APP.html#step-2-sign-the-changed-apk-file","text":"Since the apk file has been changed it needs to be signed again.\\ Important : When you change and sign the apk file it is no longer compatible with the original apk file for automatic app update! If you still want to make this work you always have to sign new versions using the same keystore and put the changed apk-file into your SORMAS server for automatic app update.\\ Create a keystore using keytool: keytool -genkey -v -keystore my-demo-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-alias Note: keytool is located in the bin/ directory in your JDK. To locate your JDK from Android Studio, select File > Project Structure, and then click SDK Location and you will see the JDK location. Download uber-apk-signer: https://github.com/patrickfav/uber-apk-signer/releases. Note: this is the convenient way to do it. You can also get an Android SDK and follow the instructions given here Sign the apk file: java -jar uber-apk-signer.jar --ks my-demo-key.jks -ksAlias my-alias --allowResign --apks sormas-version-demo.apk See also: https://github.com/patrickfav/uber-apk-signer#command-line-interface","title":"Step 2: Sign the changed apk file"},{"location":"DEMO_APP_es-CU.html","text":"Crear una aplicaci\u00f3n demo para un servidor demo de SORMAS Importante : Esto solo es aplicable si ha configurado su propio servidor de SORMAS para fines demostrativos y desea que los usuarios accedan f\u00e1cilmente al mismo. Paso 1: Ajuste sormas-app.properties Abra el archivo apk de la distribuci\u00f3n de SORMAS con un editor de zip (por ejemplo, 7zip). Extraiga sormas-app.properties y abra el archivo para editar. Establezca server.url.default como la URL de la interfaz ReST de su servidor de SORMAS. Establezca user.name.default y user.password.default para el usuario demo (debe ser un informante o funcionario). Sobrescriba sormas-app.properties en el apk con su versi\u00f3n modificada. Paso 2: Firme el archivo apk modificado Dado que el archivo apk fue cambiado, se debe firmar de nuevo.\\ Importante : Cuando cambia y firma el archivo apk, \u00a1este ya no es compatible con el archivo apk original para la actualizaci\u00f3n autom\u00e1tica de la aplicaci\u00f3n! Si a\u00fan desea que esto funcione, siempre debe firmar las nuevas versiones usando el mismo keystore, y poner el archivo apk modificado en su servidor de SORMAS para la actualizaci\u00f3n autom\u00e1tica de la aplicaci\u00f3n.\\ Cree un keystore usando keytool: keytool -genkey -v -keystore mi-clave-demo.jks -keyalg RSA -keysize 2048 -validity 10000 -alias mi-alias Nota: keytool se encuentra en el directorio bin/ en su JDK. Para encontrar su JDK desde Android Studio, seleccione File > Project Structure, haga clic en SDK Location, y ver\u00e1 la ubicaci\u00f3n del JDK. Descargue uber-apk-signer: https://github.com/patrickfav/uber-apk-signer/releases. Nota: Esta es la forma conveniente de hacerlo. Tambi\u00e9n puede obtener un SDK de Android y seguir las instrucciones que se dan aqu\u00ed: https://developer.android.com/studio/publish/app-signing#signing-manually Firme el archivo apk: java -jar uber-apk-signer.jar --ks mi-clave-demo.jks -ksAlias mi-alias --alowResign --apks sormas-version-demo.apk Vea tambi\u00e9n: https://github.com/patrickfav/uber-apk-signer#command-line-interface","title":"Crear una aplicaci\u00f3n demo para un servidor demo de SORMAS"},{"location":"DEMO_APP_es-CU.html#crear-una-aplicacion-demo-para-un-servidor-demo-de-sormas","text":"Importante : Esto solo es aplicable si ha configurado su propio servidor de SORMAS para fines demostrativos y desea que los usuarios accedan f\u00e1cilmente al mismo.","title":"Crear una aplicaci\u00f3n demo para un servidor demo de SORMAS"},{"location":"DEMO_APP_es-CU.html#paso-1-ajuste-sormas-appproperties","text":"Abra el archivo apk de la distribuci\u00f3n de SORMAS con un editor de zip (por ejemplo, 7zip). Extraiga sormas-app.properties y abra el archivo para editar. Establezca server.url.default como la URL de la interfaz ReST de su servidor de SORMAS. Establezca user.name.default y user.password.default para el usuario demo (debe ser un informante o funcionario). Sobrescriba sormas-app.properties en el apk con su versi\u00f3n modificada.","title":"Paso 1: Ajuste sormas-app.properties"},{"location":"DEMO_APP_es-CU.html#paso-2-firme-el-archivo-apk-modificado","text":"Dado que el archivo apk fue cambiado, se debe firmar de nuevo.\\ Importante : Cuando cambia y firma el archivo apk, \u00a1este ya no es compatible con el archivo apk original para la actualizaci\u00f3n autom\u00e1tica de la aplicaci\u00f3n! Si a\u00fan desea que esto funcione, siempre debe firmar las nuevas versiones usando el mismo keystore, y poner el archivo apk modificado en su servidor de SORMAS para la actualizaci\u00f3n autom\u00e1tica de la aplicaci\u00f3n.\\ Cree un keystore usando keytool: keytool -genkey -v -keystore mi-clave-demo.jks -keyalg RSA -keysize 2048 -validity 10000 -alias mi-alias Nota: keytool se encuentra en el directorio bin/ en su JDK. Para encontrar su JDK desde Android Studio, seleccione File > Project Structure, haga clic en SDK Location, y ver\u00e1 la ubicaci\u00f3n del JDK. Descargue uber-apk-signer: https://github.com/patrickfav/uber-apk-signer/releases. Nota: Esta es la forma conveniente de hacerlo. Tambi\u00e9n puede obtener un SDK de Android y seguir las instrucciones que se dan aqu\u00ed: https://developer.android.com/studio/publish/app-signing#signing-manually Firme el archivo apk: java -jar uber-apk-signer.jar --ks mi-clave-demo.jks -ksAlias mi-alias --alowResign --apks sormas-version-demo.apk Vea tambi\u00e9n: https://github.com/patrickfav/uber-apk-signer#command-line-interface","title":"Paso 2: Firme el archivo apk modificado"},{"location":"DEVELOPMENT_ENVIRONMENT.html","text":"Development Environment Setup This step-by-step guide explains how to set up your development environment, using either Eclipse or Intellij for the backend and web UI and Android Studio for the mobile app. Please follow it strictly to make sure that development will run as smoothly as possible and your code adheres to our guidelines. Please note that these instructions are optimized for Windows and Linux systems. If you're developing on a Mac and, we would be glad to get your feedback about how this guide can be extended with OS-specific instructions in our developer chat on Gitter . Step 1: Install a Local SORMAS Server Please follow the Server Setup Instructions to set up a local SORMAS instance that you will use to test your code. Alternatively, you can also use Maven Cargo , or a Docker installation (not recommended at this time). Step 2: Check Out the SORMAS Repository Download and install the latest Git version for your operating system Optional: Install a Git client such as TortoiseGit or GitHub Desktop if you don't want to handle version control from the command line or within your IDE Optional: Clone the SORMAS-Open repository with git clone https://github.com/hzi-braunschweig/SORMAS-Project.git ; if you want to use Git from within your IDE, you can also clone the repository in Step 4 Open Git Bash and execute the following command to ensure that rebase is used when pulling the development branch rather than merge: git config --global branch.development.rebase true Step 3: Install Java Download and install the Java 11 JDK (not JRE) for your operating system. We suggest using Zulu OpenJDK . If you're running Linux, please refer to the official documentation on how to install Zulu OpenJDK on your system. Step 4: Install and Configure Your IDE IntelliJ Download and install the latest IntelliJ IDEA Ultimate ; (newer than version of 2020-04-15 to enable debugging, see https://youtrack.jetbrains.com/issue/IDEA-216528) Set the project SDK to the installed JDK Optional: Clone the SORMAS-Open repository if you haven't done so already Open the project in Intellij; make sure that under File -> Project Structure -> Modules all modules EXCEPT sormas-app are recognized; if not, add the missing modules with the + button Navigate to File -> Settings -> Plugins and make sure that Glassfish & Ant integrations are enabled Install the Vaadin 6-8 plugin ; the commercial Vaadin Designer is not needed Make a copy of sormas-base/build.properties.example , rename it to build.properties and set glassfish.domain.root to the location of the SORMAS domain inside your Payara installation Run mvn install on the sormas-base project (e.g. by opening the Maven view and executing sormas-base -> Lifecycle -> install ) Add a Payara server to IntelliJ: Open Run -> Edit Configurations , add a new configuration and choose the Glassfish server template Click on Configure next to Application server and create a new server configuration by selecting your Payara installation directory Check the After launch checkbox and specify the browser that you want SORMAS to open in once the server has been deployed Enter http://localhost:6080/sormas-ui into the URL field Make sure that the correct JRE is specified (your Java 11 JDK) Enter the path to the SORMAS domain and the credentials that you've specified when setting up the server Open the Deployment tab and add the artifacts sormas-ear , sormas-rest and sormas-ui Open the Logs tab and add a new log file pointing to the logs/server.log file in your SORMAS domain Open the Startup/Connection tab and make sure that Pass environment variables is NOT checked; ignore warnings about the debug configuration not being correct Open the config/domain.xml file in your domain directory and make sure that the java-config node contains the following code: <java-config classpath-suffix=\"\" debug-enabled=\"true\" debug-options=\"-agentlib:jdwp=transport=dt_socket,address=6009,server=n,suspend=y\" ... Open the Ant window, click on the + icon and select the sormas-base/build.xml file Execute the install and deploy-serverlibs Ant scripts Set the default working directory for run configurations by navigating to Run -> Edit Configurations -> Templates -> Application and setting Working directory to $MODULE_WORKING_DIR$ Eclipse Download and install the latest Eclipse IDE for Enterprise Java and Web Developers Set the default JRE of Eclipse to the installed JDK: Assigning the default JRE for the workbench Optional: Clone the SORMAS-Open repository if you haven't done so already via File -> Import -> Git -> Projects from Git and cancel the process when you're asked to create a new project from the cloned repository Import the projects from the SORMAS-Open repository into your workspace via File -> Import -> Maven -> Existing Maven Projects Install the Payara Tools plugin Install the Vaadin Plugin for Eclipse ; the commercial UI designer is not needed Add a Payara server to Eclipse and enter the credentials you specified when setting up the local SORMAS server Make a copy of sormas-base/build.properties.example , rename it to build.properties and set glassfish.domain.root to the location of the SORMAS domain inside your Payara installation Drag the sormas-base/build.xml file into the Ant view in Eclipse Either run mvn install on the sormas-base project or execute the install [default] Ant script (this needs a Maven installation on your system with the M2_HOME variable set) Execute the deploy-serverlibs Ant script Highlight all Eclipse projects and choose Maven -> Update Project from the right-click menu; perform the update for all projects Start the Glassfish server and deploy sormas-ear , sormas-rest and sormas-ui by dragging the respective projects onto it, or use the Add and Remove... function by right-clicking on the server Open your browser and type in http://localhost:6080/sormas-ui to test whether the server and IDE have been set up correctly Android Studio Please note: You only need to install Android Studio if you're developing code for the Android app. This is likely the case when you're adding new fields or entities to the system, or if you specifically want to work on the mobile app. Download and install the latest Android Studio version Please make sure to run the installer with admin rights if you're using Windows Ensure that the Android SDK installation path does not contain whitespaces; you can also change this later via Tools -> SDK Manager -> Android SDK Location Open Android Studio and import the sormas-app module from the SORMAS-Open repository Make a copy of keystore.properties.example and rename it to keystore.properties Build the Android Studio project by executing the Gradle build (this may be done automatically) Add an emulator and set the SDK version to the minSdkVersion or targetSdkVersion from build.gradle ; we suggest to test your code on both, but minSdkVersion should be preferred to ensure compatibility to the minimum supported SDK Click on Run 'app' to install and run the app on your emulator; enter http://10.0.2.2:6080/sormas-rest as the server URL when you start the newly installed app for the first time Important: Whenever you do or pull changes in the sormas-api project that you want to use in the mobile app or that are referenced there already, you need to execute the install Ant script to notify the sormas-app project of the changes. Step 5: Configure Code Formatting and Import Settings In order to ensure a consistent code style and prevent so-called edit wars, we have set up custom configuration files for automatic code formatting and import ordering. Please make sure to adhere to the following steps for your IDE(s) before you start developing. IntelliJ and Android Studio Install the Eclipse Code Formatter for Intellij/Android Studio plugin Open the plugin settings via File -> Settings -> Other Settings -> Eclipse Code Formatter and select Use the Eclipse Code Formatter Under Eclipse formatter config , choose Eclipse workspace/project folder or config file and select sormas-base/java-formatter-profile.xml Check Optimize Imports Under Import order , choose From file and select sormas-base/java-importorder-profile.importorder Make sure that Do not format other file types by IntelliJ formatter is selected Go to Editor -> Code Style -> Java -> Imports and set Class count to use import with '*' and Names count to use static import with '*' to 99 Navigate to Editor -> General -> Auto Import and disable Optimize imports on the fly Optional, but strongly recommended: - Install the Save Actions plugin that automatically applies code formatting and import reordering whenever you save a file - otherwise you will manually have to do so (by default with Ctrl+Alt+L) - Open the plugin settings via File -> Settings -> Other Settings -> Save Actions and make sure that the first three checkboxes under General and the first two checkboxes under Formatting Actions are selected Eclipse Open Window -> Preferences Navigate to Java -> Code Style -> Formatter , import sormas-base/java-formatter-profile.xml and apply the changes Navigate to Java -> Code Style -> Organize Imports and import sormas-base/java-importorder-profile.importorder On the same screen, set Number of imports needed for .* and Number of static imports needed for .* to 99 On the same screen, make sure that Do not create import for types starting with a lowercase letter is checked and apply the changes Navigate to Java -> Editor -> Save Actions and make sure that the following options are selected: Perform the selected actions on save , Format source code , Format all lines and Organize imports Issues which can appear during installation process of the project If debug mode does not work: To replace opt\\payara5\\glassfish\\modules\\launcher.jar with sormas-base/setup/launcher.jar For Windows: Please check your java_version. In case if you have the multiple java_versions installed on the system, it will always show to you the first version installed. I had the java 8 instead of 11. In order to fix it, go to environment variables, and move the 11 version up. And rerun the script. Seems that the console is reading those variables at the starting point, and the values of it can be updated only after console/script restart. For Windows: Pay attention to the postgres SQL files rights permissions after unziping the downloaded ZIP archive. Files physically were present but next script error has been generated: psql:setup.sql:7: ERROR: could not open extension control file \"C:/Program Files/PostgreSQL/10/share/extension/temporal_tables.control\": No such file or directory -I checked the file rights, and under windows they has AV attribute, however, all others has only A attribute. When I was trying to open them with Notepad++ it was saying that such file does not exist. Do you want to create it? If yes will be pressed - another message saying that the file exists, appeared. Very strange scenario... All the postgres commands (of added users, etc.) which were added at first startup of the application - will raise errors in case if such entity exists. Just ignore those errors at repeated installation of .\\server-setup.sh Check always the port number 6048 which can be occupied by an old instance of payara. -> For every installation, kill all Java/javaw processes and check the availability of 6048 port number. -> Delete files with generated domain folders and payara. In order to have a clean installation of each next ./server-setup.sh run. M2_HOME need to be set. By default, for newer version, it is set to MAVEN_HOME. But Ant script is looking for M2_HOME For eclipse formatted plugin, there is an issue for Idea: https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter - cannot save settings Path to custom eclipse folder is not valid - it works only when settings were saved from down to up. And not vice versa.","title":"Development Environment"},{"location":"DEVELOPMENT_ENVIRONMENT.html#development-environment-setup","text":"This step-by-step guide explains how to set up your development environment, using either Eclipse or Intellij for the backend and web UI and Android Studio for the mobile app. Please follow it strictly to make sure that development will run as smoothly as possible and your code adheres to our guidelines. Please note that these instructions are optimized for Windows and Linux systems. If you're developing on a Mac and, we would be glad to get your feedback about how this guide can be extended with OS-specific instructions in our developer chat on Gitter .","title":"Development Environment Setup"},{"location":"DEVELOPMENT_ENVIRONMENT.html#step-1-install-a-local-sormas-server","text":"Please follow the Server Setup Instructions to set up a local SORMAS instance that you will use to test your code. Alternatively, you can also use Maven Cargo , or a Docker installation (not recommended at this time).","title":"Step 1: Install a Local SORMAS Server"},{"location":"DEVELOPMENT_ENVIRONMENT.html#step-2-check-out-the-sormas-repository","text":"Download and install the latest Git version for your operating system Optional: Install a Git client such as TortoiseGit or GitHub Desktop if you don't want to handle version control from the command line or within your IDE Optional: Clone the SORMAS-Open repository with git clone https://github.com/hzi-braunschweig/SORMAS-Project.git ; if you want to use Git from within your IDE, you can also clone the repository in Step 4 Open Git Bash and execute the following command to ensure that rebase is used when pulling the development branch rather than merge: git config --global branch.development.rebase true","title":"Step 2: Check Out the SORMAS Repository"},{"location":"DEVELOPMENT_ENVIRONMENT.html#step-3-install-java","text":"Download and install the Java 11 JDK (not JRE) for your operating system. We suggest using Zulu OpenJDK . If you're running Linux, please refer to the official documentation on how to install Zulu OpenJDK on your system.","title":"Step 3: Install Java"},{"location":"DEVELOPMENT_ENVIRONMENT.html#step-4-install-and-configure-your-ide","text":"","title":"Step 4: Install and Configure Your IDE"},{"location":"DEVELOPMENT_ENVIRONMENT.html#intellij","text":"Download and install the latest IntelliJ IDEA Ultimate ; (newer than version of 2020-04-15 to enable debugging, see https://youtrack.jetbrains.com/issue/IDEA-216528) Set the project SDK to the installed JDK Optional: Clone the SORMAS-Open repository if you haven't done so already Open the project in Intellij; make sure that under File -> Project Structure -> Modules all modules EXCEPT sormas-app are recognized; if not, add the missing modules with the + button Navigate to File -> Settings -> Plugins and make sure that Glassfish & Ant integrations are enabled Install the Vaadin 6-8 plugin ; the commercial Vaadin Designer is not needed Make a copy of sormas-base/build.properties.example , rename it to build.properties and set glassfish.domain.root to the location of the SORMAS domain inside your Payara installation Run mvn install on the sormas-base project (e.g. by opening the Maven view and executing sormas-base -> Lifecycle -> install ) Add a Payara server to IntelliJ: Open Run -> Edit Configurations , add a new configuration and choose the Glassfish server template Click on Configure next to Application server and create a new server configuration by selecting your Payara installation directory Check the After launch checkbox and specify the browser that you want SORMAS to open in once the server has been deployed Enter http://localhost:6080/sormas-ui into the URL field Make sure that the correct JRE is specified (your Java 11 JDK) Enter the path to the SORMAS domain and the credentials that you've specified when setting up the server Open the Deployment tab and add the artifacts sormas-ear , sormas-rest and sormas-ui Open the Logs tab and add a new log file pointing to the logs/server.log file in your SORMAS domain Open the Startup/Connection tab and make sure that Pass environment variables is NOT checked; ignore warnings about the debug configuration not being correct Open the config/domain.xml file in your domain directory and make sure that the java-config node contains the following code: <java-config classpath-suffix=\"\" debug-enabled=\"true\" debug-options=\"-agentlib:jdwp=transport=dt_socket,address=6009,server=n,suspend=y\" ... Open the Ant window, click on the + icon and select the sormas-base/build.xml file Execute the install and deploy-serverlibs Ant scripts Set the default working directory for run configurations by navigating to Run -> Edit Configurations -> Templates -> Application and setting Working directory to $MODULE_WORKING_DIR$","title":"IntelliJ"},{"location":"DEVELOPMENT_ENVIRONMENT.html#eclipse","text":"Download and install the latest Eclipse IDE for Enterprise Java and Web Developers Set the default JRE of Eclipse to the installed JDK: Assigning the default JRE for the workbench Optional: Clone the SORMAS-Open repository if you haven't done so already via File -> Import -> Git -> Projects from Git and cancel the process when you're asked to create a new project from the cloned repository Import the projects from the SORMAS-Open repository into your workspace via File -> Import -> Maven -> Existing Maven Projects Install the Payara Tools plugin Install the Vaadin Plugin for Eclipse ; the commercial UI designer is not needed Add a Payara server to Eclipse and enter the credentials you specified when setting up the local SORMAS server Make a copy of sormas-base/build.properties.example , rename it to build.properties and set glassfish.domain.root to the location of the SORMAS domain inside your Payara installation Drag the sormas-base/build.xml file into the Ant view in Eclipse Either run mvn install on the sormas-base project or execute the install [default] Ant script (this needs a Maven installation on your system with the M2_HOME variable set) Execute the deploy-serverlibs Ant script Highlight all Eclipse projects and choose Maven -> Update Project from the right-click menu; perform the update for all projects Start the Glassfish server and deploy sormas-ear , sormas-rest and sormas-ui by dragging the respective projects onto it, or use the Add and Remove... function by right-clicking on the server Open your browser and type in http://localhost:6080/sormas-ui to test whether the server and IDE have been set up correctly","title":"Eclipse"},{"location":"DEVELOPMENT_ENVIRONMENT.html#android-studio","text":"Please note: You only need to install Android Studio if you're developing code for the Android app. This is likely the case when you're adding new fields or entities to the system, or if you specifically want to work on the mobile app. Download and install the latest Android Studio version Please make sure to run the installer with admin rights if you're using Windows Ensure that the Android SDK installation path does not contain whitespaces; you can also change this later via Tools -> SDK Manager -> Android SDK Location Open Android Studio and import the sormas-app module from the SORMAS-Open repository Make a copy of keystore.properties.example and rename it to keystore.properties Build the Android Studio project by executing the Gradle build (this may be done automatically) Add an emulator and set the SDK version to the minSdkVersion or targetSdkVersion from build.gradle ; we suggest to test your code on both, but minSdkVersion should be preferred to ensure compatibility to the minimum supported SDK Click on Run 'app' to install and run the app on your emulator; enter http://10.0.2.2:6080/sormas-rest as the server URL when you start the newly installed app for the first time Important: Whenever you do or pull changes in the sormas-api project that you want to use in the mobile app or that are referenced there already, you need to execute the install Ant script to notify the sormas-app project of the changes.","title":"Android Studio"},{"location":"DEVELOPMENT_ENVIRONMENT.html#step-5-configure-code-formatting-and-import-settings","text":"In order to ensure a consistent code style and prevent so-called edit wars, we have set up custom configuration files for automatic code formatting and import ordering. Please make sure to adhere to the following steps for your IDE(s) before you start developing.","title":"Step 5: Configure Code Formatting and Import Settings"},{"location":"DEVELOPMENT_ENVIRONMENT.html#intellij-and-android-studio","text":"Install the Eclipse Code Formatter for Intellij/Android Studio plugin Open the plugin settings via File -> Settings -> Other Settings -> Eclipse Code Formatter and select Use the Eclipse Code Formatter Under Eclipse formatter config , choose Eclipse workspace/project folder or config file and select sormas-base/java-formatter-profile.xml Check Optimize Imports Under Import order , choose From file and select sormas-base/java-importorder-profile.importorder Make sure that Do not format other file types by IntelliJ formatter is selected Go to Editor -> Code Style -> Java -> Imports and set Class count to use import with '*' and Names count to use static import with '*' to 99 Navigate to Editor -> General -> Auto Import and disable Optimize imports on the fly Optional, but strongly recommended: - Install the Save Actions plugin that automatically applies code formatting and import reordering whenever you save a file - otherwise you will manually have to do so (by default with Ctrl+Alt+L) - Open the plugin settings via File -> Settings -> Other Settings -> Save Actions and make sure that the first three checkboxes under General and the first two checkboxes under Formatting Actions are selected","title":"IntelliJ and Android Studio"},{"location":"DEVELOPMENT_ENVIRONMENT.html#eclipse_1","text":"Open Window -> Preferences Navigate to Java -> Code Style -> Formatter , import sormas-base/java-formatter-profile.xml and apply the changes Navigate to Java -> Code Style -> Organize Imports and import sormas-base/java-importorder-profile.importorder On the same screen, set Number of imports needed for .* and Number of static imports needed for .* to 99 On the same screen, make sure that Do not create import for types starting with a lowercase letter is checked and apply the changes Navigate to Java -> Editor -> Save Actions and make sure that the following options are selected: Perform the selected actions on save , Format source code , Format all lines and Organize imports","title":"Eclipse"},{"location":"DEVELOPMENT_ENVIRONMENT.html#issues-which-can-appear-during-installation-process-of-the-project","text":"If debug mode does not work: To replace opt\\payara5\\glassfish\\modules\\launcher.jar with sormas-base/setup/launcher.jar For Windows: Please check your java_version. In case if you have the multiple java_versions installed on the system, it will always show to you the first version installed. I had the java 8 instead of 11. In order to fix it, go to environment variables, and move the 11 version up. And rerun the script. Seems that the console is reading those variables at the starting point, and the values of it can be updated only after console/script restart. For Windows: Pay attention to the postgres SQL files rights permissions after unziping the downloaded ZIP archive. Files physically were present but next script error has been generated: psql:setup.sql:7: ERROR: could not open extension control file \"C:/Program Files/PostgreSQL/10/share/extension/temporal_tables.control\": No such file or directory -I checked the file rights, and under windows they has AV attribute, however, all others has only A attribute. When I was trying to open them with Notepad++ it was saying that such file does not exist. Do you want to create it? If yes will be pressed - another message saying that the file exists, appeared. Very strange scenario... All the postgres commands (of added users, etc.) which were added at first startup of the application - will raise errors in case if such entity exists. Just ignore those errors at repeated installation of .\\server-setup.sh Check always the port number 6048 which can be occupied by an old instance of payara. -> For every installation, kill all Java/javaw processes and check the availability of 6048 port number. -> Delete files with generated domain folders and payara. In order to have a clean installation of each next ./server-setup.sh run. M2_HOME need to be set. By default, for newer version, it is set to MAVEN_HOME. But Ant script is looking for M2_HOME For eclipse formatted plugin, there is an issue for Idea: https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter - cannot save settings Path to custom eclipse folder is not valid - it works only when settings were saved from down to up. And not vice versa.","title":"Issues which can appear during installation process of the project"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html","text":"Entorno de desarrollo de SORMAS Servidor Instale su servidor local O instale su servidor de desarrollo local usando maven cargo Alternativamente, se podr\u00eda usar SERVER_DEV_SETUP.md (en este momento no es recomendable) Git Instale Git para su sistema operativo Recomendaci\u00f3n: Instale un cliente de Git como TortoiseGit si no desea manejar el control de versiones desde la l\u00ednea de comandos, o por separado para los proyectos de Eclipse y Android Studio Abra Git Bash y ejecute el comando git config --global branch.development.rebase true (lo que garantiza que se use rebase al hacer pull, en lugar de merge) Java Descargue e instale Java 11 JDK (no JRE) para su sistema operativo. Sugerimos utilizar Zulu OpenJDK: https://www.azul.com/downloads/zulu/ Linux : https://docs.azul.com/zulu/zuludocs/#ZuluUserGuide/PrepareZuluPlatform/AttachAPTRepositoryUbuntuOrDebianSys.htm sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11 Windows : Para entornos de prueba y desarrollo, sugerimos descargar y ejecutar el instalador de Java 11 JDK para sistemas cliente de 32 o 64 bits (seg\u00fan su sistema). Eclipse Instale la versi\u00f3n m\u00e1s reciente de Eclipse, la mejor opci\u00f3n es Eclipse IDE for Enterprise Java Developers . Establezca el JRE predeterminado de Eclipse como el Zulu Java SDK instalado: Assigning the default JRE for the workbench Clone el repositorio SORMAS-Open e importe los proyectos a Eclipse Si utiliza Eclipse para clonar, seleccione \"File -> Import -> Git -> Projects from Git\", y contin\u00fae hasta que se le pida crear un nuevo proyecto a partir del repositorio clonado; haga clic en Cancel, y use \"File -> Import -> Maven -> Existing Maven Projects\" para importar los proyectos a su espacio de trabajo Si clona el repositorio desde la l\u00ednea de comandos o un cliente Git, obviamente solo necesita realizar el \u00faltimo paso Instale Payara Tools Instale el complemento Vaadin para Eclipse (no es necesario instalar el dise\u00f1ador de interfaz de usuario comercial) Agregue un servidor Payara a Eclipse, e ingrese las credenciales que especific\u00f3 al configurar el servidor Configure el formateo autom\u00e1tico del c\u00f3digo (\"Window -> Preferences\"): Vaya a \"Java -> Code Style -> Formatter\", importe sormas-base/java-formatter-profile.xml , y aplique. Vaya a \"Java -> Code Style -> Organize Imports\", importe sormas-base/java-importorder-profile.importorder , \"Number of imports needed for . \" = 99 , \"Number of static imports needed for . \" = 99 , \"Do not create import for types starting with a lowercase letter\" = checked , y aplique. Vaya a \"Java -> Editor -> Save Actions\", active \"Perform the selected actions on save\", \"Format source code\" con \"Format all lines\", \"Organize imports\", y aplique. Pasos adicionales Haga una copia de \"build.properties.example\", que est\u00e1 en \"sormas-base\", c\u00e1mbiele el nombre a \"build.properties\", y establezca \"glassfish.domain.root\" como la ubicaci\u00f3n del dominio sormas que est\u00e1 en la carpeta \"glassfish/domains\" dentro de la instalaci\u00f3n de payara Arrastre el archivo \"build.xml\", que est\u00e1 en \"sormas-base\", a la vista de Ant en Eclipse O bien: Ejecute \"Maven install\" en el proyecto sormas-base O: Ejecute el script de ant \"install [default]\" (esto necesita una instalaci\u00f3n maven en su sistema con la variable M2_HOME especificada) Despu\u00e9s: Ejecute el script de ant \"deploy-serverlibs\" Resalte todos los proyectos de Eclipse y seleccione \"Maven -> Update Project\" en el men\u00fa contextual; realice la actualizaci\u00f3n para todos los proyectos Inicie el servidor Glassfish y despliegue \"sormas-ear\", \"sormas-rest\", y \"sormas-ui\" arrastrando los respectivos proyectos al servidor, o bien use la funci\u00f3n \"Add and Remove...\" haciendo clic derecho en el servidor. Abra su navegador y escriba \"http://localhost:6080/sormas-ui\" o \"https://localhost:6081/sormas-ui\" para comprobar si todo se configur\u00f3 correctamente (y para utilizar la aplicaci\u00f3n) IntelliJ Instale la edici\u00f3n Ultimate m\u00e1s reciente de IntelliJ Configure el SDK del proyecto para usar el Zulu Java 8 SDK instalado Clone el repositorio SORMAS-Project y abra el proyecto en IntelliJ asegure que en \"File -> Project Structure -> Modules\" se reconozcan todos los m\u00f3dulos (excepto la aplicaci\u00f3n de Android, que no debe agregarse), si no, agregue los m\u00f3dulos con + Asegure que en \"File -> Settings -> Plugins\" las integraciones de Glassfish y Ant est\u00e9n habilitadas (busque en la pesta\u00f1a \"Installed\") Instale el complemento Vaadin (\u00a1no el complemento Vaadin Designer!) Haga una copia de \"build.properties.example\", que est\u00e1 en \"sormas-base\", c\u00e1mbiele el nombre a \"build.properties\", y establezca \"glassfish.domain.root\" como la ubicaci\u00f3n del dominio sormas que est\u00e1 en la carpeta \"glassfish/domains\" dentro de la instalaci\u00f3n de payara Ejecute \"Maven install\" en el proyecto sormas-base Agregue un servidor Payara a IntelliJ: vaya a \"Run -> Edit configurations\" agregue una nueva configuraci\u00f3n y seleccione entre las plantillas Glassfish server seleccione el directorio payara5 para servidor de aplicaciones, y nombre el campo de servidor de aplicaciones Payara5 especifique el dominio del servidor, y las credenciales de la configuraci\u00f3n del servidor agregue \"http://localhost:6080/sormas-ui\" en la secci\u00f3n de abrir el navegador, y marque la casilla de verificaci\u00f3n After launch en la pesta\u00f1a Deployment agregue los artefactos \"sormas-ear\", \"sormas-rest\", y \"sormas-ui\" en la pesta\u00f1a Logs, agregue un nuevo registro cuya ubicaci\u00f3n apunte al registro del dominio (por ejemplo: payara5\\glassfish\\domains\\sormas\\logs\\server.log) en la pesta\u00f1a Startup/Connection, aseg\u00farese de no pasar variables de entorno (es un error abierto actualmente en intellij) - ignore la advertencia de que la configuraci\u00f3n de depuraci\u00f3n no es correcta edite su configuraci\u00f3n de dominio ..\\payara5\\glassfish\\domains\\sormas\\config\\domain.xml y asegure que el nodo java-config contenga: <java-config classpath-suffix=\"\" debug-enabled=\"true\" debug-options=\"-agentlib:jdwp=transport=dt_socket,address=6009,server=n,suspend=y\" ... Abra la ventana de Ant, haga clic en el \u00edcono \"+\", y seleccione el archivo build.xml del proyecto sormas-base Ejecute los scripts \"install\" y \"deploy-serverlibs\" en este orden Establezca el directorio de trabajo predeterminado para configuraciones de ejecuci\u00f3n: Run -> Edit Configurations -> Templates -> Application -> especifique el valor de Working directory como $MODULE_WORKING_DIR$ Configure el formateo del c\u00f3digo: deshabilite \"Optimize imports on the fly\" (Editor -> General -> Auto Import) instale Eclipse Code Formatter para IntelliJ (https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter) abra la configuraci\u00f3n del complemento (Other Settings -> Eclipse Code Formatter) y seleccione \"Use the Eclipse Code Formatter\" en \"Eclipse Formatter config file\", seleccione sormas-base/java-formatter-profile.xml marque optimizar las importaciones y, para \"Import order\", seleccione sormas-base/java-importorder-profile.importorder Importante: seleccione \"Do not format other file types by IntelliJ formatter\" vaya a Settings -> Editor -> Code style -> Java -> Imports: especifique los cantidades de clases y nombres est\u00e1ticos para importar con * to 99 para IntelliJ, el formateo del c\u00f3digo generalmente se realiza con Ctrl+Alt+L. Para el formateo autom\u00e1tico, se recomienda utilizar el complemento Save Actions y marcar las tres primeras casillas de verificaci\u00f3n en \"General\" y las dos primeras casillas de verificaci\u00f3n en \"Formatting Actions\" (https://plugins.jetbrains.com/plugin/7642-save-actions) Android Studio Nota: Solo es necesario para el desarrollo de la aplicaci\u00f3n de Android de SORMAS * Instale la versi\u00f3n m\u00e1s reciente de Android Studio (para evitar errores, inicie la instalaci\u00f3n con derechos de administrador) * Inicie la aplicaci\u00f3n * Para evitar errores, aseg\u00farese de que la ruta del SDK de Android no contenga espacios en blanco * La ruta se puede editar en Tools -> SDK Manager -> Android SDK Location * Abra Android Studio e importe el m\u00f3dulo \"sormas-app\" de SORMAS-Project * Cree un archivo keystore.properties en sormas-app (use keystore.properties.example como referencia; solo es necesario para el despliegue de la aplicaci\u00f3n). * Construya el proyecto de Android Studio ejecutando el gradle build (esto se puede hacer autom\u00e1ticamente) * Agregue un emulador con la versi\u00f3n de SDK entre las propiedades minSdkVersion y targetSdkVersion de build.gradle * En el primer inicio de la aplicaci\u00f3n, ingrese la URL del servicio rest de Sormas para la URL del servidor: http://10.0.2.2:6080/sormas-rest/ (vea: https://developer.android.com/studio/run/emulator-networking) * Configure el formateo del c\u00f3digo: - instale Eclipse Code Formatter para Android Studio (https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter) - abra la configuraci\u00f3n del complemento (Other Settings -> Eclipse Code Formatter) y seleccione \"Use the Eclipse Code Formatter\" - en \"Eclipse Formatter config file\", seleccione sormas-base/java-formatter-profile.xml - marque optimizar las importaciones y, para \"Import order\", seleccione sormas-base/java-importorder-profile.importorder - Importante:** seleccione \"Do not format other file types by IntelliJ formatter\" - vaya a Preferences -> Editor -> Code style -> Java -> Imports: especifique los cantidades de clases y nombres est\u00e1ticos para importar con * to 99 - para Android Studio, el formateo del c\u00f3digo generalmente se realiza con Ctrl+Alt+L. Para el formateo autom\u00e1tico, se recomienda utilizar el complemento Save Actions (https://plugins.jetbrains.com/plugin/7642-save-actions)","title":"Entorno de desarrollo de SORMAS"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#entorno-de-desarrollo-de-sormas","text":"","title":"Entorno de desarrollo de SORMAS"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#servidor","text":"Instale su servidor local O instale su servidor de desarrollo local usando maven cargo Alternativamente, se podr\u00eda usar SERVER_DEV_SETUP.md (en este momento no es recomendable)","title":"Servidor"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#git","text":"Instale Git para su sistema operativo Recomendaci\u00f3n: Instale un cliente de Git como TortoiseGit si no desea manejar el control de versiones desde la l\u00ednea de comandos, o por separado para los proyectos de Eclipse y Android Studio Abra Git Bash y ejecute el comando git config --global branch.development.rebase true (lo que garantiza que se use rebase al hacer pull, en lugar de merge)","title":"Git"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#java","text":"Descargue e instale Java 11 JDK (no JRE) para su sistema operativo. Sugerimos utilizar Zulu OpenJDK: https://www.azul.com/downloads/zulu/ Linux : https://docs.azul.com/zulu/zuludocs/#ZuluUserGuide/PrepareZuluPlatform/AttachAPTRepositoryUbuntuOrDebianSys.htm sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11 Windows : Para entornos de prueba y desarrollo, sugerimos descargar y ejecutar el instalador de Java 11 JDK para sistemas cliente de 32 o 64 bits (seg\u00fan su sistema).","title":"Java"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#eclipse","text":"Instale la versi\u00f3n m\u00e1s reciente de Eclipse, la mejor opci\u00f3n es Eclipse IDE for Enterprise Java Developers . Establezca el JRE predeterminado de Eclipse como el Zulu Java SDK instalado: Assigning the default JRE for the workbench Clone el repositorio SORMAS-Open e importe los proyectos a Eclipse Si utiliza Eclipse para clonar, seleccione \"File -> Import -> Git -> Projects from Git\", y contin\u00fae hasta que se le pida crear un nuevo proyecto a partir del repositorio clonado; haga clic en Cancel, y use \"File -> Import -> Maven -> Existing Maven Projects\" para importar los proyectos a su espacio de trabajo Si clona el repositorio desde la l\u00ednea de comandos o un cliente Git, obviamente solo necesita realizar el \u00faltimo paso Instale Payara Tools Instale el complemento Vaadin para Eclipse (no es necesario instalar el dise\u00f1ador de interfaz de usuario comercial) Agregue un servidor Payara a Eclipse, e ingrese las credenciales que especific\u00f3 al configurar el servidor Configure el formateo autom\u00e1tico del c\u00f3digo (\"Window -> Preferences\"): Vaya a \"Java -> Code Style -> Formatter\", importe sormas-base/java-formatter-profile.xml , y aplique. Vaya a \"Java -> Code Style -> Organize Imports\", importe sormas-base/java-importorder-profile.importorder , \"Number of imports needed for . \" = 99 , \"Number of static imports needed for . \" = 99 , \"Do not create import for types starting with a lowercase letter\" = checked , y aplique. Vaya a \"Java -> Editor -> Save Actions\", active \"Perform the selected actions on save\", \"Format source code\" con \"Format all lines\", \"Organize imports\", y aplique.","title":"Eclipse"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#pasos-adicionales","text":"Haga una copia de \"build.properties.example\", que est\u00e1 en \"sormas-base\", c\u00e1mbiele el nombre a \"build.properties\", y establezca \"glassfish.domain.root\" como la ubicaci\u00f3n del dominio sormas que est\u00e1 en la carpeta \"glassfish/domains\" dentro de la instalaci\u00f3n de payara Arrastre el archivo \"build.xml\", que est\u00e1 en \"sormas-base\", a la vista de Ant en Eclipse O bien: Ejecute \"Maven install\" en el proyecto sormas-base O: Ejecute el script de ant \"install [default]\" (esto necesita una instalaci\u00f3n maven en su sistema con la variable M2_HOME especificada) Despu\u00e9s: Ejecute el script de ant \"deploy-serverlibs\" Resalte todos los proyectos de Eclipse y seleccione \"Maven -> Update Project\" en el men\u00fa contextual; realice la actualizaci\u00f3n para todos los proyectos Inicie el servidor Glassfish y despliegue \"sormas-ear\", \"sormas-rest\", y \"sormas-ui\" arrastrando los respectivos proyectos al servidor, o bien use la funci\u00f3n \"Add and Remove...\" haciendo clic derecho en el servidor. Abra su navegador y escriba \"http://localhost:6080/sormas-ui\" o \"https://localhost:6081/sormas-ui\" para comprobar si todo se configur\u00f3 correctamente (y para utilizar la aplicaci\u00f3n)","title":"Pasos adicionales"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#intellij","text":"Instale la edici\u00f3n Ultimate m\u00e1s reciente de IntelliJ Configure el SDK del proyecto para usar el Zulu Java 8 SDK instalado Clone el repositorio SORMAS-Project y abra el proyecto en IntelliJ asegure que en \"File -> Project Structure -> Modules\" se reconozcan todos los m\u00f3dulos (excepto la aplicaci\u00f3n de Android, que no debe agregarse), si no, agregue los m\u00f3dulos con + Asegure que en \"File -> Settings -> Plugins\" las integraciones de Glassfish y Ant est\u00e9n habilitadas (busque en la pesta\u00f1a \"Installed\") Instale el complemento Vaadin (\u00a1no el complemento Vaadin Designer!) Haga una copia de \"build.properties.example\", que est\u00e1 en \"sormas-base\", c\u00e1mbiele el nombre a \"build.properties\", y establezca \"glassfish.domain.root\" como la ubicaci\u00f3n del dominio sormas que est\u00e1 en la carpeta \"glassfish/domains\" dentro de la instalaci\u00f3n de payara Ejecute \"Maven install\" en el proyecto sormas-base Agregue un servidor Payara a IntelliJ: vaya a \"Run -> Edit configurations\" agregue una nueva configuraci\u00f3n y seleccione entre las plantillas Glassfish server seleccione el directorio payara5 para servidor de aplicaciones, y nombre el campo de servidor de aplicaciones Payara5 especifique el dominio del servidor, y las credenciales de la configuraci\u00f3n del servidor agregue \"http://localhost:6080/sormas-ui\" en la secci\u00f3n de abrir el navegador, y marque la casilla de verificaci\u00f3n After launch en la pesta\u00f1a Deployment agregue los artefactos \"sormas-ear\", \"sormas-rest\", y \"sormas-ui\" en la pesta\u00f1a Logs, agregue un nuevo registro cuya ubicaci\u00f3n apunte al registro del dominio (por ejemplo: payara5\\glassfish\\domains\\sormas\\logs\\server.log) en la pesta\u00f1a Startup/Connection, aseg\u00farese de no pasar variables de entorno (es un error abierto actualmente en intellij) - ignore la advertencia de que la configuraci\u00f3n de depuraci\u00f3n no es correcta edite su configuraci\u00f3n de dominio ..\\payara5\\glassfish\\domains\\sormas\\config\\domain.xml y asegure que el nodo java-config contenga: <java-config classpath-suffix=\"\" debug-enabled=\"true\" debug-options=\"-agentlib:jdwp=transport=dt_socket,address=6009,server=n,suspend=y\" ... Abra la ventana de Ant, haga clic en el \u00edcono \"+\", y seleccione el archivo build.xml del proyecto sormas-base Ejecute los scripts \"install\" y \"deploy-serverlibs\" en este orden Establezca el directorio de trabajo predeterminado para configuraciones de ejecuci\u00f3n: Run -> Edit Configurations -> Templates -> Application -> especifique el valor de Working directory como $MODULE_WORKING_DIR$ Configure el formateo del c\u00f3digo: deshabilite \"Optimize imports on the fly\" (Editor -> General -> Auto Import) instale Eclipse Code Formatter para IntelliJ (https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter) abra la configuraci\u00f3n del complemento (Other Settings -> Eclipse Code Formatter) y seleccione \"Use the Eclipse Code Formatter\" en \"Eclipse Formatter config file\", seleccione sormas-base/java-formatter-profile.xml marque optimizar las importaciones y, para \"Import order\", seleccione sormas-base/java-importorder-profile.importorder Importante: seleccione \"Do not format other file types by IntelliJ formatter\" vaya a Settings -> Editor -> Code style -> Java -> Imports: especifique los cantidades de clases y nombres est\u00e1ticos para importar con * to 99 para IntelliJ, el formateo del c\u00f3digo generalmente se realiza con Ctrl+Alt+L. Para el formateo autom\u00e1tico, se recomienda utilizar el complemento Save Actions y marcar las tres primeras casillas de verificaci\u00f3n en \"General\" y las dos primeras casillas de verificaci\u00f3n en \"Formatting Actions\" (https://plugins.jetbrains.com/plugin/7642-save-actions)","title":"IntelliJ"},{"location":"DEVELOPMENT_ENVIRONMENT_es-CU.html#android-studio","text":"Nota: Solo es necesario para el desarrollo de la aplicaci\u00f3n de Android de SORMAS * Instale la versi\u00f3n m\u00e1s reciente de Android Studio (para evitar errores, inicie la instalaci\u00f3n con derechos de administrador) * Inicie la aplicaci\u00f3n * Para evitar errores, aseg\u00farese de que la ruta del SDK de Android no contenga espacios en blanco * La ruta se puede editar en Tools -> SDK Manager -> Android SDK Location * Abra Android Studio e importe el m\u00f3dulo \"sormas-app\" de SORMAS-Project * Cree un archivo keystore.properties en sormas-app (use keystore.properties.example como referencia; solo es necesario para el despliegue de la aplicaci\u00f3n). * Construya el proyecto de Android Studio ejecutando el gradle build (esto se puede hacer autom\u00e1ticamente) * Agregue un emulador con la versi\u00f3n de SDK entre las propiedades minSdkVersion y targetSdkVersion de build.gradle * En el primer inicio de la aplicaci\u00f3n, ingrese la URL del servicio rest de Sormas para la URL del servidor: http://10.0.2.2:6080/sormas-rest/ (vea: https://developer.android.com/studio/run/emulator-networking) * Configure el formateo del c\u00f3digo: - instale Eclipse Code Formatter para Android Studio (https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter) - abra la configuraci\u00f3n del complemento (Other Settings -> Eclipse Code Formatter) y seleccione \"Use the Eclipse Code Formatter\" - en \"Eclipse Formatter config file\", seleccione sormas-base/java-formatter-profile.xml - marque optimizar las importaciones y, para \"Import order\", seleccione sormas-base/java-importorder-profile.importorder - Importante:** seleccione \"Do not format other file types by IntelliJ formatter\" - vaya a Preferences -> Editor -> Code style -> Java -> Imports: especifique los cantidades de clases y nombres est\u00e1ticos para importar con * to 99 - para Android Studio, el formateo del c\u00f3digo generalmente se realiza con Ctrl+Alt+L. Para el formateo autom\u00e1tico, se recomienda utilizar el complemento Save Actions (https://plugins.jetbrains.com/plugin/7642-save-actions)","title":"Android Studio"},{"location":"I18N.html","text":"SORMAS Translation FAQ Who is translating SORMAS? The translation of SORMAS relies on people from the community. If you would like to see SORMAS translated to your language, please read the points below and take part in the process. How is SORMAS translated? The official SORMAS translation is done using the Crowdin platform: https://crowdin.com/project/sormas All translations done on the platform are automatically fed into SORMAS and are part of the bi-weekly release schedule. This means that any text you translate will likely be part of the next SORMAS release. Once your server (or the server of your country) is updated you will be able to see the translations in the web app and mobile app. How to participate in translating SORMAS You can join the translation project by creating a free account on Crowdin. You can also use your existing GitHub account. Before starting to translate, you need to request write access to the project. A member of the project will either accept your request or get in touch with you as soon as possible. Afterwards open the SORMAS project https://crowdin.com/project/sormas and select the language you would like to translate. You will see all files that contain translatable texts: The most important one is captions.properties. It contains the captions for all the data entry fields of SORMAS. The captions are shared by the web app and mobile app. Click on the file to open the Crowdin editor that allows you to go through all translation entries one by one as shown in the picture below: How to add a new language to SORMAS If the language you would like to translate is not available yet, please get in contact with us: https://github.com/hzi-braunschweig/SORMAS-Project","title":"I18n"},{"location":"I18N.html#sormas-translation-faq","text":"","title":"SORMAS Translation FAQ"},{"location":"I18N.html#who-is-translating-sormas","text":"The translation of SORMAS relies on people from the community. If you would like to see SORMAS translated to your language, please read the points below and take part in the process.","title":"Who is translating SORMAS?"},{"location":"I18N.html#how-is-sormas-translated","text":"The official SORMAS translation is done using the Crowdin platform: https://crowdin.com/project/sormas All translations done on the platform are automatically fed into SORMAS and are part of the bi-weekly release schedule. This means that any text you translate will likely be part of the next SORMAS release. Once your server (or the server of your country) is updated you will be able to see the translations in the web app and mobile app.","title":"How is SORMAS translated?"},{"location":"I18N.html#how-to-participate-in-translating-sormas","text":"You can join the translation project by creating a free account on Crowdin. You can also use your existing GitHub account. Before starting to translate, you need to request write access to the project. A member of the project will either accept your request or get in touch with you as soon as possible. Afterwards open the SORMAS project https://crowdin.com/project/sormas and select the language you would like to translate. You will see all files that contain translatable texts: The most important one is captions.properties. It contains the captions for all the data entry fields of SORMAS. The captions are shared by the web app and mobile app. Click on the file to open the Crowdin editor that allows you to go through all translation entries one by one as shown in the picture below:","title":"How to participate in translating SORMAS"},{"location":"I18N.html#how-to-add-a-new-language-to-sormas","text":"If the language you would like to translate is not available yet, please get in contact with us: https://github.com/hzi-braunschweig/SORMAS-Project","title":"How to add a new language to SORMAS"},{"location":"I18N_es-CU.html","text":"Preguntas frecuentes sobre la traducci\u00f3n de SORMAS \u00bfQui\u00e9n est\u00e1 traduciendo SORMAS? La traducci\u00f3n de SORMAS se basa en personas de la comunidad. Si desea ver SORMAS traducido a su idioma, lea los puntos siguientes y participe en el proceso. \u00bfC\u00f3mo se traduce SORMAS? La traducci\u00f3n oficial de SORMAS se realiza utilizando la plataforma Crowdin: https://crowdin.com/project/sormas Todas las traducciones realizadas en la plataforma se introducen autom\u00e1ticamente en SORMAS y son parte del plan de distribuci\u00f3n quincenal. Esto significa que cualquier texto que traduzca probablemente ser\u00e1 parte de la pr\u00f3xima distribuci\u00f3n de SORMAS. Una vez que su servidor (o el servidor de su pa\u00eds) est\u00e9 actualizado, podr\u00e1 ver las traducciones en la aplicaci\u00f3n web y la aplicaci\u00f3n para m\u00f3viles. C\u00f3mo participar en la traducci\u00f3n de SORMAS Puede unirse al proyecto de traducci\u00f3n creando una cuenta gratuita en Crowdin. Tambi\u00e9n puede usar su cuenta de GitHub. Antes de comenzar a traducir, debe solicitar acceso de escritura al proyecto. Un miembro del proyecto aceptar\u00e1 su solicitud o se pondr\u00e1 en contacto con usted lo antes posible. Despu\u00e9s, abra el proyecto SORMAS https://crowdin.com/project/sormas y seleccione el idioma que le gustar\u00eda traducir. Ver\u00e1 todos los archivos que contienen textos traducibles: El m\u00e1s importante es captions.properties. Contiene los t\u00edtulos de todos los campos de entrada de datos de SORMAS. Los t\u00edtulos son compartidos por la aplicaci\u00f3n web y la aplicaci\u00f3n para m\u00f3viles. Haga clic en el archivo para abrir el editor de Crowdin que permite revisar todas las entradas de traducci\u00f3n, una por una, como muestra la siguiente imagen: C\u00f3mo agregar un nuevo idioma a SORMAS Si el idioma que desea traducir no est\u00e1 disponible, p\u00f3ngase en contacto con nosotros: https://github.com/hzi-braunschweig/SORMAS-Project","title":"Preguntas frecuentes sobre la traducci\u00f3n de SORMAS"},{"location":"I18N_es-CU.html#preguntas-frecuentes-sobre-la-traduccion-de-sormas","text":"","title":"Preguntas frecuentes sobre la traducci\u00f3n de SORMAS"},{"location":"I18N_es-CU.html#quien-esta-traduciendo-sormas","text":"La traducci\u00f3n de SORMAS se basa en personas de la comunidad. Si desea ver SORMAS traducido a su idioma, lea los puntos siguientes y participe en el proceso.","title":"\u00bfQui\u00e9n est\u00e1 traduciendo SORMAS?"},{"location":"I18N_es-CU.html#como-se-traduce-sormas","text":"La traducci\u00f3n oficial de SORMAS se realiza utilizando la plataforma Crowdin: https://crowdin.com/project/sormas Todas las traducciones realizadas en la plataforma se introducen autom\u00e1ticamente en SORMAS y son parte del plan de distribuci\u00f3n quincenal. Esto significa que cualquier texto que traduzca probablemente ser\u00e1 parte de la pr\u00f3xima distribuci\u00f3n de SORMAS. Una vez que su servidor (o el servidor de su pa\u00eds) est\u00e9 actualizado, podr\u00e1 ver las traducciones en la aplicaci\u00f3n web y la aplicaci\u00f3n para m\u00f3viles.","title":"\u00bfC\u00f3mo se traduce SORMAS?"},{"location":"I18N_es-CU.html#como-participar-en-la-traduccion-de-sormas","text":"Puede unirse al proyecto de traducci\u00f3n creando una cuenta gratuita en Crowdin. Tambi\u00e9n puede usar su cuenta de GitHub. Antes de comenzar a traducir, debe solicitar acceso de escritura al proyecto. Un miembro del proyecto aceptar\u00e1 su solicitud o se pondr\u00e1 en contacto con usted lo antes posible. Despu\u00e9s, abra el proyecto SORMAS https://crowdin.com/project/sormas y seleccione el idioma que le gustar\u00eda traducir. Ver\u00e1 todos los archivos que contienen textos traducibles: El m\u00e1s importante es captions.properties. Contiene los t\u00edtulos de todos los campos de entrada de datos de SORMAS. Los t\u00edtulos son compartidos por la aplicaci\u00f3n web y la aplicaci\u00f3n para m\u00f3viles. Haga clic en el archivo para abrir el editor de Crowdin que permite revisar todas las entradas de traducci\u00f3n, una por una, como muestra la siguiente imagen:","title":"C\u00f3mo participar en la traducci\u00f3n de SORMAS"},{"location":"I18N_es-CU.html#como-agregar-un-nuevo-idioma-a-sormas","text":"Si el idioma que desea traducir no est\u00e1 disponible, p\u00f3ngase en contacto con nosotros: https://github.com/hzi-braunschweig/SORMAS-Project","title":"C\u00f3mo agregar un nuevo idioma a SORMAS"},{"location":"SECURITY.html","text":"Security Policies and Procedures This document outlines security procedures and general policies for the SORMAS project. Security Policies and Procedures Reporting a Security Bug Disclosure Policy Comments on this Policy If you want to report a bug which is not security sensible, please submit an issue . Reporting a Security Bug Our team and community take all security bugs in SORMAS seriously. Thank you for improving the security of SORMAS. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Unfortunately, SORMAS does not offer a paid bug bounty programme or other forms of compensation. Report security bugs by emailing at security@sormas.org . We will acknowledge your email and follow up with a response within 10 business days, or explain why a reply may take longer. The response will indicate the next steps in handling your report. After the initial reply to your report, the security team will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance. Report security bugs in third-party modules to the person or team maintaining the module. Disclosure Policy When the security team receives a security bug report, they will assign it to a primary handler. This person will coordinate the fix and release process, involving the following steps: Confirm the problem and determine the affected versions. Audit code to find any potential similar problems. Prepare fixes for all releases still under maintenance. These fixes will be released as fast as possible. Comments on this Policy If you have suggestions on how this process could be improved please submit a pull request.","title":"Security"},{"location":"SECURITY.html#security-policies-and-procedures","text":"This document outlines security procedures and general policies for the SORMAS project. Security Policies and Procedures Reporting a Security Bug Disclosure Policy Comments on this Policy If you want to report a bug which is not security sensible, please submit an issue .","title":"Security Policies and Procedures"},{"location":"SECURITY.html#reporting-a-security-bug","text":"Our team and community take all security bugs in SORMAS seriously. Thank you for improving the security of SORMAS. We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions. Unfortunately, SORMAS does not offer a paid bug bounty programme or other forms of compensation. Report security bugs by emailing at security@sormas.org . We will acknowledge your email and follow up with a response within 10 business days, or explain why a reply may take longer. The response will indicate the next steps in handling your report. After the initial reply to your report, the security team will endeavor to keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance. Report security bugs in third-party modules to the person or team maintaining the module.","title":"Reporting a Security Bug"},{"location":"SECURITY.html#disclosure-policy","text":"When the security team receives a security bug report, they will assign it to a primary handler. This person will coordinate the fix and release process, involving the following steps: Confirm the problem and determine the affected versions. Audit code to find any potential similar problems. Prepare fixes for all releases still under maintenance. These fixes will be released as fast as possible.","title":"Disclosure Policy"},{"location":"SECURITY.html#comments-on-this-policy","text":"If you have suggestions on how this process could be improved please submit a pull request.","title":"Comments on this Policy"},{"location":"SECURITY_es-CU.html","text":"Pol\u00edticas y procedimientos de seguridad Este documento describe los procedimientos y pol\u00edticas generales de seguridad para el proyecto SORMAS. Reportar un error de seguridad Pol\u00edtica de divulgaci\u00f3n Comentarios sobre esta pol\u00edtica Si desea reportar un error no relacionado a la seguridad, por favor env\u00ede un problema . Reportar un error de seguridad Nuestro equipo y comunidad se toman en serio todos los errores de seguridad en SORMAS. Gracias por mejorar la seguridad de SORMAS. Apreciamos sus esfuerzos y divulgaci\u00f3n responsable y haremos todo lo posible por reconocer sus contribuciones. Desafortunadamente, SORMAS no ofrece un programa de recompensas por errores detectados u otras formas de compensaci\u00f3n. Reporte errores de seguridad enviando un correo electr\u00f3nico a security@sormas.org . Reconoceremos su correo electr\u00f3nico y le daremos respuesta durante los siguientes 10 d\u00edas h\u00e1biles, o explicaremos por qu\u00e9 la respuesta puede demorar m\u00e1s. La respuesta indicar\u00e1 los pr\u00f3ximos pasos para manejar su reporte. Despu\u00e9s de la respuesta inicial a su reporte, el equipo de seguridad se esforzar\u00e1 por mantenerlo informado del progreso hacia una soluci\u00f3n y un anuncio completo, y puede solicitar informaci\u00f3n u orientaci\u00f3n adicional. Reporte errores de seguridad en m\u00f3dulos de terceros a la persona o equipo que mantiene el m\u00f3dulo. Pol\u00edtica de divulgaci\u00f3n Cuando el equipo de seguridad reciba un reporte de error de seguridad, lo asignar\u00e1 a un manejador principal. Esta persona coordinar\u00e1 el proceso de soluci\u00f3n y distribuci\u00f3n, que incluye los siguientes pasos: Confirmar el problema y determinar las versiones afectadas. Revisar el c\u00f3digo para encontrar posibles problemas similares. Preparar soluciones para todas las versiones que a\u00fan se mantienen. Estas soluciones se publicar\u00e1n lo m\u00e1s r\u00e1pido posible. Comentarios sobre esta pol\u00edtica Si tiene sugerencias sobre c\u00f3mo se podr\u00eda mejorar este proceso, haga una pull request.","title":"Pol\u00edticas y procedimientos de seguridad"},{"location":"SECURITY_es-CU.html#politicas-y-procedimientos-de-seguridad","text":"Este documento describe los procedimientos y pol\u00edticas generales de seguridad para el proyecto SORMAS. Reportar un error de seguridad Pol\u00edtica de divulgaci\u00f3n Comentarios sobre esta pol\u00edtica Si desea reportar un error no relacionado a la seguridad, por favor env\u00ede un problema .","title":"Pol\u00edticas y procedimientos de seguridad"},{"location":"SECURITY_es-CU.html#reportar-un-error-de-seguridad","text":"Nuestro equipo y comunidad se toman en serio todos los errores de seguridad en SORMAS. Gracias por mejorar la seguridad de SORMAS. Apreciamos sus esfuerzos y divulgaci\u00f3n responsable y haremos todo lo posible por reconocer sus contribuciones. Desafortunadamente, SORMAS no ofrece un programa de recompensas por errores detectados u otras formas de compensaci\u00f3n. Reporte errores de seguridad enviando un correo electr\u00f3nico a security@sormas.org . Reconoceremos su correo electr\u00f3nico y le daremos respuesta durante los siguientes 10 d\u00edas h\u00e1biles, o explicaremos por qu\u00e9 la respuesta puede demorar m\u00e1s. La respuesta indicar\u00e1 los pr\u00f3ximos pasos para manejar su reporte. Despu\u00e9s de la respuesta inicial a su reporte, el equipo de seguridad se esforzar\u00e1 por mantenerlo informado del progreso hacia una soluci\u00f3n y un anuncio completo, y puede solicitar informaci\u00f3n u orientaci\u00f3n adicional. Reporte errores de seguridad en m\u00f3dulos de terceros a la persona o equipo que mantiene el m\u00f3dulo.","title":"Reportar un error de seguridad"},{"location":"SECURITY_es-CU.html#politica-de-divulgacion","text":"Cuando el equipo de seguridad reciba un reporte de error de seguridad, lo asignar\u00e1 a un manejador principal. Esta persona coordinar\u00e1 el proceso de soluci\u00f3n y distribuci\u00f3n, que incluye los siguientes pasos: Confirmar el problema y determinar las versiones afectadas. Revisar el c\u00f3digo para encontrar posibles problemas similares. Preparar soluciones para todas las versiones que a\u00fan se mantienen. Estas soluciones se publicar\u00e1n lo m\u00e1s r\u00e1pido posible.","title":"Pol\u00edtica de divulgaci\u00f3n"},{"location":"SECURITY_es-CU.html#comentarios-sobre-esta-politica","text":"Si tiene sugerencias sobre c\u00f3mo se podr\u00eda mejorar este proceso, haga una pull request.","title":"Comentarios sobre esta pol\u00edtica"},{"location":"SERVER_CUSTOMIZATION.html","text":"Configuring and Customizing a SORMAS Server SORMAS has been created and is developed as an international system that can potentially be used everywhere in the world. However, every country naturally has its own requirements and processes, and in addition, there is a set of information that needs to be specified before a SORMAS instance can function properly. For this reason, there are a number of ways in which such a SORMAS instance can be configured and customized: Server Configuration : The basic server configuration is available as a .properties file, needs to be adjusted for every SORMAS instance, and is relevant for both production and development. This should be edited directly after installing the server. Feature Configuration : Most SORMAS features are optional and can be turned on or off directly in the database. Disease Configuration : SORMAS supports a large number of infectious diseases which can be enabled or disabled and further customized directly in the database. Infrastructure Data : Most infrastructure data (except countries and continents) are not shipped with SORMAS because they are country-specific. Importing the infrastructure data of your country (or creating some dummy data) is one of the first things you should do after setting up a SORMAS server. Beyond that, the Wiki contains even more customization options: Adding Disease Variants to a SORMAS Server Customizing the Login and About Pages Customizing the Name and Icon of the Android App Creating a SORMAS2SORMAS Certificate Server Configuration The general SORMAS configuration is stored in the sormas.properties file that you can find in your payara domain folder. When you set up a new SORMAS server, please make sure to go over all entries in that file and adjust their values if necessary. Each property has an explanation telling you its purpose, and some of them also have a default value that you can use to revert the changes you've made. Most of these properties are commented (indicated by a # in front of their name and value), which means that the default value will automatically be used (e.g. the path to temporary files on the server) or the associated feature will not be used at all (e.g. the custom branding properties or the configuration of an external symptom journal). Some properties however are not commented, but also don't have a default value. It is strongly recommended to enter values for these properties because they are required for some parts of SORMAS to work correctly, or because they are very specific to your individual SORMAS instance. This especially applies to the country.locale and country.name properties, which will cause serious problems while using the application if left empty. Important: The sormas.properties file contains all properties that existed in the SORMAS version that you initially installed on your server. New properties added in more recent SORMAS versions are not automatically added! If you're operating a SORMAS server, we strongly suggest to read the release notes of new versions. If properties have been added to this file, they will be communicated in these notes so that you can add them to your properties file. This Wiki page contains a list and explanation of all currently configurable properties. Feature Configuration Some of the features of SORMAS can be enabled or disabled to further customize the system. Right now, this is only possible directly in the featureconfiguration table in the database. This table contains one entry for every configurable feature and is automatically populated during server startup. Setting the enabled to true or false will enable or disable the feature, respectively. Changes are immediately applied to the running system and don't require a server restart. The columns region , district , disease and enddate are currently only applicable for the line listing feature and define the scope in which the line listing is used. Line listing is configurable from the user interface and does not need to be manually edited in the database. Important: If you're using the mobile app, you also need to update the changedate to the current date and time whenever you enable or disable a feature! Otherwise the mobile applications will not be notified about the change. This Wiki page contains a list and explanation of all currently configurable features. Disease Configuration SORMAS supports a wide range of diseases, and not all of those might be relevant to every SORMAS instance or might be used in a different context. As with features, configuring diseases is currently only possible directly in the database via the diseaseconfiguration table. All diseases have a default value for each of their properties that is applied when the respective database entry is empty. Changing these entries overrides that default value. Unlike with features, disease configurations are cached and therefore require you to restart the server before they are applied. Important: If you're using the mobile app, you also need to update the changedate to the current date and time whenever you change a disease configuration! Otherwise the mobile applications will not be notified about the change. It is possible to adjust the following properties that define how the diseases are handled: active : Whether this disease is used in this SORMAS instance. The concrete type of usage is specified by the other properties. primaryDisease : Primary diseases are enabled for case surveillance while non-primary diseases can only be used for pathogen testing. caseBased : Case-based diseases can be used to create cases while non-case-based diseases can be used for aggregate reporting. followUpEnabled : Whether follow-up is enabled for this disease, i.e. the follow-up status can be managed and visits can be created. followUpDuration : The minimum duration of follow-up for contacts of this disease. caseFollowUpDuration : The minimum duration of follow-up for cases of this disease. eventParticipantFollowUpDuration : The minimum duration of follow-up for event participants of this disease. Please note that event participant follow-up is not yet implemented. extendedClassification : Whether this disease uses an extended case classification system that allows users to specify whether a case has been clinically, epidemiologically or laboratory-diagnostically confirmed. extendedClassificationMulti : Whether the three confirmation properties used for extended classification can be specified individually, i.e. users can enter multiple sources of confirmation. Infrastructure Data When you start a SORMAS server for the first time and the createDefaultEntities property is enabled, some default infrastructure data is generated to ensure that the server is usable and the default users can be created. It is recommended (and, unless you're working on a demo server, necessary) to archive this default data and import the official infrastructure data of the country or part of the country that you intend to use SORMAS in instead. SORMAS by default splits infrastructure data into four mandatory categories. Starting from the highest administrative division, these are Regions , Districts , Communities , and Health Facilities . In addition, Points of Entry represent places like harbors and airports where people are frequently entering the country, while Laboratories are technically health facilities that are specifically used for sample testing purposes. The Area infrastructure type can be enabled in the feature configuration and adds another optional layer of infrastructure above Regions. Finally, it is possible to add Countries , Subcontinents and Continents to your system if you also want to collect data from outside the country SORMAS is used in (e.g. because you want to record travels or events). Importing Infrastructure To import your data for one of the administrative divisions, log in as the default admin user (which is created even when createDefaultEntities is disabled) and open the Configuration menu. Open any of the tabs for the infrastructure data you want to import and click on the Import button on the top right. You can download an import guide from within the popup window that will be opened, containing detailed instructions about the import process and the steps you need to go through in order to successfully import your data. Make sure that you always start with the highest administrative division when importing (i.e. at least Countries if you want to collect data from other countries as well, Areas if enabled, or Regions otherwise) and work your way down to the lowest, because lower divisions typically contain mandatory references to higher divisions. For Countries , Subcontinents and Continents , SORMAS provides a default import that allows you to automatically add a complete set of data to your system. For Countries , this default data equals to the official list of countries provided by the WHO . For Subcontinents and Continents , the list is based on the data used by the Robert Koch Institut .","title":"Custimization"},{"location":"SERVER_CUSTOMIZATION.html#configuring-and-customizing-a-sormas-server","text":"SORMAS has been created and is developed as an international system that can potentially be used everywhere in the world. However, every country naturally has its own requirements and processes, and in addition, there is a set of information that needs to be specified before a SORMAS instance can function properly. For this reason, there are a number of ways in which such a SORMAS instance can be configured and customized: Server Configuration : The basic server configuration is available as a .properties file, needs to be adjusted for every SORMAS instance, and is relevant for both production and development. This should be edited directly after installing the server. Feature Configuration : Most SORMAS features are optional and can be turned on or off directly in the database. Disease Configuration : SORMAS supports a large number of infectious diseases which can be enabled or disabled and further customized directly in the database. Infrastructure Data : Most infrastructure data (except countries and continents) are not shipped with SORMAS because they are country-specific. Importing the infrastructure data of your country (or creating some dummy data) is one of the first things you should do after setting up a SORMAS server. Beyond that, the Wiki contains even more customization options: Adding Disease Variants to a SORMAS Server Customizing the Login and About Pages Customizing the Name and Icon of the Android App Creating a SORMAS2SORMAS Certificate","title":"Configuring and Customizing a SORMAS Server"},{"location":"SERVER_CUSTOMIZATION.html#server-configuration","text":"The general SORMAS configuration is stored in the sormas.properties file that you can find in your payara domain folder. When you set up a new SORMAS server, please make sure to go over all entries in that file and adjust their values if necessary. Each property has an explanation telling you its purpose, and some of them also have a default value that you can use to revert the changes you've made. Most of these properties are commented (indicated by a # in front of their name and value), which means that the default value will automatically be used (e.g. the path to temporary files on the server) or the associated feature will not be used at all (e.g. the custom branding properties or the configuration of an external symptom journal). Some properties however are not commented, but also don't have a default value. It is strongly recommended to enter values for these properties because they are required for some parts of SORMAS to work correctly, or because they are very specific to your individual SORMAS instance. This especially applies to the country.locale and country.name properties, which will cause serious problems while using the application if left empty. Important: The sormas.properties file contains all properties that existed in the SORMAS version that you initially installed on your server. New properties added in more recent SORMAS versions are not automatically added! If you're operating a SORMAS server, we strongly suggest to read the release notes of new versions. If properties have been added to this file, they will be communicated in these notes so that you can add them to your properties file. This Wiki page contains a list and explanation of all currently configurable properties.","title":"Server Configuration"},{"location":"SERVER_CUSTOMIZATION.html#feature-configuration","text":"Some of the features of SORMAS can be enabled or disabled to further customize the system. Right now, this is only possible directly in the featureconfiguration table in the database. This table contains one entry for every configurable feature and is automatically populated during server startup. Setting the enabled to true or false will enable or disable the feature, respectively. Changes are immediately applied to the running system and don't require a server restart. The columns region , district , disease and enddate are currently only applicable for the line listing feature and define the scope in which the line listing is used. Line listing is configurable from the user interface and does not need to be manually edited in the database. Important: If you're using the mobile app, you also need to update the changedate to the current date and time whenever you enable or disable a feature! Otherwise the mobile applications will not be notified about the change. This Wiki page contains a list and explanation of all currently configurable features.","title":"Feature Configuration"},{"location":"SERVER_CUSTOMIZATION.html#disease-configuration","text":"SORMAS supports a wide range of diseases, and not all of those might be relevant to every SORMAS instance or might be used in a different context. As with features, configuring diseases is currently only possible directly in the database via the diseaseconfiguration table. All diseases have a default value for each of their properties that is applied when the respective database entry is empty. Changing these entries overrides that default value. Unlike with features, disease configurations are cached and therefore require you to restart the server before they are applied. Important: If you're using the mobile app, you also need to update the changedate to the current date and time whenever you change a disease configuration! Otherwise the mobile applications will not be notified about the change. It is possible to adjust the following properties that define how the diseases are handled: active : Whether this disease is used in this SORMAS instance. The concrete type of usage is specified by the other properties. primaryDisease : Primary diseases are enabled for case surveillance while non-primary diseases can only be used for pathogen testing. caseBased : Case-based diseases can be used to create cases while non-case-based diseases can be used for aggregate reporting. followUpEnabled : Whether follow-up is enabled for this disease, i.e. the follow-up status can be managed and visits can be created. followUpDuration : The minimum duration of follow-up for contacts of this disease. caseFollowUpDuration : The minimum duration of follow-up for cases of this disease. eventParticipantFollowUpDuration : The minimum duration of follow-up for event participants of this disease. Please note that event participant follow-up is not yet implemented. extendedClassification : Whether this disease uses an extended case classification system that allows users to specify whether a case has been clinically, epidemiologically or laboratory-diagnostically confirmed. extendedClassificationMulti : Whether the three confirmation properties used for extended classification can be specified individually, i.e. users can enter multiple sources of confirmation.","title":"Disease Configuration"},{"location":"SERVER_CUSTOMIZATION.html#infrastructure-data","text":"When you start a SORMAS server for the first time and the createDefaultEntities property is enabled, some default infrastructure data is generated to ensure that the server is usable and the default users can be created. It is recommended (and, unless you're working on a demo server, necessary) to archive this default data and import the official infrastructure data of the country or part of the country that you intend to use SORMAS in instead. SORMAS by default splits infrastructure data into four mandatory categories. Starting from the highest administrative division, these are Regions , Districts , Communities , and Health Facilities . In addition, Points of Entry represent places like harbors and airports where people are frequently entering the country, while Laboratories are technically health facilities that are specifically used for sample testing purposes. The Area infrastructure type can be enabled in the feature configuration and adds another optional layer of infrastructure above Regions. Finally, it is possible to add Countries , Subcontinents and Continents to your system if you also want to collect data from outside the country SORMAS is used in (e.g. because you want to record travels or events).","title":"Infrastructure Data"},{"location":"SERVER_CUSTOMIZATION.html#importing-infrastructure","text":"To import your data for one of the administrative divisions, log in as the default admin user (which is created even when createDefaultEntities is disabled) and open the Configuration menu. Open any of the tabs for the infrastructure data you want to import and click on the Import button on the top right. You can download an import guide from within the popup window that will be opened, containing detailed instructions about the import process and the steps you need to go through in order to successfully import your data. Make sure that you always start with the highest administrative division when importing (i.e. at least Countries if you want to collect data from other countries as well, Areas if enabled, or Regions otherwise) and work your way down to the lowest, because lower divisions typically contain mandatory references to higher divisions. For Countries , Subcontinents and Continents , SORMAS provides a default import that allows you to automatically add a complete set of data to your system. For Countries , this default data equals to the official list of countries provided by the WHO . For Subcontinents and Continents , the list is based on the data used by the Robert Koch Institut .","title":"Importing Infrastructure"},{"location":"SERVER_CUSTOMIZATION_es-CU.html","text":"Personalizar un servidor de SORMAS Contenido Configuraci\u00f3n del servidor Importar datos de infraestructura Configuraci\u00f3n de enfermedades Configuraci\u00f3n de caracter\u00edsticas Configuraci\u00f3n del servidor Despu\u00e9s de instalar un servidor de SORMAS, puede personalizar varias configuraciones que definen c\u00f3mo funciona y se configura SORMAS. Esto se hace en el archivo sormas.properties que puede encontrar en su carpeta de dominio. Este archivo contiene explicaciones para cada propiedad y tambi\u00e9n un valor predeterminado en caso de que desee revertir cualquier cambio que haya realizado. La mayor\u00eda de estas propiedades est\u00e1n comentadas (indicado por un # delante de su nombre y valor) porque el valor predeterminado deber\u00eda funcionar para la mayor\u00eda de los servidores. Si desea cambiar estas propiedades, puede eliminar el # y especificar un valor v\u00e1lido. Recomendamos asignar valores a las propiedades que no est\u00e1n comentadas de forma predeterminada porque son espec\u00edficas de su servidor (por ejemplo, la configuraci\u00f3n regional/idioma predeterminado, el centro del pa\u00eds o provincia en que est\u00e1 utilizando SORMAS, y la URL que conduce al archivo .apk para m\u00f3viles). Tenga en cuenta que este archivo contiene todas las propiedades que exist\u00edan en la versi\u00f3n de SORMAS que instal\u00f3 inicialmente en su servidor. Recomendamos leer las notas de las nuevas versiones para mantenerse actualizado sobre las nuevas propiedades o si los valores esperados de las existentes han cambiado. En cualquiera de estos casos, debe actualizar manualmente el archivo de propiedades, e insertar la nueva propiedad o cambiar el valor existente por uno que sea compatible. Las notas de la versi\u00f3n le dar\u00e1n instrucciones sobre c\u00f3mo hacer esto. Actualmente se pueden configurar las siguientes propiedades: Configuraci\u00f3n regional predeterminada country.locale : Esta es la configuraci\u00f3n regional que usa su servidor siempre que el usuario no la haya sobrescrito en su configuraci\u00f3n. Afecta tanto el idioma en que se muestra SORMAS como, por ejemplo, los formatos de fecha. Prefijo EPID country.epidprefix : SORMAS genera autom\u00e1ticamente n\u00fameros EPID para los nuevos casos. Este es el prefijo que usa su pa\u00eds para todos estos n\u00fameros. La mayor\u00eda de las veces ser\u00e1 alg\u00fan tipo de c\u00f3digo de pa\u00eds, y debe tener tres caracteres. Centro/zoom de pa\u00eds country.center.latitude , country.center.longitude , y map.zoom : Estas son las coordenadas geogr\u00e1ficas del centro geogr\u00e1fico del pa\u00eds o la provincia en que est\u00e1 utilizando SORMAS. Se utilizan para establecer la ubicaci\u00f3n inicial de los mapas utilizados en los tableros de control y las estad\u00edsticas. URL de la aplicaci\u00f3n app.url : El directorio de su servidor donde se almacena el archivo .apk para m\u00f3viles que se utiliza para actualizar autom\u00e1ticamente la aplicaci\u00f3n de Android cuando se publica una nueva versi\u00f3n. Deber\u00eda poder copiar el ejemplo dado en el archivo de propiedades, y reemplazar solamente el marcador de posici\u00f3n SERVER-NAME. Rutas de archivo documents.path , temp.path , generated.path , y custom.path : Las carpetas en las que SORMAS almacena archivos, ya sea temporalmente durante la exportaci\u00f3n de casos, o permanentemente como plantillas de importaci\u00f3n o documentos. Los archivos en temp.path se eliminan autom\u00e1ticamente a la medianoche. Los archivos en custom.path se pueden utilizar para personalizar la p\u00e1gina de inicio de sesi\u00f3n, por ejemplo, para proporcionar inicios de sesi\u00f3n predeterminados para servidores demo, o agregar colaboradores adicionales a la barra lateral derecha. Clasificaci\u00f3n autom\u00e1tica de casos feature.automaticcaseclassification : Determina si SORMAS clasifica autom\u00e1ticamente los casos en funci\u00f3n de una serie de criterios definidos en el c\u00f3digo. Ajustes de correo electr\u00f3nico email.sender.address , y email.sender.name : La direcci\u00f3n de correo electr\u00f3nico y el nombre de remitente que se deben usar cuando SORMAS env\u00eda correos electr\u00f3nicos, por ejemplo, para notificar a los usuarios sobre eventos espec\u00edficos. Configuraci\u00f3n de SMS sms.sender.name , sms.auth.key , y sms.auth.secret : Adem\u00e1s de correos electr\u00f3nicos, SORMAS tambi\u00e9n admite el env\u00edo autom\u00e1tico de SMS a los usuarios simult\u00e1neamente (por ejemplo, cuando un caso se ha clasificado como confirmado). El proveedor de SMS que utiliza SORMAS es la API SMS de Vonage (https://www.vonage.com/communications-apis/sms/). Si tiene una cuenta all\u00ed, puede usar su clave y secreto aqu\u00ed para permitir el env\u00edo de SMS. Dejar estas propiedades sin especificar deshabilitar\u00e1 esta caracter\u00edstica. Separador CSV csv.separator : El separador que los archivos CSV deben usar para separar columnas. Esto depende de la configuraci\u00f3n regional de su servidor. La mayor\u00eda de los sistemas pueden usar el valor predeterminado ( , ), pero, por ejemplo, los sistemas alemanes deben configurarse para usar ; . Umbral de similitud de nombres namesimilaritythreshold : Esto se usa al comparar casos o contactos para encontrar duplicados en el sistema, ya sea en retrospecci\u00f3n, o durante la creaci\u00f3n o importaci\u00f3n. Cuanto mayor sea el valor, m\u00e1s restrictivo ser\u00e1 el algoritmo, es decir, se encontrar\u00e1n menos duplicados potenciales. Recomendamos experimentar con esta configuraci\u00f3n para ver qu\u00e9 valor funciona para su pa\u00eds e idioma. Modo de desarrollador devmode : Habilitar el modo de desarrollador le dar\u00e1 acceso a una pesta\u00f1a en el men\u00fa Configuraci\u00f3n que permite a los administradores crear casos y contactos ficticios para llenar r\u00e1pidamente la base de datos. Esto solo debe ser utilizado en sistemas de desarrollo o demostraci\u00f3n, y debe dejarse desactivado para servidores de producci\u00f3n. Umbral de sincronizaci\u00f3n de infraestructura infrastructuresyncthreshold : La sincronizaci\u00f3n de los datos de infraestructura con las aplicaciones m\u00f3viles (por ejemplo, provincias o centros de salud) se realiza por partes para evitar timeouts de conexi\u00f3n. Si espera que sus usuarios tengan una conexi\u00f3n a Internet muy mala, reducir este umbral podr\u00eda facilitarles la sincronizaci\u00f3n de estos datos. Umbrales para archivar daysAfterCaseGetsArchived , y daysAfterEventGetsArchived : El n\u00famero de d\u00edas sin ning\u00fan cambio despu\u00e9s de los cuales los casos/eventos se archivan autom\u00e1ticamente (es decir, ya no se mostrar\u00e1n en los directorios normales, pero seguir\u00e1n contando para estad\u00edsticas o recuentos en el tablero de control, y los usuarios con el derecho de usuario correspondiente a\u00fan podr\u00e1n verlos). Si se especifican como 0, el archivado autom\u00e1tico se deshabilita. Ejecutable Rscript rscript.executable : La ubicaci\u00f3n del ejecutable Rscript. Si ha instalado Rscript en su servidor y especifica la ruta aqu\u00ed (el valor predeterminado deber\u00eda funcionar para sistemas Linux siempre que haya utilizado la ruta de instalaci\u00f3n predeterminada), los diagramas de red para las cadenas de transmisi\u00f3n se mostrar\u00e1n en la aplicaci\u00f3n web. Interfaz de diario de s\u00edntomas : Propiedades utilizadas para conectarse a un servicio de diario de s\u00edntomas externo. interface.symptomjournal.url es la URL del sitio web al que debe conectarse SORMAS; interface.symptomjournal.authurl es la URL utilizada para autenticar SORMAS en el servicio externo; interface.symptomjournal.clientid y interface.symptomjournal.secret son las credenciales utilizadas para el proceso de autenticaci\u00f3n. Se puede crear autom\u00e1ticamente un usuario predeterminado al inicio utilizando interface.symptomjournal.defaultuser.username y interface.symptomjournal.defaultuser.password . Este usuario puede ser utilizado por el sistema de diario de s\u00edntomas para conectarse a SORMAS. Interfaz de diario de paciente Propiedades utilizadas para conectarse a un servicio de diario de paciente externo. interface.patientdiary.url es la URL del sitio web al que debe conectarse SORMAS; interface.patientdiary.probandsurl es la URL del sitio web al que SORMAS puede enviar notificaciones; interface.patientdiary.authurl es la URL a trav\u00e9s de la cual SORMAS puede obtener una autorizaci\u00f3n para el diario de paciente externo; interface.patientdiary.email y interface.patientdiary.password son las credenciales utilizadas por SORMAS para autenticarse en el diario de paciente externo; se puede crear autom\u00e1ticamente un usuario predeterminado al inicio utilizando interface.patientdiary.defaultuser.username y interface.patientdiary.defaultuser.password . Este usuario puede ser utilizado por el sistema de diario de paciente para conectarse a SORMAS. Marca personalizada : Propiedades utilizadas para aplicar una marca personalizada a SORMAS que anula su nombre y logotipo predeterminado. El uso de estas propiedades tambi\u00e9n modifica la barra lateral y le agrega otra \u00e1rea personalizable. Si desea utilizar esta funci\u00f3n, asigne true a custombranding . custombranding.name es el nombre que desea usar, custombranding.logo.path es la ruta al logo que debe usarse. Geocodificaci\u00f3n Propiedades utilizadas para integrar un servicio de geocodificaci\u00f3n externo para obtener las coordenadas geogr\u00e1ficas de las direcciones. geocodingServiceUrlTemplate es la URL para buscar detalles de las direcciones, los marcadores de posici\u00f3n ${street} , ${houseNumber} , ${postalCode} , y ${city} se reemplazar\u00e1n con los campos de direcci\u00f3n reales al buscar; geocodingLongitudeJsonPath and geocodingLatitudeJsonPath se utilizan para obtener la longitud y latitud de la direcci\u00f3n en el resultado de la solicitud al servicio de geocodificaci\u00f3n. Proveedor de autenticaci\u00f3n : Permite al usuario elegir la forma de autenticaci\u00f3n para SORMAS y todos sus clientes de terceros. Valores admitidos SORMAS (predeterminado) y KEYCLOAK Sincronizaci\u00f3n de usuarios del proveedor de autenticaci\u00f3n al inicio : Habilita la sincronizaci\u00f3n de usuarios as\u00edncronos cuando se inicia el sistema. Dado que la sincronizaci\u00f3n de usuarios es necesaria principalmente para una sincronizaci\u00f3n inicial, se recomienda deshabilitar/eliminar esta propiedad una vez se haya realizado una sincronizaci\u00f3n inicial. La sincronizaci\u00f3n de usuarios funcionar\u00e1 de manera similar a la sincronizaci\u00f3n manual de usuarios: crea todos los usuarios que faltan en el proveedor de autenticaci\u00f3n externo actualiza todos los usuarios existentes en el proveedor de autenticaci\u00f3n externo conserva la contrase\u00f1a del usuario si el usuario no existe en el proveedor de autenticaci\u00f3n externo no sobrescribir\u00e1 la contrase\u00f1a del usuario si el usuario ya est\u00e1 en el proveedor de autenticaci\u00f3n externo (la b\u00fasqueda de coincidencias se realiza mediante el nombre de usuario sin distinci\u00f3n entre may\u00fasculas y min\u00fasculas) solo sincronizar\u00e1 usuarios activos (los usuarios inactivos se sincronizan autom\u00e1ticamente cuando se activan manualmente) se habilita a trav\u00e9s de una propiedad en sormas.properties authentication.provider.userSyncAtStartup (por defecto est\u00e1 deshabilitada) P\u00e1gina de inicio de sesi\u00f3n personalizada Al configurar el servidor se crea un directorio de archivos personalizado (muy probablemente /opt/sormas/custom ). Puede ajustar los archivos login*.html en ese directorio para personalizar la p\u00e1gina de inicio de sesi\u00f3n. Archivos de descarga personalizados en la secci\u00f3n Acerca de Puede crear una subcarpeta aboutfiles en el directorio personalizado mencionado anteriormente (por ejemplo, /opt/sormas/custom/aboutfiles ). Cualquier archivo en ese directorio estar\u00e1 disponible en la secci\u00f3n Acerca de de la interfaz. Importar datos de infraestructura Cuando inicia un servidor de SORMAS por primera vez, se generan algunos datos de infraestructura predeterminados para garantizar que el servidor sea utilizable y se puedan crear los usuarios predeterminados. Se recomienda (y, a menos que est\u00e9 trabajando en un servidor demo, es necesario) archivar estos datos predeterminados, e importar los datos de infraestructura oficiales del pa\u00eds o parte del pa\u00eds en que desea utilizar SORMAS. Importar SORMAS divide por defecto los datos de infraestructura en cuatro categor\u00edas. Partiendo de la divisi\u00f3n administrativa m\u00e1s alta, estos son: Provincias , Municipios , \u00c1reas de salud , y Centros de salud . Adicionalmente, Puntos de entrada representa lugares, como puertos y aeropuertos, donde hay una entrada frecuente de personas al pa\u00eds, y Laboratorios son t\u00e9cnicamente centros de salud que se utilizan espec\u00edficamente para realizar pruebas de muestras. Para importar sus datos para una de estas divisiones administrativas, inicie sesi\u00f3n como usuario administrador predeterminado y abra el men\u00fa Configuraci\u00f3n . Abra cualquiera de las pesta\u00f1as para los datos de infraestructura que desea importar, y haga clic en el bot\u00f3n Importar en la parte superior derecha. Puede descargar una gu\u00eda de importaci\u00f3n desde la ventana emergente que se abrir\u00e1, que contiene instrucciones detalladas sobre el proceso de importaci\u00f3n y los pasos que debe seguir para importar sus datos correctamente. Aseg\u00farese de comenzar siempre con la divisi\u00f3n administrativa m\u00e1s alta al importar, es decir, las provincias, y contin\u00fae hasta la m\u00e1s baja, ya que las divisiones inferiores suelen contener referencias a divisiones superiores. Archivar Despu\u00e9s de importar sus datos de infraestructura, debe archivar los datos predeterminados, a menos que desee que aparezcan en su aplicaci\u00f3n. Para hacerlo, vuelva a abrir el men\u00fa Configuraci\u00f3n y la pesta\u00f1a de los datos de infraestructura que desea archivar. Puede usar el filtro de texto en la parte superior de la pantalla para escribir el nombre de los datos predeterminados, luego haga clic en el \u00edcono de edici\u00f3n a la derecha, y en la ventana emergente que se abre, haga clic en Archivar y confirme su elecci\u00f3n. Despu\u00e9s de archivar los datos de infraestructura predeterminados, es posible que desee editar los usuarios predeterminados y asignarlos a las divisiones administrativas que haya importado. Para hacerlo, vaya al men\u00fa Usuario y haga clic en el \u00edcono de edici\u00f3n debajo del usuario que desea reasignar. Configuraci\u00f3n de enfermedades SORMAS admite una amplia gama de enfermedades, y no todas ellas pueden ser relevantes para cualquier instancia de SORMAS o pueden usarse en un contexto diferente. Es posible ajustar las siguientes variables que definen c\u00f3mo se manejan las diferentes enfermedades: Si la enfermedad es activa , es decir, se usa en esta instancia de SORMAS Si la enfermedad es una enfermedad primaria , es decir, est\u00e1 habilitada para la vigilancia de casos; las enfermedades no primarias a\u00fan se pueden utilizar para pruebas de pat\u00f3genos. Si la enfermedad es basada en casos ; si no, solo est\u00e1 habilitada para informes de casos agregados Si el seguimiento de contactos est\u00e1 habilitado La duraci\u00f3n del seguimiento de contactos En este momento, desafortunadamente, no es posible cambiar estas variables desde la interfaz de usuario; se requiere acceso directo a la base de datos . Si tiene este acceso, puede editar las entradas de la tabla diseaseconfiguration de acuerdo a sus necesidades. MUY IMPORTANTE: Siempre que edite una entrada en esta tabla, tambi\u00e9n debe configurar manualmente changedate como la fecha y hora actuales. Esto es necesario para que la aplicaci\u00f3n de m\u00f3viles sincronice los cambios y utilice la configuraci\u00f3n de enfermedades editada. Configuraci\u00f3n de caracter\u00edsticas Algunas de las caracter\u00edsticas de SORMAS se pueden habilitar o deshabilitar para personalizar a\u00fan m\u00e1s el sistema. En este momento, desafortunadamente, no es posible cambiar estas variables desde la interfaz de usuario; se requiere acceso directo a la base de datos . Si tiene este acceso, puede editar las entradas de la tabla featureconfiguration . Hay una entrada para cada caracter\u00edstica configurable en esta tabla, y puede especificar el valor de la columna enabled como true para habilitarla, y como false para deshabilitarla. Las columnas region , district , disease , y enddate actualmente solo se aplican a la caracter\u00edstica de listado de l\u00edneas y definen el \u00e1mbito en que se utiliza el listado de l\u00edneas. El listado de l\u00edneas se puede configurar desde la interfaz de usuario y no es necesario editarlo manualmente en la base de datos. MUY IMPORTANTE: Siempre que edite una entrada en esta tabla, tambi\u00e9n debe configurar manualmente changedate como la fecha y hora actuales. Esto es necesario para que la aplicaci\u00f3n de m\u00f3viles sincronice los cambios y utilice la configuraci\u00f3n de enfermedades editada. Las siguientes caracter\u00edsticas se pueden configurar actualmente: Vigilancia de casos CASE_SURVEILANCE : El m\u00f3dulo central de SORMAS que permite la creaci\u00f3n y gesti\u00f3n de casos de enfermedad sospechada o confirmada. Rastreo de contactos CONTACT_TRACING : Gesti\u00f3n y seguimiento de contactos de casos de enfermedades. Gesti\u00f3n de muestras SAMPLES_LAB : Gesti\u00f3n de muestras de casos, contactos, o participantes de eventos, y la documentaci\u00f3n de las pruebas de pat\u00f3genos realizadas sobre estas muestras. Vigilancia de eventos EVENT_SURVEILLANCE : Creaci\u00f3n y gesti\u00f3n de eventos y participantes de eventos para identificar posibles brotes o focos de enfermedades. Informes agregados AGGREGATE_REPORTING : Permite recolectar n\u00fameros de casos de una serie de enfermedades adicionales para las que no se utiliza la vigilancia basada en casos. Com\u00fanmente conocido como mSers en pa\u00edses africanos. Informes semanales WEEKLY_REPORTING : Permite a los usuarios de dispositivos m\u00f3viles confirmar la cantidad de casos que han recolectado semanalmente, y a los usuarios web ver un resumen general de si los usuarios de dispositivos m\u00f3viles han enviado o no sus informes y cu\u00e1ntos casos han informado. Gesti\u00f3n cl\u00ednica CLINICAL_MANAGEMENT : Habilita el m\u00f3dulo de gesti\u00f3n cl\u00ednica de casos que permite recolectar prescripciones y tratamientos as\u00ed como visitas del m\u00e9dico en un contexto cl\u00ednico. Compartici\u00f3n nacional de casos NATIONAL_CASE_SHARING : Permite a los usuarios con los derechos correspondientes poner los casos a disposici\u00f3n de todo el pa\u00eds, es decir, otros usuarios ver\u00e1n estos casos incluso si no pertenecen a sus jurisdicciones. Generaci\u00f3n de tareas (Vigilancia de casos) TASK_GENERATION_CASE_SURVEILLANCE : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con la vigilancia de casos, especialmente las tareas de Investigaci\u00f3n de caso que normalmente se generan al crear un nuevo caso. Generaci\u00f3n de tareas (Rastreo de contactos) TASK_GENERATION_CONTACT_TRACING : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con el rastreo de contactos, especialmente las tareas de Investigaci\u00f3n de contacto que normalmente se generan al crear un nuevo contacto y las tareas de Seguimiento de contacto que se crean una vez al d\u00eda para cada contacto que est\u00e1 en seguimiento. Generaci\u00f3n de tareas (Vigilancia de eventos) TASK_GENERATION_EVENT_SURVEILLANCE : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con la vigilancia de eventos. Generaci\u00f3n de tareas (General) TASK_GENERATION_GENERAL : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas que no est\u00e1n asociadas directamente con uno de los otros tres tipos de tareas descritos anteriormente, por ejemplo, la tarea Generaci\u00f3n de informe semanal que solicita a los usuarios de dispositivos m\u00f3viles que env\u00eden sus informes semanales. Campa\u00f1as CAMPAIGNS : El m\u00f3dulo de campa\u00f1as permite recolectar datos flexibles que se pueden personalizar utilizando el formato JSON. Actualmente, esto est\u00e1 muy orientado a las campa\u00f1as de vacunaci\u00f3n en Afganist\u00e1n, pero en el futuro tambi\u00e9n se podr\u00e1 utilizar de una manera m\u00e1s gen\u00e9rica en otros pa\u00edses. Infraestructura de zona INFRASTRUCTURE_TYPE_AREA : Habilita un nivel de infraestructura adicional por encima de la provincia que se llama zona por defecto. Actualmente solo se usa en el m\u00f3dulo de campa\u00f1as. Seguimiento de casos CASE_FOLLOWUP : Habilita el m\u00f3dulo de seguimiento de contactos para los casos tambi\u00e9n a fin de permitir una documentaci\u00f3n diaria m\u00e1s detallada de los s\u00edntomas. Listado de l\u00edneas LINE_LISTING : Si el uso del listado de l\u00edneas para la entrada de casos est\u00e1 habilitado o no en la jurisdicci\u00f3n especificada para la enfermedad especificada. Configurable desde la interfaz de usuario, no se necesita interacci\u00f3n con la base de datos. Documentos DOCUMENTS : Habilita el almacenamiento de documentos. Configuraci\u00f3n de proxy Algunas integraciones de SORMAS admiten la configuraci\u00f3n de proxy: * Interfaz de diario de paciente * Geocodificaci\u00f3n * SORMAS 2 SORMAS El proxy se puede configurar a trav\u00e9s de las siguientes propiedades del sistema que se pueden pasar como argumentos de JVM al servidor: * org.jboss.resteasy.jaxrs.client.proxy.host * org.jboss.resteasy.jaxrs.client.proxy.port * org.jboss.resteasy.jaxrs.client.proxy.scheme","title":"Personalizar un servidor de SORMAS"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#personalizar-un-servidor-de-sormas","text":"","title":"Personalizar un servidor de SORMAS"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#contenido","text":"Configuraci\u00f3n del servidor Importar datos de infraestructura Configuraci\u00f3n de enfermedades Configuraci\u00f3n de caracter\u00edsticas","title":"Contenido"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#configuracion-del-servidor","text":"Despu\u00e9s de instalar un servidor de SORMAS, puede personalizar varias configuraciones que definen c\u00f3mo funciona y se configura SORMAS. Esto se hace en el archivo sormas.properties que puede encontrar en su carpeta de dominio. Este archivo contiene explicaciones para cada propiedad y tambi\u00e9n un valor predeterminado en caso de que desee revertir cualquier cambio que haya realizado. La mayor\u00eda de estas propiedades est\u00e1n comentadas (indicado por un # delante de su nombre y valor) porque el valor predeterminado deber\u00eda funcionar para la mayor\u00eda de los servidores. Si desea cambiar estas propiedades, puede eliminar el # y especificar un valor v\u00e1lido. Recomendamos asignar valores a las propiedades que no est\u00e1n comentadas de forma predeterminada porque son espec\u00edficas de su servidor (por ejemplo, la configuraci\u00f3n regional/idioma predeterminado, el centro del pa\u00eds o provincia en que est\u00e1 utilizando SORMAS, y la URL que conduce al archivo .apk para m\u00f3viles). Tenga en cuenta que este archivo contiene todas las propiedades que exist\u00edan en la versi\u00f3n de SORMAS que instal\u00f3 inicialmente en su servidor. Recomendamos leer las notas de las nuevas versiones para mantenerse actualizado sobre las nuevas propiedades o si los valores esperados de las existentes han cambiado. En cualquiera de estos casos, debe actualizar manualmente el archivo de propiedades, e insertar la nueva propiedad o cambiar el valor existente por uno que sea compatible. Las notas de la versi\u00f3n le dar\u00e1n instrucciones sobre c\u00f3mo hacer esto. Actualmente se pueden configurar las siguientes propiedades: Configuraci\u00f3n regional predeterminada country.locale : Esta es la configuraci\u00f3n regional que usa su servidor siempre que el usuario no la haya sobrescrito en su configuraci\u00f3n. Afecta tanto el idioma en que se muestra SORMAS como, por ejemplo, los formatos de fecha. Prefijo EPID country.epidprefix : SORMAS genera autom\u00e1ticamente n\u00fameros EPID para los nuevos casos. Este es el prefijo que usa su pa\u00eds para todos estos n\u00fameros. La mayor\u00eda de las veces ser\u00e1 alg\u00fan tipo de c\u00f3digo de pa\u00eds, y debe tener tres caracteres. Centro/zoom de pa\u00eds country.center.latitude , country.center.longitude , y map.zoom : Estas son las coordenadas geogr\u00e1ficas del centro geogr\u00e1fico del pa\u00eds o la provincia en que est\u00e1 utilizando SORMAS. Se utilizan para establecer la ubicaci\u00f3n inicial de los mapas utilizados en los tableros de control y las estad\u00edsticas. URL de la aplicaci\u00f3n app.url : El directorio de su servidor donde se almacena el archivo .apk para m\u00f3viles que se utiliza para actualizar autom\u00e1ticamente la aplicaci\u00f3n de Android cuando se publica una nueva versi\u00f3n. Deber\u00eda poder copiar el ejemplo dado en el archivo de propiedades, y reemplazar solamente el marcador de posici\u00f3n SERVER-NAME. Rutas de archivo documents.path , temp.path , generated.path , y custom.path : Las carpetas en las que SORMAS almacena archivos, ya sea temporalmente durante la exportaci\u00f3n de casos, o permanentemente como plantillas de importaci\u00f3n o documentos. Los archivos en temp.path se eliminan autom\u00e1ticamente a la medianoche. Los archivos en custom.path se pueden utilizar para personalizar la p\u00e1gina de inicio de sesi\u00f3n, por ejemplo, para proporcionar inicios de sesi\u00f3n predeterminados para servidores demo, o agregar colaboradores adicionales a la barra lateral derecha. Clasificaci\u00f3n autom\u00e1tica de casos feature.automaticcaseclassification : Determina si SORMAS clasifica autom\u00e1ticamente los casos en funci\u00f3n de una serie de criterios definidos en el c\u00f3digo. Ajustes de correo electr\u00f3nico email.sender.address , y email.sender.name : La direcci\u00f3n de correo electr\u00f3nico y el nombre de remitente que se deben usar cuando SORMAS env\u00eda correos electr\u00f3nicos, por ejemplo, para notificar a los usuarios sobre eventos espec\u00edficos. Configuraci\u00f3n de SMS sms.sender.name , sms.auth.key , y sms.auth.secret : Adem\u00e1s de correos electr\u00f3nicos, SORMAS tambi\u00e9n admite el env\u00edo autom\u00e1tico de SMS a los usuarios simult\u00e1neamente (por ejemplo, cuando un caso se ha clasificado como confirmado). El proveedor de SMS que utiliza SORMAS es la API SMS de Vonage (https://www.vonage.com/communications-apis/sms/). Si tiene una cuenta all\u00ed, puede usar su clave y secreto aqu\u00ed para permitir el env\u00edo de SMS. Dejar estas propiedades sin especificar deshabilitar\u00e1 esta caracter\u00edstica. Separador CSV csv.separator : El separador que los archivos CSV deben usar para separar columnas. Esto depende de la configuraci\u00f3n regional de su servidor. La mayor\u00eda de los sistemas pueden usar el valor predeterminado ( , ), pero, por ejemplo, los sistemas alemanes deben configurarse para usar ; . Umbral de similitud de nombres namesimilaritythreshold : Esto se usa al comparar casos o contactos para encontrar duplicados en el sistema, ya sea en retrospecci\u00f3n, o durante la creaci\u00f3n o importaci\u00f3n. Cuanto mayor sea el valor, m\u00e1s restrictivo ser\u00e1 el algoritmo, es decir, se encontrar\u00e1n menos duplicados potenciales. Recomendamos experimentar con esta configuraci\u00f3n para ver qu\u00e9 valor funciona para su pa\u00eds e idioma. Modo de desarrollador devmode : Habilitar el modo de desarrollador le dar\u00e1 acceso a una pesta\u00f1a en el men\u00fa Configuraci\u00f3n que permite a los administradores crear casos y contactos ficticios para llenar r\u00e1pidamente la base de datos. Esto solo debe ser utilizado en sistemas de desarrollo o demostraci\u00f3n, y debe dejarse desactivado para servidores de producci\u00f3n. Umbral de sincronizaci\u00f3n de infraestructura infrastructuresyncthreshold : La sincronizaci\u00f3n de los datos de infraestructura con las aplicaciones m\u00f3viles (por ejemplo, provincias o centros de salud) se realiza por partes para evitar timeouts de conexi\u00f3n. Si espera que sus usuarios tengan una conexi\u00f3n a Internet muy mala, reducir este umbral podr\u00eda facilitarles la sincronizaci\u00f3n de estos datos. Umbrales para archivar daysAfterCaseGetsArchived , y daysAfterEventGetsArchived : El n\u00famero de d\u00edas sin ning\u00fan cambio despu\u00e9s de los cuales los casos/eventos se archivan autom\u00e1ticamente (es decir, ya no se mostrar\u00e1n en los directorios normales, pero seguir\u00e1n contando para estad\u00edsticas o recuentos en el tablero de control, y los usuarios con el derecho de usuario correspondiente a\u00fan podr\u00e1n verlos). Si se especifican como 0, el archivado autom\u00e1tico se deshabilita. Ejecutable Rscript rscript.executable : La ubicaci\u00f3n del ejecutable Rscript. Si ha instalado Rscript en su servidor y especifica la ruta aqu\u00ed (el valor predeterminado deber\u00eda funcionar para sistemas Linux siempre que haya utilizado la ruta de instalaci\u00f3n predeterminada), los diagramas de red para las cadenas de transmisi\u00f3n se mostrar\u00e1n en la aplicaci\u00f3n web. Interfaz de diario de s\u00edntomas : Propiedades utilizadas para conectarse a un servicio de diario de s\u00edntomas externo. interface.symptomjournal.url es la URL del sitio web al que debe conectarse SORMAS; interface.symptomjournal.authurl es la URL utilizada para autenticar SORMAS en el servicio externo; interface.symptomjournal.clientid y interface.symptomjournal.secret son las credenciales utilizadas para el proceso de autenticaci\u00f3n. Se puede crear autom\u00e1ticamente un usuario predeterminado al inicio utilizando interface.symptomjournal.defaultuser.username y interface.symptomjournal.defaultuser.password . Este usuario puede ser utilizado por el sistema de diario de s\u00edntomas para conectarse a SORMAS. Interfaz de diario de paciente Propiedades utilizadas para conectarse a un servicio de diario de paciente externo. interface.patientdiary.url es la URL del sitio web al que debe conectarse SORMAS; interface.patientdiary.probandsurl es la URL del sitio web al que SORMAS puede enviar notificaciones; interface.patientdiary.authurl es la URL a trav\u00e9s de la cual SORMAS puede obtener una autorizaci\u00f3n para el diario de paciente externo; interface.patientdiary.email y interface.patientdiary.password son las credenciales utilizadas por SORMAS para autenticarse en el diario de paciente externo; se puede crear autom\u00e1ticamente un usuario predeterminado al inicio utilizando interface.patientdiary.defaultuser.username y interface.patientdiary.defaultuser.password . Este usuario puede ser utilizado por el sistema de diario de paciente para conectarse a SORMAS. Marca personalizada : Propiedades utilizadas para aplicar una marca personalizada a SORMAS que anula su nombre y logotipo predeterminado. El uso de estas propiedades tambi\u00e9n modifica la barra lateral y le agrega otra \u00e1rea personalizable. Si desea utilizar esta funci\u00f3n, asigne true a custombranding . custombranding.name es el nombre que desea usar, custombranding.logo.path es la ruta al logo que debe usarse. Geocodificaci\u00f3n Propiedades utilizadas para integrar un servicio de geocodificaci\u00f3n externo para obtener las coordenadas geogr\u00e1ficas de las direcciones. geocodingServiceUrlTemplate es la URL para buscar detalles de las direcciones, los marcadores de posici\u00f3n ${street} , ${houseNumber} , ${postalCode} , y ${city} se reemplazar\u00e1n con los campos de direcci\u00f3n reales al buscar; geocodingLongitudeJsonPath and geocodingLatitudeJsonPath se utilizan para obtener la longitud y latitud de la direcci\u00f3n en el resultado de la solicitud al servicio de geocodificaci\u00f3n. Proveedor de autenticaci\u00f3n : Permite al usuario elegir la forma de autenticaci\u00f3n para SORMAS y todos sus clientes de terceros. Valores admitidos SORMAS (predeterminado) y KEYCLOAK Sincronizaci\u00f3n de usuarios del proveedor de autenticaci\u00f3n al inicio : Habilita la sincronizaci\u00f3n de usuarios as\u00edncronos cuando se inicia el sistema. Dado que la sincronizaci\u00f3n de usuarios es necesaria principalmente para una sincronizaci\u00f3n inicial, se recomienda deshabilitar/eliminar esta propiedad una vez se haya realizado una sincronizaci\u00f3n inicial. La sincronizaci\u00f3n de usuarios funcionar\u00e1 de manera similar a la sincronizaci\u00f3n manual de usuarios: crea todos los usuarios que faltan en el proveedor de autenticaci\u00f3n externo actualiza todos los usuarios existentes en el proveedor de autenticaci\u00f3n externo conserva la contrase\u00f1a del usuario si el usuario no existe en el proveedor de autenticaci\u00f3n externo no sobrescribir\u00e1 la contrase\u00f1a del usuario si el usuario ya est\u00e1 en el proveedor de autenticaci\u00f3n externo (la b\u00fasqueda de coincidencias se realiza mediante el nombre de usuario sin distinci\u00f3n entre may\u00fasculas y min\u00fasculas) solo sincronizar\u00e1 usuarios activos (los usuarios inactivos se sincronizan autom\u00e1ticamente cuando se activan manualmente) se habilita a trav\u00e9s de una propiedad en sormas.properties authentication.provider.userSyncAtStartup (por defecto est\u00e1 deshabilitada)","title":"Configuraci\u00f3n del servidor"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#pagina-de-inicio-de-sesion-personalizada","text":"Al configurar el servidor se crea un directorio de archivos personalizado (muy probablemente /opt/sormas/custom ). Puede ajustar los archivos login*.html en ese directorio para personalizar la p\u00e1gina de inicio de sesi\u00f3n.","title":"P\u00e1gina de inicio de sesi\u00f3n personalizada"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#archivos-de-descarga-personalizados-en-la-seccion-acerca-de","text":"Puede crear una subcarpeta aboutfiles en el directorio personalizado mencionado anteriormente (por ejemplo, /opt/sormas/custom/aboutfiles ). Cualquier archivo en ese directorio estar\u00e1 disponible en la secci\u00f3n Acerca de de la interfaz.","title":"Archivos de descarga personalizados en la secci\u00f3n Acerca de"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#importar-datos-de-infraestructura","text":"Cuando inicia un servidor de SORMAS por primera vez, se generan algunos datos de infraestructura predeterminados para garantizar que el servidor sea utilizable y se puedan crear los usuarios predeterminados. Se recomienda (y, a menos que est\u00e9 trabajando en un servidor demo, es necesario) archivar estos datos predeterminados, e importar los datos de infraestructura oficiales del pa\u00eds o parte del pa\u00eds en que desea utilizar SORMAS.","title":"Importar datos de infraestructura"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#importar","text":"SORMAS divide por defecto los datos de infraestructura en cuatro categor\u00edas. Partiendo de la divisi\u00f3n administrativa m\u00e1s alta, estos son: Provincias , Municipios , \u00c1reas de salud , y Centros de salud . Adicionalmente, Puntos de entrada representa lugares, como puertos y aeropuertos, donde hay una entrada frecuente de personas al pa\u00eds, y Laboratorios son t\u00e9cnicamente centros de salud que se utilizan espec\u00edficamente para realizar pruebas de muestras. Para importar sus datos para una de estas divisiones administrativas, inicie sesi\u00f3n como usuario administrador predeterminado y abra el men\u00fa Configuraci\u00f3n . Abra cualquiera de las pesta\u00f1as para los datos de infraestructura que desea importar, y haga clic en el bot\u00f3n Importar en la parte superior derecha. Puede descargar una gu\u00eda de importaci\u00f3n desde la ventana emergente que se abrir\u00e1, que contiene instrucciones detalladas sobre el proceso de importaci\u00f3n y los pasos que debe seguir para importar sus datos correctamente. Aseg\u00farese de comenzar siempre con la divisi\u00f3n administrativa m\u00e1s alta al importar, es decir, las provincias, y contin\u00fae hasta la m\u00e1s baja, ya que las divisiones inferiores suelen contener referencias a divisiones superiores.","title":"Importar"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#archivar","text":"Despu\u00e9s de importar sus datos de infraestructura, debe archivar los datos predeterminados, a menos que desee que aparezcan en su aplicaci\u00f3n. Para hacerlo, vuelva a abrir el men\u00fa Configuraci\u00f3n y la pesta\u00f1a de los datos de infraestructura que desea archivar. Puede usar el filtro de texto en la parte superior de la pantalla para escribir el nombre de los datos predeterminados, luego haga clic en el \u00edcono de edici\u00f3n a la derecha, y en la ventana emergente que se abre, haga clic en Archivar y confirme su elecci\u00f3n. Despu\u00e9s de archivar los datos de infraestructura predeterminados, es posible que desee editar los usuarios predeterminados y asignarlos a las divisiones administrativas que haya importado. Para hacerlo, vaya al men\u00fa Usuario y haga clic en el \u00edcono de edici\u00f3n debajo del usuario que desea reasignar.","title":"Archivar"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#configuracion-de-enfermedades","text":"SORMAS admite una amplia gama de enfermedades, y no todas ellas pueden ser relevantes para cualquier instancia de SORMAS o pueden usarse en un contexto diferente. Es posible ajustar las siguientes variables que definen c\u00f3mo se manejan las diferentes enfermedades: Si la enfermedad es activa , es decir, se usa en esta instancia de SORMAS Si la enfermedad es una enfermedad primaria , es decir, est\u00e1 habilitada para la vigilancia de casos; las enfermedades no primarias a\u00fan se pueden utilizar para pruebas de pat\u00f3genos. Si la enfermedad es basada en casos ; si no, solo est\u00e1 habilitada para informes de casos agregados Si el seguimiento de contactos est\u00e1 habilitado La duraci\u00f3n del seguimiento de contactos En este momento, desafortunadamente, no es posible cambiar estas variables desde la interfaz de usuario; se requiere acceso directo a la base de datos . Si tiene este acceso, puede editar las entradas de la tabla diseaseconfiguration de acuerdo a sus necesidades. MUY IMPORTANTE: Siempre que edite una entrada en esta tabla, tambi\u00e9n debe configurar manualmente changedate como la fecha y hora actuales. Esto es necesario para que la aplicaci\u00f3n de m\u00f3viles sincronice los cambios y utilice la configuraci\u00f3n de enfermedades editada.","title":"Configuraci\u00f3n de enfermedades"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#configuracion-de-caracteristicas","text":"Algunas de las caracter\u00edsticas de SORMAS se pueden habilitar o deshabilitar para personalizar a\u00fan m\u00e1s el sistema. En este momento, desafortunadamente, no es posible cambiar estas variables desde la interfaz de usuario; se requiere acceso directo a la base de datos . Si tiene este acceso, puede editar las entradas de la tabla featureconfiguration . Hay una entrada para cada caracter\u00edstica configurable en esta tabla, y puede especificar el valor de la columna enabled como true para habilitarla, y como false para deshabilitarla. Las columnas region , district , disease , y enddate actualmente solo se aplican a la caracter\u00edstica de listado de l\u00edneas y definen el \u00e1mbito en que se utiliza el listado de l\u00edneas. El listado de l\u00edneas se puede configurar desde la interfaz de usuario y no es necesario editarlo manualmente en la base de datos. MUY IMPORTANTE: Siempre que edite una entrada en esta tabla, tambi\u00e9n debe configurar manualmente changedate como la fecha y hora actuales. Esto es necesario para que la aplicaci\u00f3n de m\u00f3viles sincronice los cambios y utilice la configuraci\u00f3n de enfermedades editada. Las siguientes caracter\u00edsticas se pueden configurar actualmente: Vigilancia de casos CASE_SURVEILANCE : El m\u00f3dulo central de SORMAS que permite la creaci\u00f3n y gesti\u00f3n de casos de enfermedad sospechada o confirmada. Rastreo de contactos CONTACT_TRACING : Gesti\u00f3n y seguimiento de contactos de casos de enfermedades. Gesti\u00f3n de muestras SAMPLES_LAB : Gesti\u00f3n de muestras de casos, contactos, o participantes de eventos, y la documentaci\u00f3n de las pruebas de pat\u00f3genos realizadas sobre estas muestras. Vigilancia de eventos EVENT_SURVEILLANCE : Creaci\u00f3n y gesti\u00f3n de eventos y participantes de eventos para identificar posibles brotes o focos de enfermedades. Informes agregados AGGREGATE_REPORTING : Permite recolectar n\u00fameros de casos de una serie de enfermedades adicionales para las que no se utiliza la vigilancia basada en casos. Com\u00fanmente conocido como mSers en pa\u00edses africanos. Informes semanales WEEKLY_REPORTING : Permite a los usuarios de dispositivos m\u00f3viles confirmar la cantidad de casos que han recolectado semanalmente, y a los usuarios web ver un resumen general de si los usuarios de dispositivos m\u00f3viles han enviado o no sus informes y cu\u00e1ntos casos han informado. Gesti\u00f3n cl\u00ednica CLINICAL_MANAGEMENT : Habilita el m\u00f3dulo de gesti\u00f3n cl\u00ednica de casos que permite recolectar prescripciones y tratamientos as\u00ed como visitas del m\u00e9dico en un contexto cl\u00ednico. Compartici\u00f3n nacional de casos NATIONAL_CASE_SHARING : Permite a los usuarios con los derechos correspondientes poner los casos a disposici\u00f3n de todo el pa\u00eds, es decir, otros usuarios ver\u00e1n estos casos incluso si no pertenecen a sus jurisdicciones. Generaci\u00f3n de tareas (Vigilancia de casos) TASK_GENERATION_CASE_SURVEILLANCE : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con la vigilancia de casos, especialmente las tareas de Investigaci\u00f3n de caso que normalmente se generan al crear un nuevo caso. Generaci\u00f3n de tareas (Rastreo de contactos) TASK_GENERATION_CONTACT_TRACING : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con el rastreo de contactos, especialmente las tareas de Investigaci\u00f3n de contacto que normalmente se generan al crear un nuevo contacto y las tareas de Seguimiento de contacto que se crean una vez al d\u00eda para cada contacto que est\u00e1 en seguimiento. Generaci\u00f3n de tareas (Vigilancia de eventos) TASK_GENERATION_EVENT_SURVEILLANCE : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas asociadas con la vigilancia de eventos. Generaci\u00f3n de tareas (General) TASK_GENERATION_GENERAL : Habilita o deshabilita la generaci\u00f3n autom\u00e1tica de tareas que no est\u00e1n asociadas directamente con uno de los otros tres tipos de tareas descritos anteriormente, por ejemplo, la tarea Generaci\u00f3n de informe semanal que solicita a los usuarios de dispositivos m\u00f3viles que env\u00eden sus informes semanales. Campa\u00f1as CAMPAIGNS : El m\u00f3dulo de campa\u00f1as permite recolectar datos flexibles que se pueden personalizar utilizando el formato JSON. Actualmente, esto est\u00e1 muy orientado a las campa\u00f1as de vacunaci\u00f3n en Afganist\u00e1n, pero en el futuro tambi\u00e9n se podr\u00e1 utilizar de una manera m\u00e1s gen\u00e9rica en otros pa\u00edses. Infraestructura de zona INFRASTRUCTURE_TYPE_AREA : Habilita un nivel de infraestructura adicional por encima de la provincia que se llama zona por defecto. Actualmente solo se usa en el m\u00f3dulo de campa\u00f1as. Seguimiento de casos CASE_FOLLOWUP : Habilita el m\u00f3dulo de seguimiento de contactos para los casos tambi\u00e9n a fin de permitir una documentaci\u00f3n diaria m\u00e1s detallada de los s\u00edntomas. Listado de l\u00edneas LINE_LISTING : Si el uso del listado de l\u00edneas para la entrada de casos est\u00e1 habilitado o no en la jurisdicci\u00f3n especificada para la enfermedad especificada. Configurable desde la interfaz de usuario, no se necesita interacci\u00f3n con la base de datos. Documentos DOCUMENTS : Habilita el almacenamiento de documentos.","title":"Configuraci\u00f3n de caracter\u00edsticas"},{"location":"SERVER_CUSTOMIZATION_es-CU.html#configuracion-de-proxy","text":"Algunas integraciones de SORMAS admiten la configuraci\u00f3n de proxy: * Interfaz de diario de paciente * Geocodificaci\u00f3n * SORMAS 2 SORMAS El proxy se puede configurar a trav\u00e9s de las siguientes propiedades del sistema que se pueden pasar como argumentos de JVM al servidor: * org.jboss.resteasy.jaxrs.client.proxy.host * org.jboss.resteasy.jaxrs.client.proxy.port * org.jboss.resteasy.jaxrs.client.proxy.scheme","title":"Configuraci\u00f3n de proxy"},{"location":"SERVER_DEV_SETUP.html","text":"Installing a SORMAS Server for development Note: This guide explains how to configure a SORMAS server on Linux and Windows systems for development. Please note that there is no database setup because the script supposes the use of the Docker Postgresql image (see SORMAS-Docker ). Content Prerequisites Java 11 ant Postgres Database SORMAS Server Related Installing a SORMAS Server Prerequisites Java 11 See Installing Java SORMAS just recently moved to Java 11. We still need to support Java 8 for a transition period. Therefore, please just use Java 8 language features for now. Ant Download and install Ant, it can be done from Ant site or with packages from your Linux distribution. Postgres Database See Installing Postgresql Alternatively you can use the Docker image available in SORMAS-Docker repository. SORMAS Server Install you own Payara server (see installing SORMAS Server ) or run bash ./server-setup-dev-docker.sh This script will download Payara (if needed) and install SORMAS in the Payara server. You can edit this script to change paths and ports. Other steps : * IMPORTANT : Adjust the SORMAS configuration for your country in /opt/domains/sormas/sormas.properties * Adjust the logging configuration in ${HOME}/opt/domains/sormas/config/logback.xml based on your needs (e.g. configure and activate email appender) * Build and deploy applications (ear and war) with you IDE. Keycloak See Keycloak for how to install Docker locally. If you are doing active development on Keycloak (themes, authentication mechanisms, translations, etc.) it's recommended to install the standalone variant. VAADIN Debug Mode To enable VAADIN Debug Mode , go to sormas-ui/src/main/webapp/WEB-INF/web.xml and set productionMode to false . Make sure not to commit your changes to these files, for example by using .gitignore. To access the debug Window, got to /sormas-ui/?debug. You may need to log in as admin once first. Other components See Installing a SORMAS Server","title":"Development Setup"},{"location":"SERVER_DEV_SETUP.html#installing-a-sormas-server-for-development","text":"Note: This guide explains how to configure a SORMAS server on Linux and Windows systems for development. Please note that there is no database setup because the script supposes the use of the Docker Postgresql image (see SORMAS-Docker ).","title":"Installing a SORMAS Server for development"},{"location":"SERVER_DEV_SETUP.html#content","text":"Prerequisites Java 11 ant Postgres Database SORMAS Server","title":"Content"},{"location":"SERVER_DEV_SETUP.html#related","text":"Installing a SORMAS Server","title":"Related"},{"location":"SERVER_DEV_SETUP.html#prerequisites","text":"","title":"Prerequisites"},{"location":"SERVER_DEV_SETUP.html#java-11","text":"See Installing Java SORMAS just recently moved to Java 11. We still need to support Java 8 for a transition period. Therefore, please just use Java 8 language features for now.","title":"Java 11"},{"location":"SERVER_DEV_SETUP.html#ant","text":"Download and install Ant, it can be done from Ant site or with packages from your Linux distribution.","title":"Ant"},{"location":"SERVER_DEV_SETUP.html#postgres-database","text":"See Installing Postgresql Alternatively you can use the Docker image available in SORMAS-Docker repository.","title":"Postgres Database"},{"location":"SERVER_DEV_SETUP.html#sormas-server","text":"Install you own Payara server (see installing SORMAS Server ) or run bash ./server-setup-dev-docker.sh This script will download Payara (if needed) and install SORMAS in the Payara server. You can edit this script to change paths and ports. Other steps : * IMPORTANT : Adjust the SORMAS configuration for your country in /opt/domains/sormas/sormas.properties * Adjust the logging configuration in ${HOME}/opt/domains/sormas/config/logback.xml based on your needs (e.g. configure and activate email appender) * Build and deploy applications (ear and war) with you IDE.","title":"SORMAS Server"},{"location":"SERVER_DEV_SETUP.html#keycloak","text":"See Keycloak for how to install Docker locally. If you are doing active development on Keycloak (themes, authentication mechanisms, translations, etc.) it's recommended to install the standalone variant.","title":"Keycloak"},{"location":"SERVER_DEV_SETUP.html#vaadin-debug-mode","text":"To enable VAADIN Debug Mode , go to sormas-ui/src/main/webapp/WEB-INF/web.xml and set productionMode to false . Make sure not to commit your changes to these files, for example by using .gitignore. To access the debug Window, got to /sormas-ui/?debug. You may need to log in as admin once first.","title":"VAADIN Debug Mode"},{"location":"SERVER_DEV_SETUP.html#other-components","text":"See Installing a SORMAS Server","title":"Other components"},{"location":"SERVER_DEV_SETUP_es-CU.html","text":"Instalar un servidor de SORMAS para desarrollo Nota: Esta gu\u00eda explica c\u00f3mo configurar un servidor de SORMAS en sistemas Linux y Windows para desarrollo. Tenga en cuenta que no hay una configuraci\u00f3n de base de datos porque el script asume el uso de la imagen Postgresql de Docker (vea SORMAS-Docker ). Contenido Prerrequisitos Java 11 ant Base de datos Postgres Servidor de SORMAS Tema Relacionado Instalar un servidor de SORMAS Prerrequisitos Java 11 Vea Instalar Java SORMAS migr\u00f3 recientemente a Java 11. Necesitamos mantener la compatibilidad con Java 8 durante un per\u00edodo de transici\u00f3n. Por lo tanto, utilice las caracter\u00edsticas del lenguaje Java 8 por ahora. Ant Descargue e instale Ant; se puede hacer desde el sitio de Ant o con paquetes de su distribuci\u00f3n de Linux. Base de datos Postgres Vea Instalar Postgresql Alternativamente, puede usar la imagen de Docker disponible en el repositorio SORMAS-Docker . Servidor de SORMAS Instale su propio servidor Payara (vea instalar el servidor de SORMAS ) o ejecute bash ./server-setup-dev-docker.sh Este script descargar\u00e1 Payara (si es necesario) e instalar\u00e1 SORMAS en el servidor de Payara. Puede editar este script para cambiar rutas y puertos. Otros pasos: * IMPORTANTE : Ajuste la configuraci\u00f3n de SORMAS para su pa\u00eds en /opt/domains/sormas/sormas.properties * Ajuste la configuraci\u00f3n de registro en ${HOME}/opt/domains/sormas/config/logback.xml de acuerdo a sus necesidades (por ejemplo, configure y active el anexador de correo electr\u00f3nico) * Construya y despliegue aplicaciones (ear y war) con su IDE. Keycloak Vea Keycloak para saber c\u00f3mo instalar Docker localmente. Si est\u00e1 desarrollando activamente en Keycloak (temas, mecanismos de autenticaci\u00f3n, traducciones, etc.), se recomienda instalar la variante independiente. Modo de depuraci\u00f3n VAADIN Para habilitar el modo de depuraci\u00f3n VAADIN , vaya a sormas-ui/src/main/webapp/WEB-INF/web.xml y especifique productionMode como false . Aseg\u00farese de no hacer commit a sus cambios en estos archivos, por ejemplo, usando .gitignore. Para acceder a la ventana de depuraci\u00f3n, vaya a /sormas-ui/?debug. Es posible que primero deba iniciar sesi\u00f3n una vez como administrador. Otros componentes Vea Instalar un servidor de SORMAS","title":"Instalar un servidor de SORMAS para desarrollo"},{"location":"SERVER_DEV_SETUP_es-CU.html#instalar-un-servidor-de-sormas-para-desarrollo","text":"Nota: Esta gu\u00eda explica c\u00f3mo configurar un servidor de SORMAS en sistemas Linux y Windows para desarrollo. Tenga en cuenta que no hay una configuraci\u00f3n de base de datos porque el script asume el uso de la imagen Postgresql de Docker (vea SORMAS-Docker ).","title":"Instalar un servidor de SORMAS para desarrollo"},{"location":"SERVER_DEV_SETUP_es-CU.html#contenido","text":"Prerrequisitos Java 11 ant Base de datos Postgres Servidor de SORMAS","title":"Contenido"},{"location":"SERVER_DEV_SETUP_es-CU.html#tema-relacionado","text":"Instalar un servidor de SORMAS","title":"Tema Relacionado"},{"location":"SERVER_DEV_SETUP_es-CU.html#prerrequisitos","text":"","title":"Prerrequisitos"},{"location":"SERVER_DEV_SETUP_es-CU.html#java-11","text":"Vea Instalar Java SORMAS migr\u00f3 recientemente a Java 11. Necesitamos mantener la compatibilidad con Java 8 durante un per\u00edodo de transici\u00f3n. Por lo tanto, utilice las caracter\u00edsticas del lenguaje Java 8 por ahora.","title":"Java 11"},{"location":"SERVER_DEV_SETUP_es-CU.html#ant","text":"Descargue e instale Ant; se puede hacer desde el sitio de Ant o con paquetes de su distribuci\u00f3n de Linux.","title":"Ant"},{"location":"SERVER_DEV_SETUP_es-CU.html#base-de-datos-postgres","text":"Vea Instalar Postgresql Alternativamente, puede usar la imagen de Docker disponible en el repositorio SORMAS-Docker .","title":"Base de datos Postgres"},{"location":"SERVER_DEV_SETUP_es-CU.html#servidor-de-sormas","text":"Instale su propio servidor Payara (vea instalar el servidor de SORMAS ) o ejecute bash ./server-setup-dev-docker.sh Este script descargar\u00e1 Payara (si es necesario) e instalar\u00e1 SORMAS en el servidor de Payara. Puede editar este script para cambiar rutas y puertos. Otros pasos: * IMPORTANTE : Ajuste la configuraci\u00f3n de SORMAS para su pa\u00eds en /opt/domains/sormas/sormas.properties * Ajuste la configuraci\u00f3n de registro en ${HOME}/opt/domains/sormas/config/logback.xml de acuerdo a sus necesidades (por ejemplo, configure y active el anexador de correo electr\u00f3nico) * Construya y despliegue aplicaciones (ear y war) con su IDE.","title":"Servidor de SORMAS"},{"location":"SERVER_DEV_SETUP_es-CU.html#keycloak","text":"Vea Keycloak para saber c\u00f3mo instalar Docker localmente. Si est\u00e1 desarrollando activamente en Keycloak (temas, mecanismos de autenticaci\u00f3n, traducciones, etc.), se recomienda instalar la variante independiente.","title":"Keycloak"},{"location":"SERVER_DEV_SETUP_es-CU.html#modo-de-depuracion-vaadin","text":"Para habilitar el modo de depuraci\u00f3n VAADIN , vaya a sormas-ui/src/main/webapp/WEB-INF/web.xml y especifique productionMode como false . Aseg\u00farese de no hacer commit a sus cambios en estos archivos, por ejemplo, usando .gitignore. Para acceder a la ventana de depuraci\u00f3n, vaya a /sormas-ui/?debug. Es posible que primero deba iniciar sesi\u00f3n una vez como administrador.","title":"Modo de depuraci\u00f3n VAADIN"},{"location":"SERVER_DEV_SETUP_es-CU.html#otros-componentes","text":"Vea Instalar un servidor de SORMAS","title":"Otros componentes"},{"location":"SERVER_SETUP.html","text":"Installing a SORMAS Server Note: This guide explains how to set up a SORMAS server on Linux and Windows systems, the latter only being intended for usage on development systems. Please also note that certain parts of the setup script will not be executed on Windows. Content Installing a SORMAS Server Content Related Prerequisites Java 11 Linux Windows Postgres Database SORMAS Server Install on Linux Install on Windows Post-Installation Configuration Keycloak Server Keycloak as a Docker container Keycloak as a standalone installation Connect Keycloak to an already running instance of SORMAS Keycloak configuration Web Server Setup Apache Web Server Firewall Postfix Mail Server Install postfix and mailutils Configure your system Testing the Server Setup R Software Environment SORMAS to SORMAS Certificate Setup Troubleshooting Problem: Login fails Problem: Server is out of memory Related Creating an App for a Demo Server SORMAS Docker Repository Prerequisites Java 11 Download and install the Java 11 JDK (not JRE) for your operating system. We suggest using the Zulu OpenJDK . Linux sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11 Windows For testing and development environments we suggest to download and run the installer of the Java 11 JDK for 32 or 64 bit client systems (depending on your system). You can check your Java version from the shell/command line using: java -version . Postgres Database Install PostgreSQL (currently 9.5, 9.6 or 10) on your system (manuals for all OS can be found here: https://www.postgresql.org/download ) Set max_connections = 288 and max_prepared_transactions = 256 (at least, sum of all connection pools) in postgresql.conf (e.g. /etc/postgresql/10.0/main/postgresql.conf ; C:/Program Files/PostgreSQL/10.0/data ) - make sure the property is uncommented and restart the service to apply the changes. Install the \"temporal tables\" extension for Postgres ( https://github.com/arkhipov/temporal_tables ) Windows : Download the latest version for your Postgres version: https://github.com/arkhipov/temporal_tables/releases/latest , then copy the DLL from the project into the PostgreSQL's lib directory and the .sql and .control files into the directory share\\extension. Linux (see https://github.com/arkhipov/temporal_tables#installation) sudo apt-get install libpq-dev sudo apt-get install postgresql-server-dev-all sudo apt install pgxnclient #Check for GCC: gcc --version # and install if missing sudo pgxn install temporal_tables # The packages can be removed afterward SORMAS Server Get the latest SORMAS build by downloading the ZIP archive from the latest release on GitHub: https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Install on Linux Unzip the archive, copy/upload its contents to /root/deploy/sormas/$(date +%F) and make the setup script executable (as root user). sudo su mkdir /root/deploy/sormas cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip chmod +x $(date +%F)/server-setup.sh Install on Windows Download & install Git for Windows. This will provide a bash emulation that you can use to run the setup script: https://gitforwindows.org/ Unzip the ZIP archive (e.g. into you download directory) Open Git Bash and navigate to the setup sub-directory Post-Installation Configuration Optional: Open server-setup.sh in a text editor to customize the install paths, database access and ports for the server. The default ports are 6080 (HTTP), 6081 (HTTPS) and 6048 (admin). Important: Do not change the name of the database user. The pre-defined name is used in the statements executed in the database. Set up the database and a Payara domain for SORMAS by executing the setup script: sudo -s ./server-setup.sh Press enter whenever asked for it IMPORTANT : Make sure the script executed successfully. If anything goes wrong you need to fix the problem (or ask for help), then delete the created domain directory and re-execute the script. IMPORTANT : Adjust the SORMAS configuration for your country in /opt/domains/sormas/sormas.properties Adjust the logging configuration in /opt/domains/sormas/config/logback.xml based on your needs (e.g. configure and activate email appender) Linux: Update the SORMAS domain Keycloak Server Keycloak can be set up in two ways: * as a Docker container (for just using Keycloak approach) * as a Standalone installation (for doing development in Keycloak like themes, SPIs) Keycloak as a Docker container To be done only in the situation when SORMAS is already installed on the machine as a standalone installation. For complete Docker setup see the SORMAS-Docker repository. Prerequisites * SORMAS Server is installed * PostgreSQL is installed * Docker is installed * Open and edit sormas-base/setup/keycloak/keycloak-setup.sh with your system's actual values (on Windows use Git Bash) . Setup * Run sormas-base/setup/keycloak/keycloak-setup.sh * Update sormas.properties file in the SORMAS domain with the property authentication.provider=KEYCLOAK Keycloak as a standalone installation Prerequisites * SORMAS Server is installed * PostgreSQL is installed Setup Setting Keycloak up as a standalone installation Server Installation and Configuration Guide * Make sure to configure Keycloak with PostgreSQL Database Relational Database Setup * Set up an Admin User * Copy the themes folder content to ${KEYCLOAK_HOME}/themes Deploying Themes * Deploy the sormas-keycloak-service-provider Using Keycloak Deployer * Update the sormas-base/setup/keycloak/SORMAS.json file by replacing the following placeholders: ${SORMAS_SERVER_URL} , ${KEYCLOAK_SORMAS_UI_SECRET} , ${KEYCLOAK_SORMAS_BACKEND_SECRET} , ${KEYCLOAK_SORMAS_REST_SECRET} * Create the SORMAS Realm by importing sormas-base/setup/keycloak/SORMAS.json see Create a New Realm * Update the sormas-* clients by generating new secrets for them * Update the realm's email settings to allow sending emails to users To update the SORMAS Server run the following commands: ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientSecret --propertyValue=${KEYCLOAK_SORMAS_UI_SECRET} --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientId --propertyValue=sormas-ui --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.scope --propertyValue=openid --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.providerURI --propertyValue=http://localhost:${KEYCLOAK_PORT}/keycloak/auth/realms/SORMAS --source=domain ${ASADMIN} set-config-property --propertyName=sormas.rest.security.oidc.json \\ --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-rest\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_REST_SECRET}\\\"},\\\"confidential-port\\\":0,\\\"principal-attribute\\\":\\\"preferred_username\\\",\\\"enable-basic-auth\\\":true}\" \\ --source=domain ${ASADMIN} set-config-property --propertyName=sormas.backend.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth/\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-backend\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_BACKEND_SECRET}\\\"},\\\"confidential-port\\\":0}\" --source=domain where: * ${ASADMIN} - represents the location to ${PAYARA_HOME}\\bin\\asadmin * ${KEYCLOAK_PORT} - the port on which keycloak will run * ${KEYCLOAK_SORMAS_UI_SECRET} - is the secret generated in Keycloak for the sormas-ui client * ${KEYCLOAK_SORMAS_REST_SECRET} - is the secret generated in Keycloak for the sormas-rest client * ${KEYCLOAK_SORMAS_BACKEND_SECRET} - is the secret generated in Keycloak for the sormas-backend client Then update sormas.properties file in the SORMAS domain with the property authentication.provider=KEYCLOAK Connect Keycloak to an already running instance of SORMAS after setting up Keycloak as one of the described options above In case Keycloak is set up alongside an already running instance of SORMAS, these are the steps to follow to make sure already existing users can access the system: 1. Manually create an admin user in Keycloak for the SORMAS realm Creating a user (username has to be the same as admin's username in SORMAS) 2. Login to SORMAS and trigger the Sync Users button from the Users page 3. This will sync users to Keycloak keeping their original password - see SORMAS Keycloak Service Provider for more information about this Keycloak configuration More about the default configuration and how to customize can be found here Keycloak Web Server Setup Apache Web Server Note: This is not necessary for development systems. When you are using SORMAS in a production environment you should use a http server like Apache 2 instead of putting the Payara server in the first line. Here are some things that you should do to configure the Apache server as a proxy: Activate all needed modules: a2enmod ssl a2enmod rewrite a2enmod proxy a2enmod proxy_http a2enmod headers Create a new site /etc/apache2/sites-available/your.sormas.server.url.conf (e.g. sormas.org.conf). Force SSL secured connections: redirect from http to https: <VirtualHost *:80> ServerName your.sormas.server.url RewriteEngine On RewriteCond %{HTTPS} !=on RewriteRule ^/(.*) https://your.sormas.server.url/$1 [R,L] </VirtualHost> <IfModule mod_ssl.c> <VirtualHost *:443> ServerName your.sormas.server.url ... </VirtualHost> </IfModule> Configure logging: ErrorLog /var/log/apache2/error.log LogLevel warn LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b _%D_ \\\"%{User}i\\\" \\\"%{Connection}i\\\" \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined_ext CustomLog /var/log/apache2/access.log combined_ext SSL key config: SSLEngine on SSLCertificateFile /etc/ssl/certs/your.sormas.server.url.crt SSLCertificateKeyFile /etc/ssl/private/your.sormas.server.url.key SSLCertificateChainFile /etc/ssl/certs/your.sormas.server.url.ca-bundle # disable weak ciphers and old TLS/SSL SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1 SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE$ SSLHonorCipherOrder off Add a proxy pass to the local port: ProxyRequests Off ProxyPass /sormas-ui http://localhost:6080/sormas-ui ProxyPassReverse /sormas-ui http://localhost:6080/sormas-ui ProxyPass /sormas-rest http://localhost:6080/sormas-rest ProxyPassReverse /sormas-rest http://localhost:6080/sormas-rest Configure security settings: Header always set X-Content-Type-Options \"nosniff\" Header always set X-Xss-Protection \"1; mode=block\" # Disable Caching Header always set Cache-Control \"no-cache, no-store, must-revalidate, private\" Header always set Pragma \"no-cache\" Header always set Content-Security-Policy \\ \"default-src 'none'; \\ object-src 'self'; \\ script-src 'self' 'unsafe-inline' 'unsafe-eval'; \\ connect-src https://fonts.googleapis.com https://fonts.gstatic.com 'self'; \\ img-src *; \\ style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; \\ font-src https://fonts.gstatic.com 'self'; \\ frame-src 'self'; \\ worker-src 'self'; \\ manifest-src 'self'; \\ frame-ancestors 'self' # The Content-Type header was either missing or empty. # Ensure each page is setting the specific and appropriate content-type value for the content being delivered. AddType application/vnd.ms-fontobject .eot AddType application/x-font-opentype .otf AddType image/svg+xml .svg AddType application/x-font-ttf .ttf AddType application/font-woff .woff Activate output compression (very important!): <IfModule mod_deflate.c> AddOutputFilterByType DEFLATE text/plain text/html text/xml AddOutputFilterByType DEFLATE text/css text/javascript AddOutputFilterByType DEFLATE application/json AddOutputFilterByType DEFLATE application/xml application/xhtml+xml AddOutputFilterByType DEFLATE application/javascript application/x-javascript DeflateCompressionLevel 1 </IfModule> Provide the android apk: Options -Indexes AliasMatch \"/downloads/sormas-(.*)\" \"/var/www/sormas/downloads/sormas-$1\" For the Apache 2 security configuration we suggest the following settings ( /etc/apache2/conf-available/security.conf ): ServerTokens Prod ServerSignature Off TraceEnable Off Header always set Strict-Transport-Security \"max-age=15768000; includeSubDomains; preload\" Header unset X-Frame-Options Header always set X-Frame-Options SAMEORIGIN Header unset Referrer-Policy Header always set Referrer-Policy \"same-origin\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?HttpOnly).)+)$\" \"$1;HttpOnly\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?Secure).)+)$\" \"$1;Secure\" Header unset X-Powered-By Header unset Server In case you need to update the site config while the server is running, use the following command to publish the changes without the need for a reload: apache2ctl graceful Firewall The server should only publish the ports that are needed. For SORMAS this is port 80 (HTTP) and 443 (HTTPS). In addition you will need the SSH port to access the server for admin purposes. We suggest to use UFW (Uncomplicated Firewall) which provides a simple interface to iptables: sudo apt-get install ufw sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw allow http sudo ufw allow https sudo ufw enable Postfix Mail Server Install postfix and mailutils apt install aptitude aptitude install postfix -> choose \"satelite system\" apt install mailutils Configure your system nano /etc/aliases -> add \"root: enter-your@support-email-here.com\" nano /opt/domains/sormas/config/logback.xml -> make sure \"EMAIL_ERROR\" appender is active and sends out to your email address Testing the Server Setup Use SSL Labs to test your server security config: https://www.ssllabs.com/ssltest R Software Environment In order to enable disease network diagrams in the contact dashboard, R and several extension packages are required. Then the Rscript executable has to be configured in the sormas.properties file. This can be conveniently accomplished by executing the R setup script from the SORMAS ZIP archive (see SORMAS Server ): If the SORMAS installation has been customized, r-setup.sh the install paths may have to be adjusted accordingly with a text editor. Execute R setup script and follow its instructions. chmod +x r-setup.sh ./r-setup.sh SORMAS to SORMAS Certificate Setup To be able to communicate with other SORMAS instances, there are some additional steps which need to be taken, in order to set up the certificate and the truststore. Please see the related guide for detailed instructions regarding SORMAS to SORMAS setup. Troubleshooting Problem: Login fails Check that the users table does have a corresponding entry. If not, the database initialization that is done when deploying sormas-ear.ear probably had an error. Problem: Server is out of memory Old servers were set up with a memory size of less than 2048MB. You can change this using the following commands: /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx512m /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx1024m /opt/payara-172/glassfish/bin/asadmin --port 6048 create-jvm-options -Xmx2048m Alternative: You can edit the settings directly in the domain.xml in the config directory of the SORMAS domain. Just search for Xmx - there should be two entries that need to be changed.","title":"Setup"},{"location":"SERVER_SETUP.html#installing-a-sormas-server","text":"Note: This guide explains how to set up a SORMAS server on Linux and Windows systems, the latter only being intended for usage on development systems. Please also note that certain parts of the setup script will not be executed on Windows.","title":"Installing a SORMAS Server"},{"location":"SERVER_SETUP.html#content","text":"Installing a SORMAS Server Content Related Prerequisites Java 11 Linux Windows Postgres Database SORMAS Server Install on Linux Install on Windows Post-Installation Configuration Keycloak Server Keycloak as a Docker container Keycloak as a standalone installation Connect Keycloak to an already running instance of SORMAS Keycloak configuration Web Server Setup Apache Web Server Firewall Postfix Mail Server Install postfix and mailutils Configure your system Testing the Server Setup R Software Environment SORMAS to SORMAS Certificate Setup Troubleshooting Problem: Login fails Problem: Server is out of memory","title":"Content"},{"location":"SERVER_SETUP.html#related","text":"Creating an App for a Demo Server SORMAS Docker Repository","title":"Related"},{"location":"SERVER_SETUP.html#prerequisites","text":"","title":"Prerequisites"},{"location":"SERVER_SETUP.html#java-11","text":"Download and install the Java 11 JDK (not JRE) for your operating system. We suggest using the Zulu OpenJDK .","title":"Java 11"},{"location":"SERVER_SETUP.html#linux","text":"sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11","title":"Linux"},{"location":"SERVER_SETUP.html#windows","text":"For testing and development environments we suggest to download and run the installer of the Java 11 JDK for 32 or 64 bit client systems (depending on your system). You can check your Java version from the shell/command line using: java -version .","title":"Windows"},{"location":"SERVER_SETUP.html#postgres-database","text":"Install PostgreSQL (currently 9.5, 9.6 or 10) on your system (manuals for all OS can be found here: https://www.postgresql.org/download ) Set max_connections = 288 and max_prepared_transactions = 256 (at least, sum of all connection pools) in postgresql.conf (e.g. /etc/postgresql/10.0/main/postgresql.conf ; C:/Program Files/PostgreSQL/10.0/data ) - make sure the property is uncommented and restart the service to apply the changes. Install the \"temporal tables\" extension for Postgres ( https://github.com/arkhipov/temporal_tables ) Windows : Download the latest version for your Postgres version: https://github.com/arkhipov/temporal_tables/releases/latest , then copy the DLL from the project into the PostgreSQL's lib directory and the .sql and .control files into the directory share\\extension. Linux (see https://github.com/arkhipov/temporal_tables#installation) sudo apt-get install libpq-dev sudo apt-get install postgresql-server-dev-all sudo apt install pgxnclient #Check for GCC: gcc --version # and install if missing sudo pgxn install temporal_tables # The packages can be removed afterward","title":"Postgres Database"},{"location":"SERVER_SETUP.html#sormas-server","text":"Get the latest SORMAS build by downloading the ZIP archive from the latest release on GitHub: https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest","title":"SORMAS Server"},{"location":"SERVER_SETUP.html#install-on-linux","text":"Unzip the archive, copy/upload its contents to /root/deploy/sormas/$(date +%F) and make the setup script executable (as root user). sudo su mkdir /root/deploy/sormas cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip chmod +x $(date +%F)/server-setup.sh","title":"Install on Linux"},{"location":"SERVER_SETUP.html#install-on-windows","text":"Download & install Git for Windows. This will provide a bash emulation that you can use to run the setup script: https://gitforwindows.org/ Unzip the ZIP archive (e.g. into you download directory) Open Git Bash and navigate to the setup sub-directory","title":"Install on Windows"},{"location":"SERVER_SETUP.html#post-installation-configuration","text":"Optional: Open server-setup.sh in a text editor to customize the install paths, database access and ports for the server. The default ports are 6080 (HTTP), 6081 (HTTPS) and 6048 (admin). Important: Do not change the name of the database user. The pre-defined name is used in the statements executed in the database. Set up the database and a Payara domain for SORMAS by executing the setup script: sudo -s ./server-setup.sh Press enter whenever asked for it IMPORTANT : Make sure the script executed successfully. If anything goes wrong you need to fix the problem (or ask for help), then delete the created domain directory and re-execute the script. IMPORTANT : Adjust the SORMAS configuration for your country in /opt/domains/sormas/sormas.properties Adjust the logging configuration in /opt/domains/sormas/config/logback.xml based on your needs (e.g. configure and activate email appender) Linux: Update the SORMAS domain","title":"Post-Installation Configuration"},{"location":"SERVER_SETUP.html#keycloak-server","text":"Keycloak can be set up in two ways: * as a Docker container (for just using Keycloak approach) * as a Standalone installation (for doing development in Keycloak like themes, SPIs)","title":"Keycloak Server"},{"location":"SERVER_SETUP.html#keycloak-as-a-docker-container","text":"To be done only in the situation when SORMAS is already installed on the machine as a standalone installation. For complete Docker setup see the SORMAS-Docker repository. Prerequisites * SORMAS Server is installed * PostgreSQL is installed * Docker is installed * Open and edit sormas-base/setup/keycloak/keycloak-setup.sh with your system's actual values (on Windows use Git Bash) . Setup * Run sormas-base/setup/keycloak/keycloak-setup.sh * Update sormas.properties file in the SORMAS domain with the property authentication.provider=KEYCLOAK","title":"Keycloak as a Docker container"},{"location":"SERVER_SETUP.html#keycloak-as-a-standalone-installation","text":"Prerequisites * SORMAS Server is installed * PostgreSQL is installed Setup Setting Keycloak up as a standalone installation Server Installation and Configuration Guide * Make sure to configure Keycloak with PostgreSQL Database Relational Database Setup * Set up an Admin User * Copy the themes folder content to ${KEYCLOAK_HOME}/themes Deploying Themes * Deploy the sormas-keycloak-service-provider Using Keycloak Deployer * Update the sormas-base/setup/keycloak/SORMAS.json file by replacing the following placeholders: ${SORMAS_SERVER_URL} , ${KEYCLOAK_SORMAS_UI_SECRET} , ${KEYCLOAK_SORMAS_BACKEND_SECRET} , ${KEYCLOAK_SORMAS_REST_SECRET} * Create the SORMAS Realm by importing sormas-base/setup/keycloak/SORMAS.json see Create a New Realm * Update the sormas-* clients by generating new secrets for them * Update the realm's email settings to allow sending emails to users To update the SORMAS Server run the following commands: ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientSecret --propertyValue=${KEYCLOAK_SORMAS_UI_SECRET} --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientId --propertyValue=sormas-ui --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.scope --propertyValue=openid --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.providerURI --propertyValue=http://localhost:${KEYCLOAK_PORT}/keycloak/auth/realms/SORMAS --source=domain ${ASADMIN} set-config-property --propertyName=sormas.rest.security.oidc.json \\ --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-rest\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_REST_SECRET}\\\"},\\\"confidential-port\\\":0,\\\"principal-attribute\\\":\\\"preferred_username\\\",\\\"enable-basic-auth\\\":true}\" \\ --source=domain ${ASADMIN} set-config-property --propertyName=sormas.backend.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth/\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-backend\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_BACKEND_SECRET}\\\"},\\\"confidential-port\\\":0}\" --source=domain where: * ${ASADMIN} - represents the location to ${PAYARA_HOME}\\bin\\asadmin * ${KEYCLOAK_PORT} - the port on which keycloak will run * ${KEYCLOAK_SORMAS_UI_SECRET} - is the secret generated in Keycloak for the sormas-ui client * ${KEYCLOAK_SORMAS_REST_SECRET} - is the secret generated in Keycloak for the sormas-rest client * ${KEYCLOAK_SORMAS_BACKEND_SECRET} - is the secret generated in Keycloak for the sormas-backend client Then update sormas.properties file in the SORMAS domain with the property authentication.provider=KEYCLOAK","title":"Keycloak as a standalone installation"},{"location":"SERVER_SETUP.html#connect-keycloak-to-an-already-running-instance-of-sormas","text":"after setting up Keycloak as one of the described options above In case Keycloak is set up alongside an already running instance of SORMAS, these are the steps to follow to make sure already existing users can access the system: 1. Manually create an admin user in Keycloak for the SORMAS realm Creating a user (username has to be the same as admin's username in SORMAS) 2. Login to SORMAS and trigger the Sync Users button from the Users page 3. This will sync users to Keycloak keeping their original password - see SORMAS Keycloak Service Provider for more information about this","title":"Connect Keycloak to an already running instance of SORMAS"},{"location":"SERVER_SETUP.html#keycloak-configuration","text":"More about the default configuration and how to customize can be found here Keycloak","title":"Keycloak configuration"},{"location":"SERVER_SETUP.html#web-server-setup","text":"","title":"Web Server Setup"},{"location":"SERVER_SETUP.html#apache-web-server","text":"Note: This is not necessary for development systems. When you are using SORMAS in a production environment you should use a http server like Apache 2 instead of putting the Payara server in the first line. Here are some things that you should do to configure the Apache server as a proxy: Activate all needed modules: a2enmod ssl a2enmod rewrite a2enmod proxy a2enmod proxy_http a2enmod headers Create a new site /etc/apache2/sites-available/your.sormas.server.url.conf (e.g. sormas.org.conf). Force SSL secured connections: redirect from http to https: <VirtualHost *:80> ServerName your.sormas.server.url RewriteEngine On RewriteCond %{HTTPS} !=on RewriteRule ^/(.*) https://your.sormas.server.url/$1 [R,L] </VirtualHost> <IfModule mod_ssl.c> <VirtualHost *:443> ServerName your.sormas.server.url ... </VirtualHost> </IfModule> Configure logging: ErrorLog /var/log/apache2/error.log LogLevel warn LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b _%D_ \\\"%{User}i\\\" \\\"%{Connection}i\\\" \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined_ext CustomLog /var/log/apache2/access.log combined_ext SSL key config: SSLEngine on SSLCertificateFile /etc/ssl/certs/your.sormas.server.url.crt SSLCertificateKeyFile /etc/ssl/private/your.sormas.server.url.key SSLCertificateChainFile /etc/ssl/certs/your.sormas.server.url.ca-bundle # disable weak ciphers and old TLS/SSL SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1 SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE$ SSLHonorCipherOrder off Add a proxy pass to the local port: ProxyRequests Off ProxyPass /sormas-ui http://localhost:6080/sormas-ui ProxyPassReverse /sormas-ui http://localhost:6080/sormas-ui ProxyPass /sormas-rest http://localhost:6080/sormas-rest ProxyPassReverse /sormas-rest http://localhost:6080/sormas-rest Configure security settings: Header always set X-Content-Type-Options \"nosniff\" Header always set X-Xss-Protection \"1; mode=block\" # Disable Caching Header always set Cache-Control \"no-cache, no-store, must-revalidate, private\" Header always set Pragma \"no-cache\" Header always set Content-Security-Policy \\ \"default-src 'none'; \\ object-src 'self'; \\ script-src 'self' 'unsafe-inline' 'unsafe-eval'; \\ connect-src https://fonts.googleapis.com https://fonts.gstatic.com 'self'; \\ img-src *; \\ style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; \\ font-src https://fonts.gstatic.com 'self'; \\ frame-src 'self'; \\ worker-src 'self'; \\ manifest-src 'self'; \\ frame-ancestors 'self' # The Content-Type header was either missing or empty. # Ensure each page is setting the specific and appropriate content-type value for the content being delivered. AddType application/vnd.ms-fontobject .eot AddType application/x-font-opentype .otf AddType image/svg+xml .svg AddType application/x-font-ttf .ttf AddType application/font-woff .woff Activate output compression (very important!): <IfModule mod_deflate.c> AddOutputFilterByType DEFLATE text/plain text/html text/xml AddOutputFilterByType DEFLATE text/css text/javascript AddOutputFilterByType DEFLATE application/json AddOutputFilterByType DEFLATE application/xml application/xhtml+xml AddOutputFilterByType DEFLATE application/javascript application/x-javascript DeflateCompressionLevel 1 </IfModule> Provide the android apk: Options -Indexes AliasMatch \"/downloads/sormas-(.*)\" \"/var/www/sormas/downloads/sormas-$1\" For the Apache 2 security configuration we suggest the following settings ( /etc/apache2/conf-available/security.conf ): ServerTokens Prod ServerSignature Off TraceEnable Off Header always set Strict-Transport-Security \"max-age=15768000; includeSubDomains; preload\" Header unset X-Frame-Options Header always set X-Frame-Options SAMEORIGIN Header unset Referrer-Policy Header always set Referrer-Policy \"same-origin\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?HttpOnly).)+)$\" \"$1;HttpOnly\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?Secure).)+)$\" \"$1;Secure\" Header unset X-Powered-By Header unset Server In case you need to update the site config while the server is running, use the following command to publish the changes without the need for a reload: apache2ctl graceful","title":"Apache Web Server"},{"location":"SERVER_SETUP.html#firewall","text":"The server should only publish the ports that are needed. For SORMAS this is port 80 (HTTP) and 443 (HTTPS). In addition you will need the SSH port to access the server for admin purposes. We suggest to use UFW (Uncomplicated Firewall) which provides a simple interface to iptables: sudo apt-get install ufw sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw allow http sudo ufw allow https sudo ufw enable","title":"Firewall"},{"location":"SERVER_SETUP.html#postfix-mail-server","text":"","title":"Postfix Mail Server"},{"location":"SERVER_SETUP.html#install-postfix-and-mailutils","text":"apt install aptitude aptitude install postfix -> choose \"satelite system\" apt install mailutils","title":"Install postfix and mailutils"},{"location":"SERVER_SETUP.html#configure-your-system","text":"nano /etc/aliases -> add \"root: enter-your@support-email-here.com\" nano /opt/domains/sormas/config/logback.xml -> make sure \"EMAIL_ERROR\" appender is active and sends out to your email address","title":"Configure your system"},{"location":"SERVER_SETUP.html#testing-the-server-setup","text":"Use SSL Labs to test your server security config: https://www.ssllabs.com/ssltest","title":"Testing the Server Setup"},{"location":"SERVER_SETUP.html#r-software-environment","text":"In order to enable disease network diagrams in the contact dashboard, R and several extension packages are required. Then the Rscript executable has to be configured in the sormas.properties file. This can be conveniently accomplished by executing the R setup script from the SORMAS ZIP archive (see SORMAS Server ): If the SORMAS installation has been customized, r-setup.sh the install paths may have to be adjusted accordingly with a text editor. Execute R setup script and follow its instructions. chmod +x r-setup.sh ./r-setup.sh","title":"R Software Environment"},{"location":"SERVER_SETUP.html#sormas-to-sormas-certificate-setup","text":"To be able to communicate with other SORMAS instances, there are some additional steps which need to be taken, in order to set up the certificate and the truststore. Please see the related guide for detailed instructions regarding SORMAS to SORMAS setup.","title":"SORMAS to SORMAS Certificate Setup"},{"location":"SERVER_SETUP.html#troubleshooting","text":"","title":"Troubleshooting"},{"location":"SERVER_SETUP.html#problem-login-fails","text":"Check that the users table does have a corresponding entry. If not, the database initialization that is done when deploying sormas-ear.ear probably had an error.","title":"Problem: Login fails"},{"location":"SERVER_SETUP.html#problem-server-is-out-of-memory","text":"Old servers were set up with a memory size of less than 2048MB. You can change this using the following commands: /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx512m /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx1024m /opt/payara-172/glassfish/bin/asadmin --port 6048 create-jvm-options -Xmx2048m Alternative: You can edit the settings directly in the domain.xml in the config directory of the SORMAS domain. Just search for Xmx - there should be two entries that need to be changed.","title":"Problem: Server is out of memory"},{"location":"SERVER_SETUP_es-CU.html","text":"Instalar un servidor de SORMAS Nota: Esta gu\u00eda explica c\u00f3mo instalar un servidor de SORMAS en sistemas Linux y Windows, esto \u00faltimo para uso en sistemas de desarrollo solamente. Tenga en cuenta tambi\u00e9n que ciertas partes del script de configuraci\u00f3n no se ejecutar\u00e1n en Windows. Contenido Prerrequisitos Java 11 Base de datos Postgres Servidor de SORMAS Servidor Keycloak Configuraci\u00f3n del servidor web Servidor web Apache Cortafuegos Servidor de correo Postfix Probar la configuraci\u00f3n del servidor Entorno de software R Soluci\u00f3n de problemas Temas relacionados Crear una aplicaci\u00f3n para un servidor demo Repositorio Docker de SORMAS Prerrequisitos Java 11 Descargue e instale Java 11 JDK (no JRE) para su sistema operativo. Sugerimos utilizar Zulu OpenJDK: https://www.azul.com/downloads/zulu/ Linux : https://docs.azul.com/zulu/zuludocs/#ZuluUserGuide/PrepareZuluPlatform/AttachAPTRepositoryUbuntuOrDebianSys.htm sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11 Windows : Para entornos de prueba y desarrollo, sugerimos descargar y ejecutar el instalador de Java 11 JDK para sistemas cliente de 32 o 64 bits (seg\u00fan su sistema). Puede verificar su versi\u00f3n de Java desde el shell/l\u00ednea de comandos usando: java -version Base de datos Postgres Instale PostgreSQL (actualmente 9.5, 9.6 o 10) en su sistema (los manuales para todos los sistemas operativos se pueden encontrar aqu\u00ed: https://www.postgresql.org/download) Especifique max_connections = 288 y max_prepared_transactions = 256 (como m\u00ednimo, la suma de todos los grupos de conexiones) en postgresql.conf (por ejemplo, /etc/postgresql/10.0/main/postgresql.conf ; C:/Program Files/PostgreSQL/10.0/data ) - asegure que la propiedad no est\u00e9 comentada Instale la extensi\u00f3n \"temporal tables\" para Postgres (https://github.com/arkhipov/temporal_tables) Windows : Descargue la versi\u00f3n m\u00e1s reciente para su versi\u00f3n de Postgres: https://github.com/arkhipov/temporal_tables/releases/latest, luego copie la DLL del proyecto en el directorio lib de PostgreSQL, y los archivos .sql y .control en el directorio share\\extension. Linux (vea https://github.com/arkhipov/temporal_tables#installation): sudo apt-get install libpq-dev sudo apt-get install postgresql-server-dev-all sudo apt install pgxnclient Chequee GCC: gcc --version e instale si no est\u00e1 presente sudo pgxn install temporal_tables Los paquetes se pueden eliminar despu\u00e9s Servidor de SORMAS Obtenga el build m\u00e1s reciente de SORMAS descargando el archivo ZIP de la distribuci\u00f3n m\u00e1s reciente en GitHub: https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Linux : Descomprima el archivo, copie/cargue su contenido en /root/deploy/sormas/$(date +%F) , y haga ejecutable el script de configuraci\u00f3n. cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip chmod +x $(date +%F)/server-setup.sh Windows : Descargue e instale Git para Windows. Esto proporcionar\u00e1 una emulaci\u00f3n de bash que puede usar para ejecutar el script de configuraci\u00f3n: https://gitforwindows.org/ Descomprima el archivo ZIP (por ejemplo, en su directorio de descargas) Abra Git Bash y navegue hasta el subdirectorio de configuraci\u00f3n Opcional: Abra server-setup.sh en un editor de texto para personalizar las rutas de instalaci\u00f3n, el acceso a la base de datos, y los puertos del servidor. Los puertos predeterminados son 6080 (HTTP), 6081 (HTTPS) y 6048 (admin). Importante: No cambie el nombre de usuario de la base de datos. El nombre predefinido es usado en las declaraciones ejecutadas en la base de datos. Configure la base de datos y un dominio Payara para SORMAS ejecutando el script de configuraci\u00f3n: sudo -s ./server-setup.sh Presione Enter cuando se solicite IMPORTANTE : Verifique que el script se ejecut\u00f3 correctamente. Si algo sale mal, debe solucionar el problema (o pedir ayuda); despu\u00e9s elimine el directorio de dominio creado, y vuelva a ejecutar el script. IMPORTANTE : Ajuste la configuraci\u00f3n de SORMAS para su pa\u00eds en /opt/domains/sormas/sormas.properties Ajuste la configuraci\u00f3n de registro en /opt/domains/sormas/config/logback.xml de acuerdo a sus necesidades (por ejemplo, configure y active el anexador de correo electr\u00f3nico) Linux: Actualice el dominio de SORMAS Servidor Keycloak Keycloak se puede configurar de dos formas: * como contenedor de Docker (para usar el enfoque Keycloak solamente) * como instalaci\u00f3n independiente (para desarrollar en Keycloak, por ejemplo, temas, SPIs) Keycloak como contenedor Docker Para hacer solo cuando SORMAS ya est\u00e1 instalado en la m\u00e1quina como una instalaci\u00f3n independiente. Para la configuraci\u00f3n completa de Docker, vea el repositorio SORMAS-Docker . Prerrequisitos * Servidor de SORMAS instalado * PostgreSQL instalado * Docker instalado * Abra y edite keycloak-setup.sh con los valores reales de su sistema (en Windows utilice Git Bash) . Configuraci\u00f3n * Ejecute keycloak-setup.sh * Actualice el archivo sormas.properties en el dominio de SORMAS con la propiedad authentication.provider=KEYCLOAK Keycloak como instalaci\u00f3n independiente Prerrequisitos * Servidor de SORMAS instalado * PostgreSQL instalado Configuraci\u00f3n Configuraci\u00f3n de Keycloak como instalaci\u00f3n independiente Gu\u00eda de instalaci\u00f3n y configuraci\u00f3n del servidor * Configure Keycloak con la Configuraci\u00f3n de base de datos relacional de la base de datos PostgreSQL * Configure un usuario administrador * Copie el contenido de la carpeta themes en ${KEYCLOAK_HOME}/themes Desplegar temas * Despliegue sormas-keycloak-service-provider Usar Keycloak Deployer * Actualice el archivo SORMAS.json reemplazando los siguientes marcadores de posici\u00f3n: ${SORMAS_SERVER_URL} , ${KEYCLOAK_SORMAS_UI_SECRET} , ${KEYCLOAK_SORMAS_BACKEND_SECRET} , ${KEYCLOAK_SORMAS_REST_SECRET} * Cree el \u00e1mbito de SORMAS importando SORMAS.json , vea Crear un nuevo \u00e1mbito * Actualice los clientes sormas-* generando nuevos secretos para ellos * Actualice la configuraci\u00f3n de correo electr\u00f3nico del \u00e1mbito para permitir el env\u00edo de correos electr\u00f3nicos a los usuarios Para actualizar el servidor de SORMAS, ejecute los siguientes comandos shell script ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientSecret --propertyValue=${KEYCLOAK_SORMAS_UI_SECRET} --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientId --propertyValue=sormas-ui --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.scope --propertyValue=openid --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.providerURI --propertyValue=http://localhost:${KEYCLOAK_PORT}/keycloak/auth/realms/SORMAS --source=domain ${ASADMIN} set-config-property --propertyName=sormas.rest.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-rest\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_REST_SECRET}\\\"},\\\"confidential-port\\\":0,\\\"principal-attribute\\\":\\\"preferred_username\\\",\\\"enable-basic-auth\\\":true}\" --source=domain ${ASADMIN} set-config-property --propertyName=sormas.backend.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth/\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-backend\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_BACKEND_SECRET}\\\"},\\\"confidential-port\\\":0}\" --source=domain donde: * ${ASADMIN} - representa la ubicaci\u00f3n de ${PAYARA_HOME}\\bin\\asadmin * ${KEYCLOAK_PORT} - el puerto en que se ejecutar\u00e1 keycloak * ${KEYCLOAK_SORMAS_UI_SECRET} - es el secreto generado en Keycloak para el cliente sormas-ui * ${KEYCLOAK_SORMAS_REST_SECRET} - es el secreto generado en Keycloak para el cliente sormas-rest * ${KEYCLOAK_SORMAS_BACKEND_SECRET} - es el secreto generado en Keycloak para el cliente sormas-backend Luego actualice el archivo sormas.properties en el dominio de SORMAS con la propiedad authentication.provider=KEYCLOAK Conectar Keycloak a una instancia de SORMAS que ya est\u00e9 en ejecuci\u00f3n despu\u00e9s de configurar Keycloak como una de las opciones descritas anteriormente Si Keycloak es configurado junto a una instancia de SORMAS que ya est\u00e1 en ejecuci\u00f3n, estos son los pasos a seguir para asegurar que los usuarios ya existentes puedan acceder al sistema: 1. Cree manualmente un usuario administrador en Keycloak para el \u00e1mbito SORMAS Creating a user (el nombre de usuario debe ser igual al nombre de usuario del administrador en SORMAS) 2. Inicie sesi\u00f3n en SORMAS y active el bot\u00f3n Sincronizar usuarios de la p\u00e1gina Usuarios 3. Esto sincronizar\u00e1 a los usuarios con Keycloak manteniendo sus contrase\u00f1as originales - consulte Proveedor de servicios Keycloak de SORMAS para obtener m\u00e1s informaci\u00f3n Configuraci\u00f3n de Keycloak M\u00e1s informaci\u00f3n sobre la configuraci\u00f3n predeterminada y c\u00f3mo personalizar aqu\u00ed Keycloak Configuraci\u00f3n del servidor web Servidor web Apache Nota: Esto no es necesario para los sistemas de desarrollo. Cuando est\u00e9 usando SORMAS en un entorno de producci\u00f3n, debe usar un servidor http como Apache 2 en lugar de poner el servidor Payara en la primera l\u00ednea. A continuaci\u00f3n, algunas cosas que debe hacer para configurar el servidor Apache como proxy: Active todos los m\u00f3dulos necesarios: a2enmod ssl a2enmod rewrite a2enmod proxy a2enmod proxy_http a2enmod headers Cree un nuevo sitio /etc/apache2/sites-available/url.de.su.servidor.sormas.conf (por ejemplo, sormas.org.conf) Fuerce conexiones con seguridad SSL: redirija de http a https: ServerName url.de.su.servidor.sormas RewriteEngine On RewriteCond %{HTTPS} !=on RewriteRule ^/(.*) https://url.de.su.servidor.sormas/$1 [R,L] ServerName url.de.su.servidor.sormas ... * Configure el registro: ErrorLog /var/log/apache2/error.log LogLevel warn LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b %D \\\"%{User}i\\\" \\\"%{Connection}i\\\" \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined_ext CustomLog /var/log/apache2/access.log combined_ext * Configuraci\u00f3n de clave SSL: SSLEngine on SSLCertificateFile /etc/ssl/certs/url.de.su.servidor.sormas.crt SSLCertificateKeyFile /etc/ssl/private/url.de.su.servidor.sormas.key SSLCertificateChainFile /etc/ssl/certs/url.de.su.servidor.sormas.ca-bundle deshabilitar cifrados d\u00e9biles y antiguos TLS/SSL SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1 SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE$ SSLHonorCipherOrder off * Agregue un proxy pass al puerto local: ProxyRequests Off ProxyPass /sormas-ui http://localhost:6080/sormas-ui ProxyPassReverse /sormas-ui http://localhost:6080/sormas-ui ProxyPass /sormas-rest http://localhost:6080/sormas-rest ProxyPassReverse /sormas-rest http://localhost:6080/sormas-rest * Configure los ajustes de seguridad: Header always set X-Content-Type-Options \"nosniff\" Header always set X-Xss-Protection \"1; mode=block\" Deshabilitar el almacenamiento en cach\u00e9 Header always set Cache-Control \"no-cache, no-store, must-revalidate, private\" Header always set Pragma \"no-cache\" Header always set Content-Security-Policy \\ \"default-src 'none'; \\ object-src 'self'; \\ script-src 'self' 'unsafe-inline' 'unsafe-eval'; \\ connect-src https://fonts.googleapis.com https://fonts.gstatic.com 'self'; \\ img-src *; \\ style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; \\ font-src https://fonts.gstatic.com 'self'; \\ frame-src 'self'; \\ worker-src 'self'; \\ manifest-src 'self'; \\ frame-ancestors 'self' El header Content-Type estaba vac\u00edo o ausente. Asegure que cada p\u00e1gina establezca el valor de tipo de contenido espec\u00edfico y apropiado para el contenido que se entrega. AddType application/vnd.ms-fontobject .eot AddType application/x-font-opentype .otf AddType image/svg+xml .svg AddType application/x-font-ttf .ttf AddType application/font-woff .woff * Active la compresi\u00f3n de la salida (\u00a1muy importante!): AddOutputFilterByType DEFLATE text/plain text/html text/xml AddOutputFilterByType DEFLATE text/css text/javascript AddOutputFilterByType DEFLATE application/json AddOutputFilterByType DEFLATE application/xml application/xhtml+xml AddOutputFilterByType DEFLATE application/javascript application/x-javascript DeflateCompressionLevel 1 Proporcione la apk de Android: Options -Indexes AliasMatch \"/downloads/sormas-(.*)\" \"/var/www/sormas/downloads/sormas-$1\" Para la configuraci\u00f3n de seguridad de Apache 2, sugerimos los siguientes ajustes ( /etc/apache2/conf-available/security.conf ): ServerTokens Prod ServerSignature Off TraceEnable Off Header always set Strict-Transport-Security \"max-age=15768000; includeSubDomains; preload\" Header unset X-Frame-Options Header always set X-Frame-Options SAMEORIGIN Header unset Referrer-Policy Header always set Referrer-Policy \"same-origin\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?HttpOnly).)+)$\" \"$1;HttpOnly\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?Secure).)+)$\" \"$1;Secure\" Header unset X-Powered-By Header unset Server Si necesita actualizar la configuraci\u00f3n del sitio mientras el servidor se est\u00e1 ejecutando, use el siguiente comando para publicar los cambios sin volver a cargar: apache2ctl graceful Cortafuegos El servidor solo debe publicar los puertos que son necesarios. Para SORMAS, son los puertos 80 (HTTP) y 443 (HTTPS). Adem\u00e1s, necesitar\u00e1 el puerto SSH para acceder al servidor con fines administrativos. Sugerimos utilizar UFW (Uncomplicated Firewall) que proporciona una interfaz sencilla para iptables: sudo apt-get install ufw sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw allow http sudo ufw allow https sudo ufw enable Servidor de correo Postfix Instale postfix y mailutils: apt install aptitude aptitude install postfix -> elija \"satelite system\" apt install mailutils Configure su sistema: nano /etc/aliases -> a\u00f1ada \"root: ingrese-su@correo-electr\u00f3nico-de-soporte-aqu\u00ed.com\" nano /opt/domains/sormas/config/logback.xml -> asegure que el anexador \"EMAIL_ERROR\" est\u00e9 activado y env\u00ede a su direcci\u00f3n de correo electr\u00f3nico Probar la configuraci\u00f3n del servidor Utilice SSL Labs para probar la configuraci\u00f3n de seguridad de su servidor: https://www.ssllabs.com/ssltest Entorno de software R Para habilitar los diagramas de red de enfermedades en el tablero de control de contactos, se requieren R y varios paquetes de extensi\u00f3n. Despu\u00e9s, el ejecutable Rscript debe configurarse en el archivo sormas.properties . Esto se puede hacer de manera conveniente ejecutando el script de configuraci\u00f3n de R desde el archivo ZIP de SORMAS (vea Servidor de SORMAS ): Si la instalaci\u00f3n de SORMAS se ha personalizado, puede ser necesario ajustar las rutas de instalaci\u00f3n en r-setup.sh , usando un editor de texto. Ejecute el script de configuraci\u00f3n de R: chmod +x r-setup.sh ./r-setup.sh Siga las instrucciones del script. Configuraci\u00f3n del certificado SORMAS to SORMAS Para poder comunicar con otras instancias de SORMAS, hay algunos pasos adicionales que se deben seguir, a fin de configurar el certificado y el truststore. Consulte la gu\u00eda relacionada para obtener instrucciones detalladas sobre la configuraci\u00f3n de SORMAS to SORMAS. Soluci\u00f3n de problemas Problema: El inicio de sesi\u00f3n falla Compruebe que la tabla de usuarios tiene una entrada correspondiente. Si no es as\u00ed, la inicializaci\u00f3n de la base de datos que se realiza al desplegar sormas-ear.ear probablemente tuvo un error. Problema: El servidor no tiene memoria Los servidores antiguos se configuraron con un tama\u00f1o de memoria de menos de 2048MB. Puede cambiar esto usando los siguientes comandos: /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx512m /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx1024m /opt/payara-172/glassfish/bin/asadmin --port 6048 create-jvm-options -Xmx2048m Alternativa: Puede editar los ajustes directamente en domain.xml, en el directorio config del dominio de SORMAS. Simplemente busque Xmx - debe haber dos entradas que cambiar.","title":"Instalar un servidor de SORMAS"},{"location":"SERVER_SETUP_es-CU.html#instalar-un-servidor-de-sormas","text":"Nota: Esta gu\u00eda explica c\u00f3mo instalar un servidor de SORMAS en sistemas Linux y Windows, esto \u00faltimo para uso en sistemas de desarrollo solamente. Tenga en cuenta tambi\u00e9n que ciertas partes del script de configuraci\u00f3n no se ejecutar\u00e1n en Windows.","title":"Instalar un servidor de SORMAS"},{"location":"SERVER_SETUP_es-CU.html#contenido","text":"Prerrequisitos Java 11 Base de datos Postgres Servidor de SORMAS Servidor Keycloak Configuraci\u00f3n del servidor web Servidor web Apache Cortafuegos Servidor de correo Postfix Probar la configuraci\u00f3n del servidor Entorno de software R Soluci\u00f3n de problemas","title":"Contenido"},{"location":"SERVER_SETUP_es-CU.html#temas-relacionados","text":"Crear una aplicaci\u00f3n para un servidor demo Repositorio Docker de SORMAS","title":"Temas relacionados"},{"location":"SERVER_SETUP_es-CU.html#prerrequisitos","text":"","title":"Prerrequisitos"},{"location":"SERVER_SETUP_es-CU.html#java-11","text":"Descargue e instale Java 11 JDK (no JRE) para su sistema operativo. Sugerimos utilizar Zulu OpenJDK: https://www.azul.com/downloads/zulu/ Linux : https://docs.azul.com/zulu/zuludocs/#ZuluUserGuide/PrepareZuluPlatform/AttachAPTRepositoryUbuntuOrDebianSys.htm sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 sudo apt-add-repository 'deb https://repos.azul.com/zulu/deb/ stable main' sudo apt-get update sudo apt-get install zulu11 Windows : Para entornos de prueba y desarrollo, sugerimos descargar y ejecutar el instalador de Java 11 JDK para sistemas cliente de 32 o 64 bits (seg\u00fan su sistema). Puede verificar su versi\u00f3n de Java desde el shell/l\u00ednea de comandos usando: java -version","title":"Java 11"},{"location":"SERVER_SETUP_es-CU.html#base-de-datos-postgres","text":"Instale PostgreSQL (actualmente 9.5, 9.6 o 10) en su sistema (los manuales para todos los sistemas operativos se pueden encontrar aqu\u00ed: https://www.postgresql.org/download) Especifique max_connections = 288 y max_prepared_transactions = 256 (como m\u00ednimo, la suma de todos los grupos de conexiones) en postgresql.conf (por ejemplo, /etc/postgresql/10.0/main/postgresql.conf ; C:/Program Files/PostgreSQL/10.0/data ) - asegure que la propiedad no est\u00e9 comentada Instale la extensi\u00f3n \"temporal tables\" para Postgres (https://github.com/arkhipov/temporal_tables) Windows : Descargue la versi\u00f3n m\u00e1s reciente para su versi\u00f3n de Postgres: https://github.com/arkhipov/temporal_tables/releases/latest, luego copie la DLL del proyecto en el directorio lib de PostgreSQL, y los archivos .sql y .control en el directorio share\\extension. Linux (vea https://github.com/arkhipov/temporal_tables#installation): sudo apt-get install libpq-dev sudo apt-get install postgresql-server-dev-all sudo apt install pgxnclient Chequee GCC: gcc --version e instale si no est\u00e1 presente sudo pgxn install temporal_tables Los paquetes se pueden eliminar despu\u00e9s","title":"Base de datos Postgres"},{"location":"SERVER_SETUP_es-CU.html#servidor-de-sormas","text":"Obtenga el build m\u00e1s reciente de SORMAS descargando el archivo ZIP de la distribuci\u00f3n m\u00e1s reciente en GitHub: https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Linux : Descomprima el archivo, copie/cargue su contenido en /root/deploy/sormas/$(date +%F) , y haga ejecutable el script de configuraci\u00f3n. cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip chmod +x $(date +%F)/server-setup.sh Windows : Descargue e instale Git para Windows. Esto proporcionar\u00e1 una emulaci\u00f3n de bash que puede usar para ejecutar el script de configuraci\u00f3n: https://gitforwindows.org/ Descomprima el archivo ZIP (por ejemplo, en su directorio de descargas) Abra Git Bash y navegue hasta el subdirectorio de configuraci\u00f3n Opcional: Abra server-setup.sh en un editor de texto para personalizar las rutas de instalaci\u00f3n, el acceso a la base de datos, y los puertos del servidor. Los puertos predeterminados son 6080 (HTTP), 6081 (HTTPS) y 6048 (admin). Importante: No cambie el nombre de usuario de la base de datos. El nombre predefinido es usado en las declaraciones ejecutadas en la base de datos. Configure la base de datos y un dominio Payara para SORMAS ejecutando el script de configuraci\u00f3n: sudo -s ./server-setup.sh Presione Enter cuando se solicite IMPORTANTE : Verifique que el script se ejecut\u00f3 correctamente. Si algo sale mal, debe solucionar el problema (o pedir ayuda); despu\u00e9s elimine el directorio de dominio creado, y vuelva a ejecutar el script. IMPORTANTE : Ajuste la configuraci\u00f3n de SORMAS para su pa\u00eds en /opt/domains/sormas/sormas.properties Ajuste la configuraci\u00f3n de registro en /opt/domains/sormas/config/logback.xml de acuerdo a sus necesidades (por ejemplo, configure y active el anexador de correo electr\u00f3nico) Linux: Actualice el dominio de SORMAS","title":"Servidor de SORMAS"},{"location":"SERVER_SETUP_es-CU.html#servidor-keycloak","text":"Keycloak se puede configurar de dos formas: * como contenedor de Docker (para usar el enfoque Keycloak solamente) * como instalaci\u00f3n independiente (para desarrollar en Keycloak, por ejemplo, temas, SPIs)","title":"Servidor Keycloak"},{"location":"SERVER_SETUP_es-CU.html#keycloak-como-contenedor-docker","text":"Para hacer solo cuando SORMAS ya est\u00e1 instalado en la m\u00e1quina como una instalaci\u00f3n independiente. Para la configuraci\u00f3n completa de Docker, vea el repositorio SORMAS-Docker . Prerrequisitos * Servidor de SORMAS instalado * PostgreSQL instalado * Docker instalado * Abra y edite keycloak-setup.sh con los valores reales de su sistema (en Windows utilice Git Bash) . Configuraci\u00f3n * Ejecute keycloak-setup.sh * Actualice el archivo sormas.properties en el dominio de SORMAS con la propiedad authentication.provider=KEYCLOAK","title":"Keycloak como contenedor Docker"},{"location":"SERVER_SETUP_es-CU.html#keycloak-como-instalacion-independiente","text":"Prerrequisitos * Servidor de SORMAS instalado * PostgreSQL instalado Configuraci\u00f3n Configuraci\u00f3n de Keycloak como instalaci\u00f3n independiente Gu\u00eda de instalaci\u00f3n y configuraci\u00f3n del servidor * Configure Keycloak con la Configuraci\u00f3n de base de datos relacional de la base de datos PostgreSQL * Configure un usuario administrador * Copie el contenido de la carpeta themes en ${KEYCLOAK_HOME}/themes Desplegar temas * Despliegue sormas-keycloak-service-provider Usar Keycloak Deployer * Actualice el archivo SORMAS.json reemplazando los siguientes marcadores de posici\u00f3n: ${SORMAS_SERVER_URL} , ${KEYCLOAK_SORMAS_UI_SECRET} , ${KEYCLOAK_SORMAS_BACKEND_SECRET} , ${KEYCLOAK_SORMAS_REST_SECRET} * Cree el \u00e1mbito de SORMAS importando SORMAS.json , vea Crear un nuevo \u00e1mbito * Actualice los clientes sormas-* generando nuevos secretos para ellos * Actualice la configuraci\u00f3n de correo electr\u00f3nico del \u00e1mbito para permitir el env\u00edo de correos electr\u00f3nicos a los usuarios Para actualizar el servidor de SORMAS, ejecute los siguientes comandos shell script ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientSecret --propertyValue=${KEYCLOAK_SORMAS_UI_SECRET} --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.clientId --propertyValue=sormas-ui --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.scope --propertyValue=openid --source=domain ${ASADMIN} set-config-property --propertyName=payara.security.openid.providerURI --propertyValue=http://localhost:${KEYCLOAK_PORT}/keycloak/auth/realms/SORMAS --source=domain ${ASADMIN} set-config-property --propertyName=sormas.rest.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-rest\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_REST_SECRET}\\\"},\\\"confidential-port\\\":0,\\\"principal-attribute\\\":\\\"preferred_username\\\",\\\"enable-basic-auth\\\":true}\" --source=domain ${ASADMIN} set-config-property --propertyName=sormas.backend.security.oidc.json --propertyValue=\"{\\\"realm\\\":\\\"SORMAS\\\",\\\"auth-server-url\\\":\\\"http://localhost:${KEYCLOAK_PORT}/auth/\\\",\\\"ssl-required\\\":\\\"external\\\",\\\"resource\\\":\\\"sormas-backend\\\",\\\"credentials\\\":{\\\"secret\\\":\\\"${KEYCLOAK_SORMAS_BACKEND_SECRET}\\\"},\\\"confidential-port\\\":0}\" --source=domain donde: * ${ASADMIN} - representa la ubicaci\u00f3n de ${PAYARA_HOME}\\bin\\asadmin * ${KEYCLOAK_PORT} - el puerto en que se ejecutar\u00e1 keycloak * ${KEYCLOAK_SORMAS_UI_SECRET} - es el secreto generado en Keycloak para el cliente sormas-ui * ${KEYCLOAK_SORMAS_REST_SECRET} - es el secreto generado en Keycloak para el cliente sormas-rest * ${KEYCLOAK_SORMAS_BACKEND_SECRET} - es el secreto generado en Keycloak para el cliente sormas-backend Luego actualice el archivo sormas.properties en el dominio de SORMAS con la propiedad authentication.provider=KEYCLOAK","title":"Keycloak como instalaci\u00f3n independiente"},{"location":"SERVER_SETUP_es-CU.html#conectar-keycloak-a-una-instancia-de-sormas-que-ya-este-en-ejecucion","text":"despu\u00e9s de configurar Keycloak como una de las opciones descritas anteriormente Si Keycloak es configurado junto a una instancia de SORMAS que ya est\u00e1 en ejecuci\u00f3n, estos son los pasos a seguir para asegurar que los usuarios ya existentes puedan acceder al sistema: 1. Cree manualmente un usuario administrador en Keycloak para el \u00e1mbito SORMAS Creating a user (el nombre de usuario debe ser igual al nombre de usuario del administrador en SORMAS) 2. Inicie sesi\u00f3n en SORMAS y active el bot\u00f3n Sincronizar usuarios de la p\u00e1gina Usuarios 3. Esto sincronizar\u00e1 a los usuarios con Keycloak manteniendo sus contrase\u00f1as originales - consulte Proveedor de servicios Keycloak de SORMAS para obtener m\u00e1s informaci\u00f3n","title":"Conectar Keycloak a una instancia de SORMAS que ya est\u00e9 en ejecuci\u00f3n"},{"location":"SERVER_SETUP_es-CU.html#configuracion-de-keycloak","text":"M\u00e1s informaci\u00f3n sobre la configuraci\u00f3n predeterminada y c\u00f3mo personalizar aqu\u00ed Keycloak","title":"Configuraci\u00f3n de Keycloak"},{"location":"SERVER_SETUP_es-CU.html#configuracion-del-servidor-web","text":"","title":"Configuraci\u00f3n del servidor web"},{"location":"SERVER_SETUP_es-CU.html#servidor-web-apache","text":"Nota: Esto no es necesario para los sistemas de desarrollo. Cuando est\u00e9 usando SORMAS en un entorno de producci\u00f3n, debe usar un servidor http como Apache 2 en lugar de poner el servidor Payara en la primera l\u00ednea. A continuaci\u00f3n, algunas cosas que debe hacer para configurar el servidor Apache como proxy: Active todos los m\u00f3dulos necesarios: a2enmod ssl a2enmod rewrite a2enmod proxy a2enmod proxy_http a2enmod headers Cree un nuevo sitio /etc/apache2/sites-available/url.de.su.servidor.sormas.conf (por ejemplo, sormas.org.conf) Fuerce conexiones con seguridad SSL: redirija de http a https: ServerName url.de.su.servidor.sormas RewriteEngine On RewriteCond %{HTTPS} !=on RewriteRule ^/(.*) https://url.de.su.servidor.sormas/$1 [R,L] ServerName url.de.su.servidor.sormas ... * Configure el registro: ErrorLog /var/log/apache2/error.log LogLevel warn LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b %D \\\"%{User}i\\\" \\\"%{Connection}i\\\" \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined_ext CustomLog /var/log/apache2/access.log combined_ext * Configuraci\u00f3n de clave SSL: SSLEngine on SSLCertificateFile /etc/ssl/certs/url.de.su.servidor.sormas.crt SSLCertificateKeyFile /etc/ssl/private/url.de.su.servidor.sormas.key SSLCertificateChainFile /etc/ssl/certs/url.de.su.servidor.sormas.ca-bundle","title":"Servidor web Apache"},{"location":"SERVER_SETUP_es-CU.html#deshabilitar-cifrados-debiles-y-antiguos-tlsssl","text":"SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1 SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE$ SSLHonorCipherOrder off * Agregue un proxy pass al puerto local: ProxyRequests Off ProxyPass /sormas-ui http://localhost:6080/sormas-ui ProxyPassReverse /sormas-ui http://localhost:6080/sormas-ui ProxyPass /sormas-rest http://localhost:6080/sormas-rest ProxyPassReverse /sormas-rest http://localhost:6080/sormas-rest * Configure los ajustes de seguridad: Header always set X-Content-Type-Options \"nosniff\" Header always set X-Xss-Protection \"1; mode=block\"","title":"deshabilitar cifrados d\u00e9biles y antiguos TLS/SSL"},{"location":"SERVER_SETUP_es-CU.html#deshabilitar-el-almacenamiento-en-cache","text":"Header always set Cache-Control \"no-cache, no-store, must-revalidate, private\" Header always set Pragma \"no-cache\" Header always set Content-Security-Policy \\ \"default-src 'none'; \\ object-src 'self'; \\ script-src 'self' 'unsafe-inline' 'unsafe-eval'; \\ connect-src https://fonts.googleapis.com https://fonts.gstatic.com 'self'; \\ img-src *; \\ style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; \\ font-src https://fonts.gstatic.com 'self'; \\ frame-src 'self'; \\ worker-src 'self'; \\ manifest-src 'self'; \\ frame-ancestors 'self'","title":"Deshabilitar el almacenamiento en cach\u00e9"},{"location":"SERVER_SETUP_es-CU.html#el-header-content-type-estaba-vacio-o-ausente","text":"","title":"El header Content-Type estaba vac\u00edo o ausente."},{"location":"SERVER_SETUP_es-CU.html#asegure-que-cada-pagina-establezca-el-valor-de-tipo-de-contenido-especifico-y-apropiado-para-el-contenido-que-se-entrega","text":"AddType application/vnd.ms-fontobject .eot AddType application/x-font-opentype .otf AddType image/svg+xml .svg AddType application/x-font-ttf .ttf AddType application/font-woff .woff * Active la compresi\u00f3n de la salida (\u00a1muy importante!): AddOutputFilterByType DEFLATE text/plain text/html text/xml AddOutputFilterByType DEFLATE text/css text/javascript AddOutputFilterByType DEFLATE application/json AddOutputFilterByType DEFLATE application/xml application/xhtml+xml AddOutputFilterByType DEFLATE application/javascript application/x-javascript DeflateCompressionLevel 1 Proporcione la apk de Android: Options -Indexes AliasMatch \"/downloads/sormas-(.*)\" \"/var/www/sormas/downloads/sormas-$1\" Para la configuraci\u00f3n de seguridad de Apache 2, sugerimos los siguientes ajustes ( /etc/apache2/conf-available/security.conf ): ServerTokens Prod ServerSignature Off TraceEnable Off Header always set Strict-Transport-Security \"max-age=15768000; includeSubDomains; preload\" Header unset X-Frame-Options Header always set X-Frame-Options SAMEORIGIN Header unset Referrer-Policy Header always set Referrer-Policy \"same-origin\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?HttpOnly).)+)$\" \"$1;HttpOnly\" Header edit Set-Cookie \"(?i)^((?:(?!;\\s?Secure).)+)$\" \"$1;Secure\" Header unset X-Powered-By Header unset Server Si necesita actualizar la configuraci\u00f3n del sitio mientras el servidor se est\u00e1 ejecutando, use el siguiente comando para publicar los cambios sin volver a cargar: apache2ctl graceful","title":"Asegure que cada p\u00e1gina establezca el valor de tipo de contenido espec\u00edfico y apropiado para el contenido que se entrega."},{"location":"SERVER_SETUP_es-CU.html#cortafuegos","text":"El servidor solo debe publicar los puertos que son necesarios. Para SORMAS, son los puertos 80 (HTTP) y 443 (HTTPS). Adem\u00e1s, necesitar\u00e1 el puerto SSH para acceder al servidor con fines administrativos. Sugerimos utilizar UFW (Uncomplicated Firewall) que proporciona una interfaz sencilla para iptables: sudo apt-get install ufw sudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow ssh sudo ufw allow http sudo ufw allow https sudo ufw enable","title":"Cortafuegos"},{"location":"SERVER_SETUP_es-CU.html#servidor-de-correo-postfix","text":"Instale postfix y mailutils: apt install aptitude aptitude install postfix -> elija \"satelite system\" apt install mailutils Configure su sistema: nano /etc/aliases -> a\u00f1ada \"root: ingrese-su@correo-electr\u00f3nico-de-soporte-aqu\u00ed.com\" nano /opt/domains/sormas/config/logback.xml -> asegure que el anexador \"EMAIL_ERROR\" est\u00e9 activado y env\u00ede a su direcci\u00f3n de correo electr\u00f3nico","title":"Servidor de correo Postfix"},{"location":"SERVER_SETUP_es-CU.html#probar-la-configuracion-del-servidor","text":"Utilice SSL Labs para probar la configuraci\u00f3n de seguridad de su servidor: https://www.ssllabs.com/ssltest","title":"Probar la configuraci\u00f3n del servidor"},{"location":"SERVER_SETUP_es-CU.html#entorno-de-software-r","text":"Para habilitar los diagramas de red de enfermedades en el tablero de control de contactos, se requieren R y varios paquetes de extensi\u00f3n. Despu\u00e9s, el ejecutable Rscript debe configurarse en el archivo sormas.properties . Esto se puede hacer de manera conveniente ejecutando el script de configuraci\u00f3n de R desde el archivo ZIP de SORMAS (vea Servidor de SORMAS ): Si la instalaci\u00f3n de SORMAS se ha personalizado, puede ser necesario ajustar las rutas de instalaci\u00f3n en r-setup.sh , usando un editor de texto. Ejecute el script de configuraci\u00f3n de R: chmod +x r-setup.sh ./r-setup.sh Siga las instrucciones del script.","title":"Entorno de software R"},{"location":"SERVER_SETUP_es-CU.html#configuracion-del-certificado-sormas-to-sormas","text":"Para poder comunicar con otras instancias de SORMAS, hay algunos pasos adicionales que se deben seguir, a fin de configurar el certificado y el truststore. Consulte la gu\u00eda relacionada para obtener instrucciones detalladas sobre la configuraci\u00f3n de SORMAS to SORMAS.","title":"Configuraci\u00f3n del certificado SORMAS to SORMAS"},{"location":"SERVER_SETUP_es-CU.html#solucion-de-problemas","text":"","title":"Soluci\u00f3n de problemas"},{"location":"SERVER_SETUP_es-CU.html#problema-el-inicio-de-sesion-falla","text":"Compruebe que la tabla de usuarios tiene una entrada correspondiente. Si no es as\u00ed, la inicializaci\u00f3n de la base de datos que se realiza al desplegar sormas-ear.ear probablemente tuvo un error.","title":"Problema: El inicio de sesi\u00f3n falla"},{"location":"SERVER_SETUP_es-CU.html#problema-el-servidor-no-tiene-memoria","text":"Los servidores antiguos se configuraron con un tama\u00f1o de memoria de menos de 2048MB. Puede cambiar esto usando los siguientes comandos: /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx512m /opt/payara-172/glassfish/bin/asadmin --port 6048 delete-jvm-options -Xmx1024m /opt/payara-172/glassfish/bin/asadmin --port 6048 create-jvm-options -Xmx2048m Alternativa: Puede editar los ajustes directamente en domain.xml, en el directorio config del dominio de SORMAS. Simplemente busque Xmx - debe haber dos entradas que cambiar.","title":"Problema: El servidor no tiene memoria"},{"location":"SERVER_UPDATE.html","text":"Updating a SORMAS Server SORMAS releases starting from 1.21.0 contain a script that automatically updates and deploys the server. If you are using an older version and therefore need to do a manual server update, please download the 1.21.0 release files and use the commands specified in the server-update.sh script. Preparations Note: You can skip this step if you've just set up your SORMAS server and have already downloaded the latest release. Get the latest release files (deploy.zip) from https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Unzip the archive and copy/upload its contents to /root/deploy/sormas/$(date +%F) bash cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip Automatic Server Update Navigate to the folder containing the unzipped deploy files: cd /root/deploy/sormas/$(date +%F) Make the update script executable: chmod +x server-update.sh Optional: Open server-update.sh in a text editor to customize the values for e.g. the domain path or the database name. You only need to do this if you used custom values while setting up the server. Execute the update script and follow the instructions: ./server-update.sh If anything goes wrong, open the latest update log file (by default located in the \"update-logs\" folder in the domain directory) and check it for errors. Restoring the Database If anything goes wrong during the automatic database update process when deploying the server, you can use the following command to restore the data: pg_restore --clean -U postgres -Fc -d sormas_db sormas_db_....dump Default Logins These are the default users for most user roles, intended to be used on development or demo systems. In all cases except the admin user, the username and password are identical. Make sure to deactivate them or change the passwords on productive systems. Admin Username: admin Password: sadmin Web users Surveillance Supervisor: SurvSup Case Supervisor: CaseSup Contact Supervisor: ContSup Point of Entry Supervisor: PoeSup Laboratory Officer: LabOff Event Officer: EveOff National User: NatUser National Clinician: NatClin Mobile app users Surveillance Officer: SurvOff Hospital Informant: HospInf Point of Entry Informant: PoeInf Updating Keycloak Standalone installation Upgrading from Keycloak 11 to 12 following the steps from here https://www.keycloak.org/docs/latest/upgrading/#_upgrading Stop the old server and make sure to remove any open connections to the DB Backup the DB (once the upgrade is done the old version cannot be used with the new DB version) Backup the old installation Remove ${OLD_KEYCLOAK_HOME}/standalone/data/tx-object-store/ Download the new Keycloak installation from https://www.keycloak.org/downloads Copy the ${NEW_KEYCLOAK_HOME}/standalone/ directory from the previous installation over the directory in the new installation Copy the postgres module from ${OLD_KEYCLOAK_HOME}/modules/system/layers/keycloak/org/ over to the new installation directory Copy the SORMAS themes from {OLD_KEYCLOAK_HOME}/themes/ over to the new installation directory While the new installation is stopped, run ${NEW_KEYCLOAK_HOME}/bin/jboss-cli.sh ----file=${NEW_KEYCLOAK_HOME}/bin/migrate-standalone.cli ( .bat for Windows) Start the new Keycloak installation from ${NEW_KEYCLOAK_HOME}/bin/standalone.sh ( .bat for Windows) Docker installation The docker installation is automatically upgraded to the latest version specified in the Dockerfile. Prerequisites: Make sure the DB is backed up, because once the upgrade is done the new DB won't be usable with the old version of Keycloak. For more info see the Keycloak Docker Documentation .","title":"Update"},{"location":"SERVER_UPDATE.html#updating-a-sormas-server","text":"SORMAS releases starting from 1.21.0 contain a script that automatically updates and deploys the server. If you are using an older version and therefore need to do a manual server update, please download the 1.21.0 release files and use the commands specified in the server-update.sh script.","title":"Updating a SORMAS Server"},{"location":"SERVER_UPDATE.html#preparations","text":"Note: You can skip this step if you've just set up your SORMAS server and have already downloaded the latest release. Get the latest release files (deploy.zip) from https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Unzip the archive and copy/upload its contents to /root/deploy/sormas/$(date +%F) bash cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip","title":"Preparations"},{"location":"SERVER_UPDATE.html#automatic-server-update","text":"Navigate to the folder containing the unzipped deploy files: cd /root/deploy/sormas/$(date +%F) Make the update script executable: chmod +x server-update.sh Optional: Open server-update.sh in a text editor to customize the values for e.g. the domain path or the database name. You only need to do this if you used custom values while setting up the server. Execute the update script and follow the instructions: ./server-update.sh If anything goes wrong, open the latest update log file (by default located in the \"update-logs\" folder in the domain directory) and check it for errors.","title":"Automatic Server Update"},{"location":"SERVER_UPDATE.html#restoring-the-database","text":"If anything goes wrong during the automatic database update process when deploying the server, you can use the following command to restore the data: pg_restore --clean -U postgres -Fc -d sormas_db sormas_db_....dump","title":"Restoring the Database"},{"location":"SERVER_UPDATE.html#default-logins","text":"These are the default users for most user roles, intended to be used on development or demo systems. In all cases except the admin user, the username and password are identical. Make sure to deactivate them or change the passwords on productive systems.","title":"Default Logins"},{"location":"SERVER_UPDATE.html#admin","text":"Username: admin Password: sadmin","title":"Admin"},{"location":"SERVER_UPDATE.html#web-users","text":"Surveillance Supervisor: SurvSup Case Supervisor: CaseSup Contact Supervisor: ContSup Point of Entry Supervisor: PoeSup Laboratory Officer: LabOff Event Officer: EveOff National User: NatUser National Clinician: NatClin","title":"Web users"},{"location":"SERVER_UPDATE.html#mobile-app-users","text":"Surveillance Officer: SurvOff Hospital Informant: HospInf Point of Entry Informant: PoeInf","title":"Mobile app users"},{"location":"SERVER_UPDATE.html#updating-keycloak","text":"","title":"Updating Keycloak"},{"location":"SERVER_UPDATE.html#standalone-installation","text":"Upgrading from Keycloak 11 to 12 following the steps from here https://www.keycloak.org/docs/latest/upgrading/#_upgrading Stop the old server and make sure to remove any open connections to the DB Backup the DB (once the upgrade is done the old version cannot be used with the new DB version) Backup the old installation Remove ${OLD_KEYCLOAK_HOME}/standalone/data/tx-object-store/ Download the new Keycloak installation from https://www.keycloak.org/downloads Copy the ${NEW_KEYCLOAK_HOME}/standalone/ directory from the previous installation over the directory in the new installation Copy the postgres module from ${OLD_KEYCLOAK_HOME}/modules/system/layers/keycloak/org/ over to the new installation directory Copy the SORMAS themes from {OLD_KEYCLOAK_HOME}/themes/ over to the new installation directory While the new installation is stopped, run ${NEW_KEYCLOAK_HOME}/bin/jboss-cli.sh ----file=${NEW_KEYCLOAK_HOME}/bin/migrate-standalone.cli ( .bat for Windows) Start the new Keycloak installation from ${NEW_KEYCLOAK_HOME}/bin/standalone.sh ( .bat for Windows)","title":"Standalone installation"},{"location":"SERVER_UPDATE.html#docker-installation","text":"The docker installation is automatically upgraded to the latest version specified in the Dockerfile. Prerequisites: Make sure the DB is backed up, because once the upgrade is done the new DB won't be usable with the old version of Keycloak. For more info see the Keycloak Docker Documentation .","title":"Docker installation"},{"location":"SERVER_UPDATE_es-CU.html","text":"Actualizar un servidor de SORMAS Las distribuciones de SORMAS a partir de 1.21.0 contienen un script que actualiza y despliega autom\u00e1ticamente el servidor. Si est\u00e1 utilizando una versi\u00f3n anterior y, por lo tanto, necesita realizar una actualizaci\u00f3n manual del servidor, descargue los archivos de la distribuci\u00f3n 1.21.0 y utilice los comandos especificados en el script server-update.sh. Preparativos Nota: Puede omitir este paso si acaba de configurar su servidor de SORMAS y ya descarg\u00f3 la distribuci\u00f3n m\u00e1s reciente. Obtenga los archivos de la distribuci\u00f3n m\u00e1s reciente (deploy.zip) en https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Descomprima el archivo y copie/cargue su contenido en /root/deploy/sormas/$(date +%F) cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip Actualizaci\u00f3n autom\u00e1tica del servidor Navegue a la carpeta que contiene los archivos de despliegue descomprimidos: cd /root/deploy/sormas/$(date +%F) Haga ejecutable el script de actualizaci\u00f3n: chmod +x server-update.sh Opcional: Abra server-update.sh en un editor de texto para personalizar los valores de, por ejemplo, la ruta del dominio o el nombre de la base de datos. Solo necesita hacer esto si us\u00f3 valores personalizados al configurar el servidor. Ejecute el script de actualizaci\u00f3n y siga las instrucciones: ./server-update.sh Si algo sale mal, abra el archivo de registro de actualizaci\u00f3n m\u00e1s reciente (ubicado por defecto en la carpeta \"update-logs\" del directorio de dominio) y busque los errores. Restaurar la base de datos Si algo sale mal durante el proceso de actualizaci\u00f3n autom\u00e1tica de la base de datos al desplegar el servidor, puede usar el siguiente comando para restaurar los datos: pg_restore --clean -U postgres -Fc -d sormas_db sormas_db_....dump Inicios de sesi\u00f3n predeterminados Estos son los usuarios predeterminados para la mayor\u00eda de los roles de usuario, destinados a ser utilizados en sistemas de desarrollo o demostraci\u00f3n. En todos los casos, excepto el usuario admin, el nombre de usuario y la contrase\u00f1a son id\u00e9nticos. Aseg\u00farese de desactivarlos o cambiar las contrase\u00f1as en los sistemas productivos. Admin Nombre de usuario: admin Contrase\u00f1a: sadmin Usuarios web Supervisor de vigilancia: SurvSup Supervisor de casos: CaseSup Supervisor de contactos: ContSup Supervisor de puntos de entrada: PoeSup Funcionario de laboratorio: LabOff Funcionario de eventos: EveOff Usuario nacional: NatUser Cl\u00ednico nacional: NatClin Usuarios de aplicaciones m\u00f3viles Funcionario de vigilancia: SurvOff Informante de hospital: HospInf Informante de punto de entrada: PoeInf Actualizar Keycloak Instalaci\u00f3n independiente Actualizar Keycloak 11 a 12 siguiendo los pasos de https://www.keycloak.org/docs/latest/upgrading/#_upgrading Detenga el servidor anterior y aseg\u00farese de eliminar cualquier conexi\u00f3n abierta a la base de datos Respalde la base de datos (una vez realizada la actualizaci\u00f3n, la versi\u00f3n anterior no se puede utilizar con la nueva versi\u00f3n de la base de datos.) Respalde la instalaci\u00f3n anterior Elimine ${UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/standalone/data/tx-object-store/ Descargue la nueva instalaci\u00f3n de Keycloak en https://www.keycloak.org/downloads Copie el directorio ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/standalone/ de la instalaci\u00f3n anterior sobre el directorio de la nueva instalaci\u00f3n Copie el m\u00f3dulo postgres de ${UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/modules/system/layers/keycloak/org/ al nuevo directorio de instalaci\u00f3n Copie los temas de SORMAS de {UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/themes/ al nuevo directorio de instalaci\u00f3n Mientras la nueva instalaci\u00f3n est\u00e1 detenida, ejecute ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/jboss-cli.sh ----file=${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/migrate-standalone.cli ( .bat para Windows) Inicie la nueva instalaci\u00f3n de Keycloak con ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/standalone.sh ( .bat para Windows) Instalaci\u00f3n de Docker La instalaci\u00f3n de docker se actualiza autom\u00e1ticamente a la versi\u00f3n m\u00e1s reciente especificada en Dockerfile. Prerrequisitos: Aseg\u00farese de que la base de datos est\u00e9 respaldada, porque una vez realizada la actualizaci\u00f3n, la nueva base de datos no se podr\u00e1 utilizar con la versi\u00f3n anterior de Keycloak. Para obtener m\u00e1s informaci\u00f3n, consulte la Documentaci\u00f3n de Keycloak Docker .","title":"Actualizar un servidor de SORMAS"},{"location":"SERVER_UPDATE_es-CU.html#actualizar-un-servidor-de-sormas","text":"Las distribuciones de SORMAS a partir de 1.21.0 contienen un script que actualiza y despliega autom\u00e1ticamente el servidor. Si est\u00e1 utilizando una versi\u00f3n anterior y, por lo tanto, necesita realizar una actualizaci\u00f3n manual del servidor, descargue los archivos de la distribuci\u00f3n 1.21.0 y utilice los comandos especificados en el script server-update.sh.","title":"Actualizar un servidor de SORMAS"},{"location":"SERVER_UPDATE_es-CU.html#preparativos","text":"Nota: Puede omitir este paso si acaba de configurar su servidor de SORMAS y ya descarg\u00f3 la distribuci\u00f3n m\u00e1s reciente. Obtenga los archivos de la distribuci\u00f3n m\u00e1s reciente (deploy.zip) en https://github.com/hzi-braunschweig/SORMAS-Open/releases/latest Descomprima el archivo y copie/cargue su contenido en /root/deploy/sormas/$(date +%F) cd /root/deploy/sormas SORMAS_VERSION=1.y.z wget https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip unzip sormas_${SORMAS_VERSION}.zip mv deploy/ $(date +%F) rm sormas_${SORMAS_VERSION}.zip","title":"Preparativos"},{"location":"SERVER_UPDATE_es-CU.html#actualizacion-automatica-del-servidor","text":"Navegue a la carpeta que contiene los archivos de despliegue descomprimidos: cd /root/deploy/sormas/$(date +%F) Haga ejecutable el script de actualizaci\u00f3n: chmod +x server-update.sh Opcional: Abra server-update.sh en un editor de texto para personalizar los valores de, por ejemplo, la ruta del dominio o el nombre de la base de datos. Solo necesita hacer esto si us\u00f3 valores personalizados al configurar el servidor. Ejecute el script de actualizaci\u00f3n y siga las instrucciones: ./server-update.sh Si algo sale mal, abra el archivo de registro de actualizaci\u00f3n m\u00e1s reciente (ubicado por defecto en la carpeta \"update-logs\" del directorio de dominio) y busque los errores.","title":"Actualizaci\u00f3n autom\u00e1tica del servidor"},{"location":"SERVER_UPDATE_es-CU.html#restaurar-la-base-de-datos","text":"Si algo sale mal durante el proceso de actualizaci\u00f3n autom\u00e1tica de la base de datos al desplegar el servidor, puede usar el siguiente comando para restaurar los datos: pg_restore --clean -U postgres -Fc -d sormas_db sormas_db_....dump","title":"Restaurar la base de datos"},{"location":"SERVER_UPDATE_es-CU.html#inicios-de-sesion-predeterminados","text":"Estos son los usuarios predeterminados para la mayor\u00eda de los roles de usuario, destinados a ser utilizados en sistemas de desarrollo o demostraci\u00f3n. En todos los casos, excepto el usuario admin, el nombre de usuario y la contrase\u00f1a son id\u00e9nticos. Aseg\u00farese de desactivarlos o cambiar las contrase\u00f1as en los sistemas productivos.","title":"Inicios de sesi\u00f3n predeterminados"},{"location":"SERVER_UPDATE_es-CU.html#admin","text":"Nombre de usuario: admin Contrase\u00f1a: sadmin","title":"Admin"},{"location":"SERVER_UPDATE_es-CU.html#usuarios-web","text":"Supervisor de vigilancia: SurvSup Supervisor de casos: CaseSup Supervisor de contactos: ContSup Supervisor de puntos de entrada: PoeSup Funcionario de laboratorio: LabOff Funcionario de eventos: EveOff Usuario nacional: NatUser Cl\u00ednico nacional: NatClin","title":"Usuarios web"},{"location":"SERVER_UPDATE_es-CU.html#usuarios-de-aplicaciones-moviles","text":"Funcionario de vigilancia: SurvOff Informante de hospital: HospInf Informante de punto de entrada: PoeInf","title":"Usuarios de aplicaciones m\u00f3viles"},{"location":"SERVER_UPDATE_es-CU.html#actualizar-keycloak","text":"","title":"Actualizar Keycloak"},{"location":"SERVER_UPDATE_es-CU.html#instalacion-independiente","text":"Actualizar Keycloak 11 a 12 siguiendo los pasos de https://www.keycloak.org/docs/latest/upgrading/#_upgrading Detenga el servidor anterior y aseg\u00farese de eliminar cualquier conexi\u00f3n abierta a la base de datos Respalde la base de datos (una vez realizada la actualizaci\u00f3n, la versi\u00f3n anterior no se puede utilizar con la nueva versi\u00f3n de la base de datos.) Respalde la instalaci\u00f3n anterior Elimine ${UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/standalone/data/tx-object-store/ Descargue la nueva instalaci\u00f3n de Keycloak en https://www.keycloak.org/downloads Copie el directorio ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/standalone/ de la instalaci\u00f3n anterior sobre el directorio de la nueva instalaci\u00f3n Copie el m\u00f3dulo postgres de ${UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/modules/system/layers/keycloak/org/ al nuevo directorio de instalaci\u00f3n Copie los temas de SORMAS de {UBICACI\u00d3N_ANTERIOR_KEYCLOAK}/themes/ al nuevo directorio de instalaci\u00f3n Mientras la nueva instalaci\u00f3n est\u00e1 detenida, ejecute ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/jboss-cli.sh ----file=${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/migrate-standalone.cli ( .bat para Windows) Inicie la nueva instalaci\u00f3n de Keycloak con ${NUEVA_UBICACI\u00d3N_KEYCLOAK}/bin/standalone.sh ( .bat para Windows)","title":"Instalaci\u00f3n independiente"},{"location":"SERVER_UPDATE_es-CU.html#instalacion-de-docker","text":"La instalaci\u00f3n de docker se actualiza autom\u00e1ticamente a la versi\u00f3n m\u00e1s reciente especificada en Dockerfile. Prerrequisitos: Aseg\u00farese de que la base de datos est\u00e9 respaldada, porque una vez realizada la actualizaci\u00f3n, la nueva base de datos no se podr\u00e1 utilizar con la versi\u00f3n anterior de Keycloak. Para obtener m\u00e1s informaci\u00f3n, consulte la Documentaci\u00f3n de Keycloak Docker .","title":"Instalaci\u00f3n de Docker"},{"location":"SOP_DISEASES.html","text":"SOP for Adding New Diseases to SORMAS This file defines the SOP (Standard Operating Procedure) that should be followed when requesting new diseases to be added to the system by the core development team. Answering all the questions asked in this guide will make sure that we will be able to integrate new diseases into SORMAS as quickly as possible. Content SOP for Adding New Diseases to SORMAS Content Guide Step 1: Download the Data Dictionary Step 2: Define Basic Disease Details Step 3: Define Existing Case Fields Step 4: Define Existing Person Fields Step 5: Define the Relevant Symptoms Step 6: Define the Relevant Epidemiological Data Step 7: Define Health Conditions Step 8: Define New Fields in Other Areas Step 9: Provide Case Classification Criteria Step 10: Provide Additional Information Step 11: Send Your Disease Definition to the SORMAS Team Guide Step 1: Download the Data Dictionary Download the latest Data Dictionary from this repository and open it. Please never use a version of the Data Dictionary that you downloaded earlier as it is very likely that its contents have changed in the meantime. You will use the Data Dictionary to define all the details of the new disease. Please make sure to mark every addition or change (e.g. by colorizing the text or background of the row in a subtle red) so we don't miss any of the information you have provided. Step 2: Define Basic Disease Details Open the Case tab of the Data Dictionary and scroll down to the tables that have a blue background. These tables define enumerations , which are basically data types with fixed values. Examples include the different case classifications, the gender of a person or the diseases that are used in SORMAS. Find the Disease enumeration table (refer to the Type column) and add a new row to it. Enter the following details: The name of the disease in the Caption column Optionally, if the disease has a long name, a short name or abbreviation in the Short column Use the Description column to answer the following question(s): Does the disease have contact follow-up ? If yes, for how many days should contact follow-up be done? Step 3: Define Existing Case Fields Look through the rows in the first table of the Case tab (which has a grey background). This table defines all the fields that are displayed in the Case Information tab in the SORMAS application. The Caption column defines the name of the field as it is displayed in the user interface, while the Diseases column specifies which diseases use this field. Please add the name (or, if available, short name) of your new disease to the \"New disease\" column of every row that represents a field that is relevant for it and colorize it. Step 4: Define Existing Person Fields Open the Person tab and repeat step 3 for the first table containing the fields that define the details of a person in SORMAS. Step 5: Define the Relevant Symptoms Open the Symptoms tab which lists all the symptoms that are currently used in SORMAS. This is a very long list and you will have to go through every single row and define whether this symptom should be tracked for your new disease or not. It's possible that your new disease uses one or more symptoms that are currently not part of SORMAS. In that case, you need to add a new row for each of these symptoms to the bottom of the table and provide the name of the symptom in the Caption column. Most symptoms in SORMAS are simple Yes/No/Unknown fields where Yes means that the symptom is present, No that the symptom is not present and Unknown that there is no information about whether the symptom is present or not. If your symptom can simply be defined by this pattern, you don't have to specify anything else. However, if your symptom is more complex (e.g. there are a number of pre-defined values that the user should choose from), please provide all the necessary details about how the symptom should be specified by users in the Description column. Step 6: Define the Relevant Epidemiological Data Open the Epidemiological data tab which lists all fields that are used to collect information about the epidemiological background of the case, e.g. whether they visited burials, had contact with a confirmed case or animals. Repeat step 3 for all rows in the first table, and add new rows if your new disease requires information that is not currently collected within SORMAS. As new fields in this tab are likely to be more complex than basic symptoms, make sure to define as much information about how they should function in the Description column. Step 7: Define Health Conditions Open the Health conditions tab which contains a list of pre-existing conditions that are not symptoms of the disease, but are still relevant especially for case management purposes in a hospital. Repeat step 3 for all rows in the first table, and add new rows if there are health conditions relevant for your new disease that are not part of SORMAS yet. As always with new fields, make sure to provide all relevant details in the Description column. Step 8: Define New Fields in Other Areas It is possible that your disease requires further information to be collected that is not supported by SORMAS yet, e.g. new details about the person, specific information about its hospitalization, or even very important fields that should directly go into the case information. You can use the same process you used to define new symptoms, health conditions or epidemiological data fields by opening the tab in question and adding new rows to the topmost table. At this point, you have finished all the necessary definitions in the Data Dictionary. Save your work and prepare an email with the Data Dictionary file attached to it. Don't send this email before working through the remaining steps though, as there are still a few details that are needed in order to finish the specification of your new disease. Step 9: Provide Case Classification Criteria Optimally, when defining a new disease, you should also specify the criteria SORMAS should use to automatically classify the case as suspect, probable or confirmed. In order to do this in a way that is compatible with the system we use, you will need access to a running SORMAS system (e.g. the play server you can find at https://sormas.org ). Log in as any user (e.g. the default user on the play server), open the About section from the main menu, and open the Case Classification Rules (HTML) document. Please define the classification criteria in a way that is similar to the system used in this document. If available, you can also send us an official document by WHO or your national CDC that specifies the classification criteria. Step 10: Provide Additional Information If there are still things that are necessary in order to properly implement the new disease in SORMAS (you might require us to create a whole new area for cases or there might be very complex mechanics that need a lot more specification), please give us as many details about them as possible. Just put all this information into your email. Step 11: Send Your Disease Definition to the SORMAS Team Send your email containing the updated Data Dictionary file, the case classification criteria and your additional notes to sormas@helmholtz-hzi.de. Congratulations, your work is done! We should now have all the information we need in order to integrate your disease into SORMAS. If there is anything that is unclear or if we need additional details, we will get in touch with you as soon as possible. Thank you so much for contributing to SORMAS and helping us to fight the spread of as many diseases as possible!","title":"Diseases"},{"location":"SOP_DISEASES.html#sop-for-adding-new-diseases-to-sormas","text":"This file defines the SOP (Standard Operating Procedure) that should be followed when requesting new diseases to be added to the system by the core development team. Answering all the questions asked in this guide will make sure that we will be able to integrate new diseases into SORMAS as quickly as possible.","title":"SOP for Adding New Diseases to SORMAS"},{"location":"SOP_DISEASES.html#content","text":"SOP for Adding New Diseases to SORMAS Content Guide Step 1: Download the Data Dictionary Step 2: Define Basic Disease Details Step 3: Define Existing Case Fields Step 4: Define Existing Person Fields Step 5: Define the Relevant Symptoms Step 6: Define the Relevant Epidemiological Data Step 7: Define Health Conditions Step 8: Define New Fields in Other Areas Step 9: Provide Case Classification Criteria Step 10: Provide Additional Information Step 11: Send Your Disease Definition to the SORMAS Team","title":"Content"},{"location":"SOP_DISEASES.html#guide","text":"","title":"Guide"},{"location":"SOP_DISEASES.html#step-1-download-the-data-dictionary","text":"Download the latest Data Dictionary from this repository and open it. Please never use a version of the Data Dictionary that you downloaded earlier as it is very likely that its contents have changed in the meantime. You will use the Data Dictionary to define all the details of the new disease. Please make sure to mark every addition or change (e.g. by colorizing the text or background of the row in a subtle red) so we don't miss any of the information you have provided.","title":"Step 1: Download the Data Dictionary"},{"location":"SOP_DISEASES.html#step-2-define-basic-disease-details","text":"Open the Case tab of the Data Dictionary and scroll down to the tables that have a blue background. These tables define enumerations , which are basically data types with fixed values. Examples include the different case classifications, the gender of a person or the diseases that are used in SORMAS. Find the Disease enumeration table (refer to the Type column) and add a new row to it. Enter the following details: The name of the disease in the Caption column Optionally, if the disease has a long name, a short name or abbreviation in the Short column Use the Description column to answer the following question(s): Does the disease have contact follow-up ? If yes, for how many days should contact follow-up be done?","title":"Step 2: Define Basic Disease Details"},{"location":"SOP_DISEASES.html#step-3-define-existing-case-fields","text":"Look through the rows in the first table of the Case tab (which has a grey background). This table defines all the fields that are displayed in the Case Information tab in the SORMAS application. The Caption column defines the name of the field as it is displayed in the user interface, while the Diseases column specifies which diseases use this field. Please add the name (or, if available, short name) of your new disease to the \"New disease\" column of every row that represents a field that is relevant for it and colorize it.","title":"Step 3: Define Existing Case Fields"},{"location":"SOP_DISEASES.html#step-4-define-existing-person-fields","text":"Open the Person tab and repeat step 3 for the first table containing the fields that define the details of a person in SORMAS.","title":"Step 4: Define Existing Person Fields"},{"location":"SOP_DISEASES.html#step-5-define-the-relevant-symptoms","text":"Open the Symptoms tab which lists all the symptoms that are currently used in SORMAS. This is a very long list and you will have to go through every single row and define whether this symptom should be tracked for your new disease or not. It's possible that your new disease uses one or more symptoms that are currently not part of SORMAS. In that case, you need to add a new row for each of these symptoms to the bottom of the table and provide the name of the symptom in the Caption column. Most symptoms in SORMAS are simple Yes/No/Unknown fields where Yes means that the symptom is present, No that the symptom is not present and Unknown that there is no information about whether the symptom is present or not. If your symptom can simply be defined by this pattern, you don't have to specify anything else. However, if your symptom is more complex (e.g. there are a number of pre-defined values that the user should choose from), please provide all the necessary details about how the symptom should be specified by users in the Description column.","title":"Step 5: Define the Relevant Symptoms"},{"location":"SOP_DISEASES.html#step-6-define-the-relevant-epidemiological-data","text":"Open the Epidemiological data tab which lists all fields that are used to collect information about the epidemiological background of the case, e.g. whether they visited burials, had contact with a confirmed case or animals. Repeat step 3 for all rows in the first table, and add new rows if your new disease requires information that is not currently collected within SORMAS. As new fields in this tab are likely to be more complex than basic symptoms, make sure to define as much information about how they should function in the Description column.","title":"Step 6: Define the Relevant Epidemiological Data"},{"location":"SOP_DISEASES.html#step-7-define-health-conditions","text":"Open the Health conditions tab which contains a list of pre-existing conditions that are not symptoms of the disease, but are still relevant especially for case management purposes in a hospital. Repeat step 3 for all rows in the first table, and add new rows if there are health conditions relevant for your new disease that are not part of SORMAS yet. As always with new fields, make sure to provide all relevant details in the Description column.","title":"Step 7: Define Health Conditions"},{"location":"SOP_DISEASES.html#step-8-define-new-fields-in-other-areas","text":"It is possible that your disease requires further information to be collected that is not supported by SORMAS yet, e.g. new details about the person, specific information about its hospitalization, or even very important fields that should directly go into the case information. You can use the same process you used to define new symptoms, health conditions or epidemiological data fields by opening the tab in question and adding new rows to the topmost table. At this point, you have finished all the necessary definitions in the Data Dictionary. Save your work and prepare an email with the Data Dictionary file attached to it. Don't send this email before working through the remaining steps though, as there are still a few details that are needed in order to finish the specification of your new disease.","title":"Step 8: Define New Fields in Other Areas"},{"location":"SOP_DISEASES.html#step-9-provide-case-classification-criteria","text":"Optimally, when defining a new disease, you should also specify the criteria SORMAS should use to automatically classify the case as suspect, probable or confirmed. In order to do this in a way that is compatible with the system we use, you will need access to a running SORMAS system (e.g. the play server you can find at https://sormas.org ). Log in as any user (e.g. the default user on the play server), open the About section from the main menu, and open the Case Classification Rules (HTML) document. Please define the classification criteria in a way that is similar to the system used in this document. If available, you can also send us an official document by WHO or your national CDC that specifies the classification criteria.","title":"Step 9: Provide Case Classification Criteria"},{"location":"SOP_DISEASES.html#step-10-provide-additional-information","text":"If there are still things that are necessary in order to properly implement the new disease in SORMAS (you might require us to create a whole new area for cases or there might be very complex mechanics that need a lot more specification), please give us as many details about them as possible. Just put all this information into your email.","title":"Step 10: Provide Additional Information"},{"location":"SOP_DISEASES.html#step-11-send-your-disease-definition-to-the-sormas-team","text":"Send your email containing the updated Data Dictionary file, the case classification criteria and your additional notes to sormas@helmholtz-hzi.de. Congratulations, your work is done! We should now have all the information we need in order to integrate your disease into SORMAS. If there is anything that is unclear or if we need additional details, we will get in touch with you as soon as possible. Thank you so much for contributing to SORMAS and helping us to fight the spread of as many diseases as possible!","title":"Step 11: Send Your Disease Definition to the SORMAS Team"},{"location":"SOP_DISEASES_es-CU.html","text":"POE para agregar nuevas enfermedades a SORMAS Este archivo define el POE (Procedimiento operativo est\u00e1ndar) que se debe seguir al solicitar que el equipo de desarrollo central agregue nuevas enfermedades al sistema. Responder a todas las preguntas de esta gu\u00eda asegurar\u00e1 que podamos integrar nuevas enfermedades en SORMAS lo m\u00e1s r\u00e1pido posible. Contenido Descargar el diccionario de datos Definir los detalles b\u00e1sicos de la enfermedad Definir campos de caso existentes Definir campos de persona existentes Definir los s\u00edntomas relevantes Definir los datos epidemiol\u00f3gicos relevantes Definir las condiciones de salud Definir nuevos campos en otras \u00e1reas Proporcionar criterios de clasificaci\u00f3n de casos Proporcionar informaci\u00f3n adicional Enviar su definici\u00f3n de enfermedad a los desarrolladores de SORMAS Gu\u00eda Paso 1: Descargar el diccionario de datos Descargue el Diccionario de datos m\u00e1s reciente de este repositorio y \u00e1bralo. Nunca utilice una versi\u00f3n del Diccionario de datos que haya descargado anteriormente, ya que es muy probable que su contenido haya cambiado en el \u00ednterin. Utilizar\u00e1 el Diccionario de datos para definir todos los detalles de la nueva enfermedad. Aseg\u00farese de marcar cada adici\u00f3n o cambio (por ejemplo, coloreando el texto o el fondo de la fila en un rojo sutil) para que no perdamos la informaci\u00f3n que ha proporcionado. Paso 2: Definir los detalles b\u00e1sicos de la enfermedad Abra la pesta\u00f1a Case del Diccionario de datos y despl\u00e1cese hacia abajo hasta las tablas que tienen un fondo azul. Estas tablas definen enumeraciones , que son b\u00e1sicamente tipos de datos con valores fijos. Los ejemplos incluyen las diferentes clasificaciones de un caso, el g\u00e9nero de una persona, o las enfermedades que se utilizan en SORMAS. Busque la tabla de enumeraci\u00f3n Disease (consulte la columna Type ) y agregue una nueva fila. Ingrese los siguientes detalles: El nombre de la enfermedad en la columna Caption Opcionalmente, si la enfermedad tiene un nombre largo, un nombre corto o abreviatura en la columna Short Utilice la columna Description para responder las siguientes preguntas: \u00bfTiene la enfermedad seguimiento de contactos ? En caso afirmativo, \u00bfdurante cu\u00e1ntos d\u00edas se debe realizar el seguimiento de contactos? Paso 3: Definir campos de caso existentes Mire las filas en la primera tabla de la pesta\u00f1a Case (que tiene un fondo gris). Esta tabla define todos los campos que se muestran en la pesta\u00f1a Informaci\u00f3n del caso en la aplicaci\u00f3n SORMAS. La columna Caption define el nombre del campo tal como se muestra en la interfaz de usuario, mientras que la columna Diseases especifica qu\u00e9 enfermedades utilizan este campo. Agregue el nombre (o, si est\u00e1 disponible, el nombre corto) de su nueva enfermedad en la columna \"New disease\" de cada fila que represente un campo que sea relevante para su nueva enfermedad y coloree. Paso 4: Definir campos de persona existentes Abra la pesta\u00f1a Person y repita el paso 3 para la primera tabla que contiene los campos que definen los detalles de una persona en SORMAS. Paso 5: Definir los s\u00edntomas relevantes Abra la pesta\u00f1a Symptoms que enumera todos los s\u00edntomas que se utilizan actualmente en SORMAS. Esta es una lista muy larga y tendr\u00e1 que revisar cada fila y definir si este s\u00edntoma es relevante para su nueva enfermedad o no. Es posible que su nueva enfermedad tenga uno o m\u00e1s s\u00edntomas que actualmente no forman parte de SORMAS. En ese caso, debe agregar una nueva fila para cada uno de estos s\u00edntomas al final de la tabla y proporcionar el nombre del s\u00edntoma en la columna Caption . La mayor\u00eda de los s\u00edntomas en SORMAS son simples campos S\u00ed/No/Desconocido donde S\u00ed significa que el s\u00edntoma est\u00e1 presente, No que el s\u00edntoma no est\u00e1 presente, y Desconocido que no hay informaci\u00f3n sobre si el s\u00edntoma est\u00e1 presente o no. Si su s\u00edntoma puede definirse con este patr\u00f3n, no tiene que especificar nada m\u00e1s. Sin embargo, si su s\u00edntoma es m\u00e1s complejo (por ejemplo, hay una serie de valores predefinidos entre los que el usuario debe elegir), proporcione todos los detalles necesarios sobre c\u00f3mo los usuarios deben especificar el s\u00edntoma en la columna Description . Paso 6: Definir los datos epidemiol\u00f3gicos relevantes Abra la pesta\u00f1a Epidemiological data que enumera todos los campos que se utilizan para recolectar informaci\u00f3n sobre los antecedentes epidemiol\u00f3gicos del caso, por ejemplo, si estuvo presente en entierros, tuvo contacto con un caso confirmado o con animales. Repita el paso 3 para todas las filas de la primera tabla y agregue filas nuevas si su nueva enfermedad requiere informaci\u00f3n que no se encuentra actualmente en SORMAS. Dado que es probable que los campos nuevos de esta pesta\u00f1a sean m\u00e1s complejos que los s\u00edntomas b\u00e1sicos, aseg\u00farese de definir la mayor cantidad de informaci\u00f3n posible sobre c\u00f3mo deber\u00edan funcionar en la columna Description . Paso 7: Definir las condiciones de salud Abra la pesta\u00f1a Health conditions que contiene una lista de condiciones preexistentes que no son s\u00edntomas de la enfermedad, pero siguen siendo relevantes, especialmente para la gesti\u00f3n de casos en un hospital. Repita el paso 3 para todas las filas de la primera tabla y agregue nuevas filas si existen condiciones de salud relevantes para su nueva enfermedad que a\u00fan no forman parte de SORMAS. Como siempre con los campos nuevos, aseg\u00farese de proporcionar todos los detalles relevantes en la columna Description . Paso 8: Definir nuevos campos en otras \u00e1reas Es posible que su enfermedad requiera que se recolecte m\u00e1s informaci\u00f3n que a\u00fan no es compatible con SORMAS, por ejemplo, nuevos detalles sobre la persona, informaci\u00f3n espec\u00edfica sobre su hospitalizaci\u00f3n, o incluso campos muy importantes que debieran ir directamente a la informaci\u00f3n del caso. Puede emplear el mismo proceso que utiliz\u00f3 para definir nuevos campos de s\u00edntomas, condiciones de salud, o datos epidemiol\u00f3gicos abriendo la pesta\u00f1a en cuesti\u00f3n y agregando nuevas filas a la primera tabla. En este punto, ha terminado todas las definiciones necesarias en el Diccionario de datos. Guarde su trabajo y prepare un correo electr\u00f3nico con el archivo del Diccionario de datos adjunto. Sin embargo, no env\u00ede este correo electr\u00f3nico antes de seguir los pasos restantes, ya que todav\u00eda hay algunos detalles necesarios para completar la especificaci\u00f3n de su nueva enfermedad. Paso 9: Proporcionar criterios de clasificaci\u00f3n de casos De manera \u00f3ptima, al definir una nueva enfermedad, tambi\u00e9n debe especificar los criterios que SORMAS debe utilizar para clasificar autom\u00e1ticamente el caso como sospechoso, probable o confirmado. Para hacer esto de una manera que sea compatible con el sistema que usamos, necesitar\u00e1 acceso a un sistema de SORMAS en ejecuci\u00f3n (por ejemplo, el servidor experimental que puede encontrar en https://sormas.org). Inicie sesi\u00f3n como cualquier usuario (por ejemplo, el usuario predeterminado en el servidor experimental), abra la secci\u00f3n About en el men\u00fa principal y abra el documento Case Classification Rules (HTML) . Defina los criterios de clasificaci\u00f3n de forma similar al sistema utilizado en este documento. Si est\u00e1 disponible, tambi\u00e9n puede enviarnos un documento oficial de la OMS o su CCE nacional que especifique los criterios de clasificaci\u00f3n. Paso 10: Proporcionar informaci\u00f3n adicional Si todav\u00eda hay cosas que son necesarias para implementar correctamente la nueva enfermedad en SORMAS (es posible que nos solicite crear un \u00e1rea completamente nueva para los casos, o puede haber mec\u00e1nicas muy complejas que necesitan muchas m\u00e1s especificaciones), ind\u00edquenos tantos detalles sobre ellas como sea posible. Simplemente escriba toda esa informaci\u00f3n en su correo electr\u00f3nico. Paso 11: Enviar su definici\u00f3n de enfermedad al equipo de SORMAS Env\u00ede su correo electr\u00f3nico con el archivo actualizado del Diccionario de datos, los criterios de clasificaci\u00f3n de casos, y sus notas adicionales a sormas@helmholtz-hzi.de. \u00a1Felicitaciones, su trabajo est\u00e1 hecho! Ahora deber\u00edamos tener toda la informaci\u00f3n que necesitamos para integrar su enfermedad en SORMAS. Si hay algo que no est\u00e1 claro o si necesitamos detalles adicionales, nos pondremos en contacto con usted lo antes posible. \u00a1Muchas gracias por contribuir a SORMAS y ayudarnos a combatir la propagaci\u00f3n de tantas enfermedades como sea posible!","title":"POE para agregar nuevas enfermedades a SORMAS"},{"location":"SOP_DISEASES_es-CU.html#poe-para-agregar-nuevas-enfermedades-a-sormas","text":"Este archivo define el POE (Procedimiento operativo est\u00e1ndar) que se debe seguir al solicitar que el equipo de desarrollo central agregue nuevas enfermedades al sistema. Responder a todas las preguntas de esta gu\u00eda asegurar\u00e1 que podamos integrar nuevas enfermedades en SORMAS lo m\u00e1s r\u00e1pido posible.","title":"POE para agregar nuevas enfermedades a SORMAS"},{"location":"SOP_DISEASES_es-CU.html#contenido","text":"Descargar el diccionario de datos Definir los detalles b\u00e1sicos de la enfermedad Definir campos de caso existentes Definir campos de persona existentes Definir los s\u00edntomas relevantes Definir los datos epidemiol\u00f3gicos relevantes Definir las condiciones de salud Definir nuevos campos en otras \u00e1reas Proporcionar criterios de clasificaci\u00f3n de casos Proporcionar informaci\u00f3n adicional Enviar su definici\u00f3n de enfermedad a los desarrolladores de SORMAS","title":"Contenido"},{"location":"SOP_DISEASES_es-CU.html#guia","text":"","title":"Gu\u00eda"},{"location":"SOP_DISEASES_es-CU.html#paso-1-descargar-el-diccionario-de-datos","text":"Descargue el Diccionario de datos m\u00e1s reciente de este repositorio y \u00e1bralo. Nunca utilice una versi\u00f3n del Diccionario de datos que haya descargado anteriormente, ya que es muy probable que su contenido haya cambiado en el \u00ednterin. Utilizar\u00e1 el Diccionario de datos para definir todos los detalles de la nueva enfermedad. Aseg\u00farese de marcar cada adici\u00f3n o cambio (por ejemplo, coloreando el texto o el fondo de la fila en un rojo sutil) para que no perdamos la informaci\u00f3n que ha proporcionado.","title":"Paso 1: Descargar el diccionario de datos"},{"location":"SOP_DISEASES_es-CU.html#paso-2-definir-los-detalles-basicos-de-la-enfermedad","text":"Abra la pesta\u00f1a Case del Diccionario de datos y despl\u00e1cese hacia abajo hasta las tablas que tienen un fondo azul. Estas tablas definen enumeraciones , que son b\u00e1sicamente tipos de datos con valores fijos. Los ejemplos incluyen las diferentes clasificaciones de un caso, el g\u00e9nero de una persona, o las enfermedades que se utilizan en SORMAS. Busque la tabla de enumeraci\u00f3n Disease (consulte la columna Type ) y agregue una nueva fila. Ingrese los siguientes detalles: El nombre de la enfermedad en la columna Caption Opcionalmente, si la enfermedad tiene un nombre largo, un nombre corto o abreviatura en la columna Short Utilice la columna Description para responder las siguientes preguntas: \u00bfTiene la enfermedad seguimiento de contactos ? En caso afirmativo, \u00bfdurante cu\u00e1ntos d\u00edas se debe realizar el seguimiento de contactos?","title":"Paso 2: Definir los detalles b\u00e1sicos de la enfermedad"},{"location":"SOP_DISEASES_es-CU.html#paso-3-definir-campos-de-caso-existentes","text":"Mire las filas en la primera tabla de la pesta\u00f1a Case (que tiene un fondo gris). Esta tabla define todos los campos que se muestran en la pesta\u00f1a Informaci\u00f3n del caso en la aplicaci\u00f3n SORMAS. La columna Caption define el nombre del campo tal como se muestra en la interfaz de usuario, mientras que la columna Diseases especifica qu\u00e9 enfermedades utilizan este campo. Agregue el nombre (o, si est\u00e1 disponible, el nombre corto) de su nueva enfermedad en la columna \"New disease\" de cada fila que represente un campo que sea relevante para su nueva enfermedad y coloree.","title":"Paso 3: Definir campos de caso existentes"},{"location":"SOP_DISEASES_es-CU.html#paso-4-definir-campos-de-persona-existentes","text":"Abra la pesta\u00f1a Person y repita el paso 3 para la primera tabla que contiene los campos que definen los detalles de una persona en SORMAS.","title":"Paso 4: Definir campos de persona existentes"},{"location":"SOP_DISEASES_es-CU.html#paso-5-definir-los-sintomas-relevantes","text":"Abra la pesta\u00f1a Symptoms que enumera todos los s\u00edntomas que se utilizan actualmente en SORMAS. Esta es una lista muy larga y tendr\u00e1 que revisar cada fila y definir si este s\u00edntoma es relevante para su nueva enfermedad o no. Es posible que su nueva enfermedad tenga uno o m\u00e1s s\u00edntomas que actualmente no forman parte de SORMAS. En ese caso, debe agregar una nueva fila para cada uno de estos s\u00edntomas al final de la tabla y proporcionar el nombre del s\u00edntoma en la columna Caption . La mayor\u00eda de los s\u00edntomas en SORMAS son simples campos S\u00ed/No/Desconocido donde S\u00ed significa que el s\u00edntoma est\u00e1 presente, No que el s\u00edntoma no est\u00e1 presente, y Desconocido que no hay informaci\u00f3n sobre si el s\u00edntoma est\u00e1 presente o no. Si su s\u00edntoma puede definirse con este patr\u00f3n, no tiene que especificar nada m\u00e1s. Sin embargo, si su s\u00edntoma es m\u00e1s complejo (por ejemplo, hay una serie de valores predefinidos entre los que el usuario debe elegir), proporcione todos los detalles necesarios sobre c\u00f3mo los usuarios deben especificar el s\u00edntoma en la columna Description .","title":"Paso 5: Definir los s\u00edntomas relevantes"},{"location":"SOP_DISEASES_es-CU.html#paso-6-definir-los-datos-epidemiologicos-relevantes","text":"Abra la pesta\u00f1a Epidemiological data que enumera todos los campos que se utilizan para recolectar informaci\u00f3n sobre los antecedentes epidemiol\u00f3gicos del caso, por ejemplo, si estuvo presente en entierros, tuvo contacto con un caso confirmado o con animales. Repita el paso 3 para todas las filas de la primera tabla y agregue filas nuevas si su nueva enfermedad requiere informaci\u00f3n que no se encuentra actualmente en SORMAS. Dado que es probable que los campos nuevos de esta pesta\u00f1a sean m\u00e1s complejos que los s\u00edntomas b\u00e1sicos, aseg\u00farese de definir la mayor cantidad de informaci\u00f3n posible sobre c\u00f3mo deber\u00edan funcionar en la columna Description .","title":"Paso 6: Definir los datos epidemiol\u00f3gicos relevantes"},{"location":"SOP_DISEASES_es-CU.html#paso-7-definir-las-condiciones-de-salud","text":"Abra la pesta\u00f1a Health conditions que contiene una lista de condiciones preexistentes que no son s\u00edntomas de la enfermedad, pero siguen siendo relevantes, especialmente para la gesti\u00f3n de casos en un hospital. Repita el paso 3 para todas las filas de la primera tabla y agregue nuevas filas si existen condiciones de salud relevantes para su nueva enfermedad que a\u00fan no forman parte de SORMAS. Como siempre con los campos nuevos, aseg\u00farese de proporcionar todos los detalles relevantes en la columna Description .","title":"Paso 7: Definir las condiciones de salud"},{"location":"SOP_DISEASES_es-CU.html#paso-8-definir-nuevos-campos-en-otras-areas","text":"Es posible que su enfermedad requiera que se recolecte m\u00e1s informaci\u00f3n que a\u00fan no es compatible con SORMAS, por ejemplo, nuevos detalles sobre la persona, informaci\u00f3n espec\u00edfica sobre su hospitalizaci\u00f3n, o incluso campos muy importantes que debieran ir directamente a la informaci\u00f3n del caso. Puede emplear el mismo proceso que utiliz\u00f3 para definir nuevos campos de s\u00edntomas, condiciones de salud, o datos epidemiol\u00f3gicos abriendo la pesta\u00f1a en cuesti\u00f3n y agregando nuevas filas a la primera tabla. En este punto, ha terminado todas las definiciones necesarias en el Diccionario de datos. Guarde su trabajo y prepare un correo electr\u00f3nico con el archivo del Diccionario de datos adjunto. Sin embargo, no env\u00ede este correo electr\u00f3nico antes de seguir los pasos restantes, ya que todav\u00eda hay algunos detalles necesarios para completar la especificaci\u00f3n de su nueva enfermedad.","title":"Paso 8: Definir nuevos campos en otras \u00e1reas"},{"location":"SOP_DISEASES_es-CU.html#paso-9-proporcionar-criterios-de-clasificacion-de-casos","text":"De manera \u00f3ptima, al definir una nueva enfermedad, tambi\u00e9n debe especificar los criterios que SORMAS debe utilizar para clasificar autom\u00e1ticamente el caso como sospechoso, probable o confirmado. Para hacer esto de una manera que sea compatible con el sistema que usamos, necesitar\u00e1 acceso a un sistema de SORMAS en ejecuci\u00f3n (por ejemplo, el servidor experimental que puede encontrar en https://sormas.org). Inicie sesi\u00f3n como cualquier usuario (por ejemplo, el usuario predeterminado en el servidor experimental), abra la secci\u00f3n About en el men\u00fa principal y abra el documento Case Classification Rules (HTML) . Defina los criterios de clasificaci\u00f3n de forma similar al sistema utilizado en este documento. Si est\u00e1 disponible, tambi\u00e9n puede enviarnos un documento oficial de la OMS o su CCE nacional que especifique los criterios de clasificaci\u00f3n.","title":"Paso 9: Proporcionar criterios de clasificaci\u00f3n de casos"},{"location":"SOP_DISEASES_es-CU.html#paso-10-proporcionar-informacion-adicional","text":"Si todav\u00eda hay cosas que son necesarias para implementar correctamente la nueva enfermedad en SORMAS (es posible que nos solicite crear un \u00e1rea completamente nueva para los casos, o puede haber mec\u00e1nicas muy complejas que necesitan muchas m\u00e1s especificaciones), ind\u00edquenos tantos detalles sobre ellas como sea posible. Simplemente escriba toda esa informaci\u00f3n en su correo electr\u00f3nico.","title":"Paso 10: Proporcionar informaci\u00f3n adicional"},{"location":"SOP_DISEASES_es-CU.html#paso-11-enviar-su-definicion-de-enfermedad-al-equipo-de-sormas","text":"Env\u00ede su correo electr\u00f3nico con el archivo actualizado del Diccionario de datos, los criterios de clasificaci\u00f3n de casos, y sus notas adicionales a sormas@helmholtz-hzi.de. \u00a1Felicitaciones, su trabajo est\u00e1 hecho! Ahora deber\u00edamos tener toda la informaci\u00f3n que necesitamos para integrar su enfermedad en SORMAS. Si hay algo que no est\u00e1 claro o si necesitamos detalles adicionales, nos pondremos en contacto con usted lo antes posible. \u00a1Muchas gracias por contribuir a SORMAS y ayudarnos a combatir la propagaci\u00f3n de tantas enfermedades como sea posible!","title":"Paso 11: Enviar su definici\u00f3n de enfermedad al equipo de SORMAS"},{"location":"TROUBLESHOOTING.html","text":"Troubleshooting Please consult this collection of solutions to common problems if you have any issues before issuing a support request or asking developers for help. Also note that this resource has only been added recently and will be extended in the future. If you have encountered (and fixed) any issue that you think would be worth adding to this list, please don't hesitate to let us know! Android Application FAQ Q: I don't see a logout option anywhere in the mobile app. How can I change my user? A: The logout option is hidden by default because users in the field often don't know their own passwords, but their devices are instead set up by a supervisor. If you want to change your user, go to the Settings screen and tap the version number five times to bring up additional options, including the logout option. IDE Troubleshooting: Android Studio If for some reason the Android App is not building correctly (for example due to unexpected ClassNotFoundExceptions ), here is what you should try: - Clean the Project (Build -> Clean Project) - Invalidate Caches (File -> Invalidate Caches / Restart...) - Wipe your Android VM (AVD Manager -> Wipe Data) If you get this exception: Unable to load class 'javax.xml.bind.JAXBException' , the reason is most likely a faulty JDK version. For the androidapp, you need Java JDK 8. To change the JDK, go to File -> Project Structure -> JDK Location and select a valid JDK (on Linux, check the folder /usr/lib/jvm and/or install if necessary: sudo apt install openjdk-8-jdk ) IDE Troubleshooting: eclipse Deployment Problems Unfortunately, when using eclipse together with the Payara Tools, there are a number of deployment problems that you might run into. Examples of these include: ClassDefNotFoundExceptions after deploying the artifacts and logging in to the web app Error messages in eclipse telling you that the deployment failed There are a couple of things you can do to fix these problems: Do a Maven update for all projects Stop and restart the server Re-deploy the server artifacts If the problem occurred right after you've pulled new code from GitHub, your safest bet is probably to start with the Maven update. For most other problems, a simple re-deployment or, if necessary, server restart should suffice. News Feeds Polling When running eclipse with JDK 11, you might encounter the following error message: An internal error occurred during: \"Polling news feeds\". javax/xml/bind/JAXBContext . To fix it, disable Window --> Preferences --> General --> News --> \"Enable automatic news polling\" .","title":"Troubleshooting"},{"location":"TROUBLESHOOTING.html#troubleshooting","text":"Please consult this collection of solutions to common problems if you have any issues before issuing a support request or asking developers for help. Also note that this resource has only been added recently and will be extended in the future. If you have encountered (and fixed) any issue that you think would be worth adding to this list, please don't hesitate to let us know!","title":"Troubleshooting"},{"location":"TROUBLESHOOTING.html#android-application-faq","text":"Q: I don't see a logout option anywhere in the mobile app. How can I change my user? A: The logout option is hidden by default because users in the field often don't know their own passwords, but their devices are instead set up by a supervisor. If you want to change your user, go to the Settings screen and tap the version number five times to bring up additional options, including the logout option.","title":"Android Application FAQ"},{"location":"TROUBLESHOOTING.html#ide-troubleshooting-android-studio","text":"If for some reason the Android App is not building correctly (for example due to unexpected ClassNotFoundExceptions ), here is what you should try: - Clean the Project (Build -> Clean Project) - Invalidate Caches (File -> Invalidate Caches / Restart...) - Wipe your Android VM (AVD Manager -> Wipe Data) If you get this exception: Unable to load class 'javax.xml.bind.JAXBException' , the reason is most likely a faulty JDK version. For the androidapp, you need Java JDK 8. To change the JDK, go to File -> Project Structure -> JDK Location and select a valid JDK (on Linux, check the folder /usr/lib/jvm and/or install if necessary: sudo apt install openjdk-8-jdk )","title":"IDE Troubleshooting: Android Studio"},{"location":"TROUBLESHOOTING.html#ide-troubleshooting-eclipse","text":"","title":"IDE Troubleshooting: eclipse"},{"location":"TROUBLESHOOTING.html#deployment-problems","text":"Unfortunately, when using eclipse together with the Payara Tools, there are a number of deployment problems that you might run into. Examples of these include: ClassDefNotFoundExceptions after deploying the artifacts and logging in to the web app Error messages in eclipse telling you that the deployment failed There are a couple of things you can do to fix these problems: Do a Maven update for all projects Stop and restart the server Re-deploy the server artifacts If the problem occurred right after you've pulled new code from GitHub, your safest bet is probably to start with the Maven update. For most other problems, a simple re-deployment or, if necessary, server restart should suffice.","title":"Deployment Problems"},{"location":"TROUBLESHOOTING.html#news-feeds-polling","text":"When running eclipse with JDK 11, you might encounter the following error message: An internal error occurred during: \"Polling news feeds\". javax/xml/bind/JAXBContext . To fix it, disable Window --> Preferences --> General --> News --> \"Enable automatic news polling\" .","title":"News Feeds Polling"},{"location":"sormas-base/doc/keycloak.html","text":"Keycloak Open Source Identity and Access Management. In SORMAS Keycloak is available as an alternative authentication provider to the default authentication method. Current version is: Keycloak 12 Setup To set up Keycloak check the guide here Keycloak Setup SORMAS Realm The SORMAS Realm in Keycloak contains all the configuration which are specific to the SORMAS Project. All the configuration is part of the setup/keycloak/SORMAS.json file. Configuration summary Login & Authentication Duplicate emails are allowed in order to support the same requirement as SORMAS which in some installations require admin support for some users, in which case the admin will use her own email address No login with emails due to the previous point Password Policy comes predefined since version 1.54 of the SORMAS-Project with the following default settings Length of minimum 12 characters At least 1 upper case letter At least 1 lower case letter At least 1 digit At least 1 special character OTP is supported by default trough the Google Authenticator or Free OTP by has to be activated from the Keycloak Admin console Forgot Password is enabled by default sormas-sha256 is an encryption algorithm which comes packaged with Keycloak to support transition of existing environments towards the Keycloak Authentication Provider Clients The SORMAS Realm relies on 4 clients: sormas-ui - handles access to the SORMAS wen UI sormas-app - handles access to the SORMAS Android App sormas-rest - handles access to the SORMAS API sormas-backend - handles SORMAS server requests Roles The role management is handled by SORMAS however as a pre-validation Keycloak is also configured with a few roles which are required for certain API access: * USER - required by default for any API access * REST_USER - required for most API endpoints (main purpose is for the SurvNet converter) * REST_EXTERNAL_VISITS_USER - required by Symptom Journals which are connected to SORMAS * SORMAS_TO_SORMAS_CLIENT - required by other SORMAS instance to access the current SORMAS instance Email Email configurations are optional and are not part of the default configuration. In case the system relies on users activating their own accounts it's required to configure these settings. Custom Configuration The configuration provided by default is the minimum required configuration for Keycloak to work together with SORMAS. The Keycloak configuration can be adjusted by any user with admin rights, however beware that any change to the default configuration might render the system unusable. The following configurations are most likely to be environment specific: Email Settings make sure to set an email for the admin user, so the Test connection feature works Password Policies The Password Blacklist policy can only be configured with access to the host machine OTP Policies Can be activated by default for all user by marking Basic Auth Password+OTP as required in the Authentication>Flows section, then mark it as default in the Authentication>Required section","title":"Keycloak"},{"location":"sormas-base/doc/keycloak.html#keycloak","text":"Open Source Identity and Access Management. In SORMAS Keycloak is available as an alternative authentication provider to the default authentication method. Current version is: Keycloak 12","title":"Keycloak"},{"location":"sormas-base/doc/keycloak.html#setup","text":"To set up Keycloak check the guide here Keycloak Setup","title":"Setup"},{"location":"sormas-base/doc/keycloak.html#sormas-realm","text":"The SORMAS Realm in Keycloak contains all the configuration which are specific to the SORMAS Project. All the configuration is part of the setup/keycloak/SORMAS.json file.","title":"SORMAS Realm"},{"location":"sormas-base/doc/keycloak.html#configuration-summary","text":"","title":"Configuration summary"},{"location":"sormas-base/doc/keycloak.html#login-authentication","text":"Duplicate emails are allowed in order to support the same requirement as SORMAS which in some installations require admin support for some users, in which case the admin will use her own email address No login with emails due to the previous point Password Policy comes predefined since version 1.54 of the SORMAS-Project with the following default settings Length of minimum 12 characters At least 1 upper case letter At least 1 lower case letter At least 1 digit At least 1 special character OTP is supported by default trough the Google Authenticator or Free OTP by has to be activated from the Keycloak Admin console Forgot Password is enabled by default sormas-sha256 is an encryption algorithm which comes packaged with Keycloak to support transition of existing environments towards the Keycloak Authentication Provider","title":"Login &amp; Authentication"},{"location":"sormas-base/doc/keycloak.html#clients","text":"The SORMAS Realm relies on 4 clients: sormas-ui - handles access to the SORMAS wen UI sormas-app - handles access to the SORMAS Android App sormas-rest - handles access to the SORMAS API sormas-backend - handles SORMAS server requests","title":"Clients"},{"location":"sormas-base/doc/keycloak.html#roles","text":"The role management is handled by SORMAS however as a pre-validation Keycloak is also configured with a few roles which are required for certain API access: * USER - required by default for any API access * REST_USER - required for most API endpoints (main purpose is for the SurvNet converter) * REST_EXTERNAL_VISITS_USER - required by Symptom Journals which are connected to SORMAS * SORMAS_TO_SORMAS_CLIENT - required by other SORMAS instance to access the current SORMAS instance","title":"Roles"},{"location":"sormas-base/doc/keycloak.html#email","text":"Email configurations are optional and are not part of the default configuration. In case the system relies on users activating their own accounts it's required to configure these settings.","title":"Email"},{"location":"sormas-base/doc/keycloak.html#custom-configuration","text":"The configuration provided by default is the minimum required configuration for Keycloak to work together with SORMAS. The Keycloak configuration can be adjusted by any user with admin rights, however beware that any change to the default configuration might render the system unusable. The following configurations are most likely to be environment specific: Email Settings make sure to set an email for the admin user, so the Test connection feature works Password Policies The Password Blacklist policy can only be configured with access to the host machine OTP Policies Can be activated by default for all user by marking Basic Auth Password+OTP as required in the Authentication>Flows section, then mark it as default in the Authentication>Required section","title":"Custom Configuration"},{"location":"sormas-cargoserver/index.html","text":"SORMAS development server setup using maven-cargo This module installs a local Payara server, deploys the previously built SORMAS artifacts and starts the server. The server installation is located in the project build directory ( target/cargo ), as well as the SORMAS server directories ( target/sormasfolders ). Prerequisites This setup requires a working Java, maven, and docker(-compose) environment. Configuration The configuration of the docker setup and the payara domain setup are defined by the generated file .env . It configures port and server of the sormas-postgres docker container or another postgres database, as well as other ports defined in the domain.xml . Properties used in the payara deployment are configured in the generated file target/sormas.properties . Both .env and sormas.properties can be customized by adding a file custom.env respectively custom.properties in the project base directory, where additional properties for the respective purpose are defined. Already defined properties are overwritten. Both custom.env and custom.properties are excluded in .gitignore , so local customizations are protected from accidental commits. To run the cargo server against an existing database, configure SORMAS_POSTGRES_SERVER=<database-server> SORMAS_POSTGRES_PORT=<database-port> in file custom.env and skip the docker-compose step in the server setup (see file custom.env.example ). To add properties to the generated sormas.properties , configure e.g. custombranding=true custombranding.name=<name> custombranding.logo.path=<logopath> in file custom.properties (see file custom.properties.example ). After adjusting the configurations, (re)run mvn install and (re)start the server. Build the project (simple) The most convenient way to build and deploy the SORMAS artifacts to cargo is to use build_deploy.sh . Build the project (details) Build all SORMAS artifacts: cd sormas-base && mvn install Start SORMAS-PostgreSQL docker container cd sormas-cargoserver && docker-compose up -d Start local SORMAS server cd sormas-cargoserver && mvn cargo:run Visit Once the deployment is completed, you can navigate to http://localhost:6080/sormas-ui and login as admin with password sadmin . Stop local SORMAS server cd sormas-cargoserver && mvn cargo:stop Stop DB SORMAS-PostgreSQL docker container cd sormas-cargoserver && docker-compose down Remove docker volume (if intended) The SORMAS-PostgreSQL docker container uses a named docker volume: $ docker volume ls DRIVER VOLUME NAME local sormas-cargoserver_psqldata_cargoserver To remove this docker volume: sudo docker volume rm sormas-cargoserver_psqldata_cargoserver","title":"Cargo Server"},{"location":"sormas-cargoserver/index.html#sormas-development-server-setup-using-maven-cargo","text":"This module installs a local Payara server, deploys the previously built SORMAS artifacts and starts the server. The server installation is located in the project build directory ( target/cargo ), as well as the SORMAS server directories ( target/sormasfolders ).","title":"SORMAS development server setup using maven-cargo"},{"location":"sormas-cargoserver/index.html#prerequisites","text":"This setup requires a working Java, maven, and docker(-compose) environment.","title":"Prerequisites"},{"location":"sormas-cargoserver/index.html#configuration","text":"The configuration of the docker setup and the payara domain setup are defined by the generated file .env . It configures port and server of the sormas-postgres docker container or another postgres database, as well as other ports defined in the domain.xml . Properties used in the payara deployment are configured in the generated file target/sormas.properties . Both .env and sormas.properties can be customized by adding a file custom.env respectively custom.properties in the project base directory, where additional properties for the respective purpose are defined. Already defined properties are overwritten. Both custom.env and custom.properties are excluded in .gitignore , so local customizations are protected from accidental commits. To run the cargo server against an existing database, configure SORMAS_POSTGRES_SERVER=<database-server> SORMAS_POSTGRES_PORT=<database-port> in file custom.env and skip the docker-compose step in the server setup (see file custom.env.example ). To add properties to the generated sormas.properties , configure e.g. custombranding=true custombranding.name=<name> custombranding.logo.path=<logopath> in file custom.properties (see file custom.properties.example ). After adjusting the configurations, (re)run mvn install and (re)start the server.","title":"Configuration"},{"location":"sormas-cargoserver/index.html#build-the-project-simple","text":"The most convenient way to build and deploy the SORMAS artifacts to cargo is to use build_deploy.sh .","title":"Build the project (simple)"},{"location":"sormas-cargoserver/index.html#build-the-project-details","text":"Build all SORMAS artifacts: cd sormas-base && mvn install","title":"Build the project (details)"},{"location":"sormas-cargoserver/index.html#start-sormas-postgresql-docker-container","text":"cd sormas-cargoserver && docker-compose up -d","title":"Start SORMAS-PostgreSQL docker container"},{"location":"sormas-cargoserver/index.html#start-local-sormas-server","text":"cd sormas-cargoserver && mvn cargo:run","title":"Start local SORMAS server"},{"location":"sormas-cargoserver/index.html#visit","text":"Once the deployment is completed, you can navigate to http://localhost:6080/sormas-ui and login as admin with password sadmin .","title":"Visit"},{"location":"sormas-cargoserver/index.html#stop-local-sormas-server","text":"cd sormas-cargoserver && mvn cargo:stop","title":"Stop local SORMAS server"},{"location":"sormas-cargoserver/index.html#stop-db-sormas-postgresql-docker-container","text":"cd sormas-cargoserver && docker-compose down","title":"Stop DB SORMAS-PostgreSQL docker container"},{"location":"sormas-cargoserver/index.html#remove-docker-volume-if-intended","text":"The SORMAS-PostgreSQL docker container uses a named docker volume: $ docker volume ls DRIVER VOLUME NAME local sormas-cargoserver_psqldata_cargoserver To remove this docker volume: sudo docker volume rm sormas-cargoserver_psqldata_cargoserver","title":"Remove docker volume (if intended)"},{"location":"sormas-keycloak-service-provider/index.html","text":"Custom SORMAS Keycloak Service Provider For more information about the Service Provider Interface see: https://www.keycloak.org/docs/11.0/server_development/#_providers SORMAS Password Hash Provider This Service Provider is implementing in Keycloak a Hash Mechanism for passwords similar to the one used in SORMAS to allow migrating of credentials for already existing users. Since SORMAS and Keycloak are using different hashing techniques, the SormasPasswordHashProvider replicates the SORMAS technique by importing the sormas-api dependency where the technique is defined. SORMAS Hashing Technique For more info about the SORMAS hashing technique see sormas-api/src/main/java/de/symeda/sormas/api/utils/PasswordHelper.java In Keycloak this algorithm will be identifiable by the id sormas-sha256 . Keycloak Hashing Technique Keycloak supports a more configurable approach to password policy which can be customized for each system. See Password Policies . SORMAS User Password Sync There are only 2 ways of synchronizing the user's password from SORMAS into Keycloak: * whenever a user is created for the first time in Keycloak - being triggered from SORMAS * whenever a user's password is updated in SORMAS, and the user doesn't have an email address setup For any of the events about the user's credentials in Keycloak are overwritten by those from SORMAS, and the hashing algorithm will be changed to sormas-sha256 . However once a user chooses to change their password in Keycloak (trough the Forgot Password mechanism or by the admin), their credentials will be updated using the default or configured Password Policies from Keycloak. Deployment of the SPI To deploy the Custom SPI, make sure to build this project and then follow the steps described in Register an SPI Using the Keycloak Deployer","title":"Keycloak Service Provider"},{"location":"sormas-keycloak-service-provider/index.html#custom-sormas-keycloak-service-provider","text":"For more information about the Service Provider Interface see: https://www.keycloak.org/docs/11.0/server_development/#_providers","title":"Custom SORMAS Keycloak Service Provider"},{"location":"sormas-keycloak-service-provider/index.html#sormas-password-hash-provider","text":"This Service Provider is implementing in Keycloak a Hash Mechanism for passwords similar to the one used in SORMAS to allow migrating of credentials for already existing users. Since SORMAS and Keycloak are using different hashing techniques, the SormasPasswordHashProvider replicates the SORMAS technique by importing the sormas-api dependency where the technique is defined.","title":"SORMAS Password Hash Provider"},{"location":"sormas-keycloak-service-provider/index.html#sormas-hashing-technique","text":"For more info about the SORMAS hashing technique see sormas-api/src/main/java/de/symeda/sormas/api/utils/PasswordHelper.java In Keycloak this algorithm will be identifiable by the id sormas-sha256 .","title":"SORMAS Hashing Technique"},{"location":"sormas-keycloak-service-provider/index.html#keycloak-hashing-technique","text":"Keycloak supports a more configurable approach to password policy which can be customized for each system. See Password Policies .","title":"Keycloak Hashing Technique"},{"location":"sormas-keycloak-service-provider/index.html#sormas-user-password-sync","text":"There are only 2 ways of synchronizing the user's password from SORMAS into Keycloak: * whenever a user is created for the first time in Keycloak - being triggered from SORMAS * whenever a user's password is updated in SORMAS, and the user doesn't have an email address setup For any of the events about the user's credentials in Keycloak are overwritten by those from SORMAS, and the hashing algorithm will be changed to sormas-sha256 . However once a user chooses to change their password in Keycloak (trough the Forgot Password mechanism or by the admin), their credentials will be updated using the default or configured Password Policies from Keycloak.","title":"SORMAS User Password Sync"},{"location":"sormas-keycloak-service-provider/index.html#deployment-of-the-spi","text":"To deploy the Custom SPI, make sure to build this project and then follow the steps described in Register an SPI Using the Keycloak Deployer","title":"Deployment of the SPI"},{"location":"sormas-rest/index.html","text":"REST interface for SORMAS Authentication Access to the API is restricted by HTTP Basic Authentication. You need to add a user to your instance with the REST role attached to it. Use the username and password of the REST user as credentials for your HTTP requests. API Documentation The SORMAS REST API is documented automatically. The OpenAPI specification files are generated during the build process and can be found at ${Project Root}/sormas-rest/target/swagger.{json,yaml} . You can render the OpenAPI specification with tools like editor.swagger.io . This allows you to inspect endpoints and example payloads, generate a matching API client for many languages, and to easily interact with the API of a live instance. OpenAPI / Swagger The OpenAPI files are generated with the swagger-maven-plugin and the Swagger Annotation Framework [1] . If you are only interested in the OpenAPI specification files, you may either download a recent SORMAS release where the files reside in the openapi directory, or execute the following command inside the sormas-base module's directory to build them for yourself: # Requires Maven to be installed! mvn package --projects ../sormas-rest --also-make -Dmaven.test.skip=true The specification files are created at the path specified above. [1] Swagger Annotations Guide on Github: https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Annotations","title":"REST"},{"location":"sormas-rest/index.html#rest-interface-for-sormas","text":"","title":"REST interface for SORMAS"},{"location":"sormas-rest/index.html#authentication","text":"Access to the API is restricted by HTTP Basic Authentication. You need to add a user to your instance with the REST role attached to it. Use the username and password of the REST user as credentials for your HTTP requests.","title":"Authentication"},{"location":"sormas-rest/index.html#api-documentation","text":"The SORMAS REST API is documented automatically. The OpenAPI specification files are generated during the build process and can be found at ${Project Root}/sormas-rest/target/swagger.{json,yaml} . You can render the OpenAPI specification with tools like editor.swagger.io . This allows you to inspect endpoints and example payloads, generate a matching API client for many languages, and to easily interact with the API of a live instance.","title":"API Documentation"},{"location":"sormas-rest/index.html#openapi-swagger","text":"The OpenAPI files are generated with the swagger-maven-plugin and the Swagger Annotation Framework [1] . If you are only interested in the OpenAPI specification files, you may either download a recent SORMAS release where the files reside in the openapi directory, or execute the following command inside the sormas-base module's directory to build them for yourself: # Requires Maven to be installed! mvn package --projects ../sormas-rest --also-make -Dmaven.test.skip=true The specification files are created at the path specified above. [1] Swagger Annotations Guide on Github: https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Annotations","title":"OpenAPI / Swagger"}]}